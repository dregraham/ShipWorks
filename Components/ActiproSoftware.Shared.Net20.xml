<?xml version="1.0"?><doc><assembly><name>ActiproSoftware.Shared.Net20</name></assembly><members><member name="T:ActiproSoftware.ComponentModel.IWeakEventListener"><summary>
            Provides the base requirements for an object that can receive weak events.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)"><summary>
            Handles a weak event.
            </summary><param name="managerType">The type of weak event manager.</param><param name="sender">The sender of the event.</param><param name="e">The event arguments.</param><returns><c>true</c> if the listener handled the event; otherwise, <c>false</c>.
            </returns></member><member name="T:ActiproSoftware.ComponentModel.DefaultableBoolean"><summary>
            Specifies that boolean value that can also be set to use a default.
            </summary></member><member name="F:ActiproSoftware.ComponentModel.DefaultableBoolean.Default"><summary>
            Represents the default value.
            </summary></member><member name="F:ActiproSoftware.ComponentModel.DefaultableBoolean.True"><summary>
            Represents a true value.
            </summary></member><member name="F:ActiproSoftware.ComponentModel.DefaultableBoolean.False"><summary>
            Represents a false value.
            </summary></member><member name="T:ActiproSoftware.ComponentModel.DefaultableInt32"><summary>
            Provides a representation for an <see cref="T:System.Int32" /> that can be defaulted.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.DefaultableInt32.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.ComponentModel.DefaultableInt32.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.ComponentModel.DefaultableInt32.#ctor(System.Int32)"><summary>
            Initializes a new instance of the <c>DefaultableInt32</c> structure.
            </summary><param name="value">The integer value of the structure.</param></member><member name="P:ActiproSoftware.ComponentModel.DefaultableInt32.Default"><summary>
            Gets the <see cref="T:ActiproSoftware.ComponentModel.DefaultableInt32" /> that represents a default value.
            </summary><value>The <see cref="T:ActiproSoftware.ComponentModel.DefaultableInt32" /> that represents a default value.</value></member><member name="P:ActiproSoftware.ComponentModel.DefaultableInt32.IsDefault"><summary>
            Gets whether the value of the structure is flagged as a default.
            </summary><value><c>true</c> if the value of the structure is flagged as a default; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.ComponentModel.DefaultableInt32.Value"><summary>
            Gets the value of the structure.
            </summary><value>The value of the structure.</value></member><member name="T:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase"><summary>
            Extends design-time behavior for a <see cref="T:System.ComponentModel.Component" />.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.CreateComponent(System.Type)"><summary>
            Creates a <c>IComponent</c> of the specified type.
            </summary><param name="componentClass">The <c>Type</c> of the <c>IComponent</c> to create.</param><returns>The <c>IComponent</c> that was created.</returns></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.EnsureSingleInstance"><summary>
            Ensures that there is only one instance of the component in the host container.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.InitializeVerbs"><summary>
            Implemented by inheritors to initialize the <see cref="P:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.Verbs" /> property.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.SetSelection(System.Object)"><summary>
            Replaces the current selection with a single <see cref="T:System.Object" />.
            </summary><param name="component">The <see cref="T:System.Object" /> to select.</param></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.ComponentChangeService"><summary>
            Gets the <c>IComponentChangeService</c> in use by the designer.
            </summary><value>The <c>IComponentChangeService</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.DesignerHost"><summary>
            Gets the <c>IDesignerHost</c> in use by the designer.
            </summary><value>The <c>IDesignerHost</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.IsSelected"><summary>
            Gets whether the component is selected.
            </summary><value><c>true</c> if the component is selected; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.MenuCommandService"><summary>
            Gets the <c>IMenuCommandService</c> in use by the designer.
            </summary><value>The <c>IMenuCommandService</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.SelectionService"><summary>
            Gets the <c>ISelectionService</c> in use by the designer.
            </summary><value>The <c>ISelectionService</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.Verbs"><summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary><value>
            A <c>DesignerVerbCollection</c> of <c>DesignerVerb</c> objects, or <see langword="null" /> 
            if no designer verbs are available. 
            </value><remarks>
            If the verbs collection is set to <see langword="null" />, the <see cref="M:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.InitializeVerbs" /> method is called.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproComponentDesignerBase.VerbsCore"><summary>
            Gets or sets the design-time verbs supported by the component that is associated with the designer.
            </summary><value>
            A <c>DesignerVerbCollection</c> of <c>DesignerVerb</c> objects, or <see langword="null" /> 
            if no designer verbs are available. 
            </value></member><member name="T:ActiproSoftware.ComponentModel.Design.FlagEnumEditor"><summary>
            Provides a user interface for editing flag-type enumerations in a designer.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.Design.FlagEnumEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"><summary>
            Edits the specified object's value using the editor style indicated by <see cref="M:ActiproSoftware.ComponentModel.Design.FlagEnumEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
            </summary><param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param><param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param><param name="valueToEdit">The object to edit.</param><returns>The new value of the object.</returns></member><member name="M:ActiproSoftware.ComponentModel.Design.FlagEnumEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"><summary>
            Gets the editor style used by the <see cref="M:ActiproSoftware.ComponentModel.Design.FlagEnumEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary><param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param><returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by <see cref="M:ActiproSoftware.ComponentModel.Design.FlagEnumEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />. 
            If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:ActiproSoftware.ComponentModel.Design.FlagEnumEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.
            </returns></member><member name="T:ActiproSoftware.ComponentModel.Design.Serialization.ActiproCodeDomSerializer"><summary>
            Provides a base class for serializing an object graph to a series of CodeDOM statements.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.Design.Serialization.ActiproCodeDomSerializer.DeserializeWithInstanceDescriptorSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)"><summary>
            Deserializes the specified serialized CodeDOM object into an object by using a <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that 
            specializes in deserializing objects with instance descriptors.
            </summary><param name="manager">A serialization manager interface that is used during the deserialization process.</param><param name="codeObject">A serialized CodeDOM object to deserialize. </param><returns>The deserialized CodeDOM object.</returns><remarks>
            This method uses the serialization manager to create objects and resolve data types. 
            The root of the object graph is returned.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.Design.Serialization.ActiproCodeDomSerializer.FindUnusedInstanceName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Boolean)"><summary>
            Returns the first unused name, based on a base of text.
            </summary><param name="manager">A serialization manager interface that is used during the deserialization process.</param><param name="nameBase">The base of text.</param><param name="forceNumbering">Whether to force the </param><returns>The first unused name, based on a base of text.</returns></member><member name="M:ActiproSoftware.ComponentModel.Design.Serialization.ActiproCodeDomSerializer.FindUnusedInstanceName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.String,System.Boolean)"><summary>
            Returns the first unused name, based on a prefix and a base of text.
            </summary><param name="manager">A serialization manager interface that is used during the deserialization process.</param><param name="prefix">The prefix of text.</param><param name="nameBase">The base of text.</param><param name="forceNumbering">Whether to force the </param><returns>The first unused name, based on a base of text.</returns></member><member name="M:ActiproSoftware.ComponentModel.Design.Serialization.ActiproCodeDomSerializer.SerializeWithInstanceDescriptorSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)"><summary>
            Serializes the specified object into a CodeDOM object by using a <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that 
            specializes in serializing objects with instance descriptors.
            </summary><param name="manager">A serialization manager interface that is used during the deserialization process.</param><param name="value">The object to serialize.</param><returns>A CodeDOM object representing the object that has been serialized.</returns></member><member name="M:ActiproSoftware.ComponentModel.Design.Serialization.ActiproCodeDomSerializer.#ctor"><summary>
            Initializes a new instance of the <c>ActiproCodeDomSerializer</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="T:ActiproSoftware.ComponentModel.DisposableObject"><summary>
            Provides a base class that implements the IDisposable interface.
            This class functions in accordance with the Disposable design pattern.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.DisposableObject.Finalize"><summary>
            Allows an object to attempt to free resources and perform other cleanup operations before the 
            object is reclaimed by garbage collection.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.DisposableObject.Dispose"><summary>
            Releases all resources used by the object.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.DisposableObject.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.DisposableObject.VerifyNotDisposed"><summary>
            Throws an <c>ObjectDisposedException</c> if the object has already been disposed.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.DisposableObject.#ctor"><summary>
            Initializes a new instance of the <c>DisposableObject</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.ComponentModel.DisposableObject.IsDisposed"><summary>
            Gets whether the object has been disposed.
            </summary><value><c>true</c> if the object has been disposed; otherwise, <c>false</c>.
            </value></member><member name="E:ActiproSoftware.ComponentModel.DisposableObject.Disposed"><summary>
            Occurs when the object is disposed.
            </summary></member><member name="T:ActiproSoftware.ComponentModel.ExceptionBase"><summary>
            A base class for exceptions thrown from Actipro products.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.ExceptionBase.#ctor"><summary>
            Initializes a new instance of the <c>ExceptionBase</c> class.
            </summary><remarks>
            This constructor initializes the <c>Message</c> property of the new instance to a system-supplied message that describes the error, 
            such as "An application error has occurred."  This message takes into account the current system culture.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.ExceptionBase.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>ExceptionBase</c> class with a specified error message.
            </summary><param name="message">A message that describes the error.</param><remarks>
            The content of the <paramref name="message" /> parameter is intended to be understood by humans. 
            The caller of this constructor is required to ensure that this string has been localized for the current system culture.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.ExceptionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"><summary>
            Initializes a new instance of the <c>ExceptionBase</c> class with serialized data.
            </summary><param name="info">The object that holds the serialized object data.</param><param name="context">The contextual information about the source or destination.</param><remarks>
            This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.ExceptionBase.#ctor(System.String,System.Exception)"><summary>
            Initializes a new instance of the <c>ExceptionBase</c> class with a specified error message and a reference 
            to the inner exception that is the cause of this exception..
            </summary><param name="message">The error message that explains the reason for the exception.</param><param name="innerException">
            The exception that is the cause of the current exception. 
            If the innerException parameter is not a null reference, the current exception is raised in a 
            <c>catch</c> block that handles the inner exception.
            </param><remarks><para>
            The content of the <paramref name="message" /> parameter is intended to be understood by humans. 
            The caller of this constructor is required to ensure that this string has been localized for the current system culture.
            </para><para>
            An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception 
            in the <c>InnerException</c> property. 
            The <c>InnerException</c> property returns the same value that is passed into the constructor, 
            or <see langword="null" /> if the <c>InnerException</c> property does not supply the inner exception value to the constructor.
            </para></remarks></member><member name="T:ActiproSoftware.ComponentModel.ExpandableNullableObjectConverter"><summary>
            Provides a <c>TypeConverter</c> to convert objects to and from other representations.
            </summary><remarks>This class places the text <c>(none)</c> in a property grid when an object reference is <see langword="null" />.</remarks></member><member name="M:ActiproSoftware.ComponentModel.ExpandableNullableObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="destType">A <c>Type</c> that represents the type you want to convert to.</param><returns><c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns></member><member name="M:ActiproSoftware.ComponentModel.ExpandableNullableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"><summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="culture">A <c>CultureInfo</c> object. If <see langword="null" /> is passed, the current culture is assumed. </param><param name="value">The <c>Object</c> to convert.</param><param name="destType">The <c>Type</c> to convert the value parameter to.</param><returns>An <c>Object</c> that represents the converted value.</returns></member><member name="T:ActiproSoftware.ComponentModel.GenericExpandableNullableObjectConverter"><summary>
            Provides a <c>TypeConverter</c> to convert objects to and from other representations.
            </summary><remarks>This class places the text <c>(none)</c> in a property grid when an object reference is <see langword="null" />.</remarks></member><member name="M:ActiproSoftware.ComponentModel.GenericExpandableNullableObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="destType">A <c>Type</c> that represents the type you want to convert to.</param><returns><c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns></member><member name="M:ActiproSoftware.ComponentModel.GenericExpandableNullableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"><summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="culture">A <c>CultureInfo</c> object. If <see langword="null" /> is passed, the current culture is assumed. </param><param name="value">The <c>Object</c> to convert.</param><param name="destType">The <c>Type</c> to convert the value parameter to.</param><returns>An <c>Object</c> that represents the converted value.</returns></member><member name="T:ActiproSoftware.ComponentModel.ILogicalTreeNode"><summary>
            Provides the base requirements for a node that needs to be part of a logical tree.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.ILogicalTreeNode.FindAncestor(System.Type)"><summary>
            Loops up the parent chain to locate an ancestor of the specified <c>Type</c>.
            </summary><param name="type">The <c>Type</c> of ancestor to located.</param><returns>The <see cref="T:System.Object" /> ancestor that matches the <c>Type</c>.</returns></member><member name="M:ActiproSoftware.ComponentModel.ILogicalTreeNode.GetCommonAncestor(ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Gets the common ancestor of the two object.
            </summary><param name="value">The <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" /> to compare.</param><returns>
            The <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" /> that is a common ancestor of both objects; otherwise <see langword="null" />.
            </returns></member><member name="M:ActiproSoftware.ComponentModel.ILogicalTreeNode.IsAncestorOf(ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Gets whether the object is an ancestor to the specified object.
            </summary><param name="value">The <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" /> to compare.</param><returns><c>true</c> if the object is an ancestor of the specified object; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.ComponentModel.ILogicalTreeNode.IsDescendantOf(ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Gets whether the object is a descendant of the specified object.
            </summary><param name="value">The <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" /> to compare.</param><returns><c>true</c> if the object is a descendant of the specified object; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.ComponentModel.ILogicalTreeNode.Children"><summary>
            Gets the collection of child objects.
            </summary><value>The collection of child objects.</value></member><member name="P:ActiproSoftware.ComponentModel.ILogicalTreeNode.Parent"><summary>
            Gets or sets the object that is parent to this object.
            </summary><value>The object that is parent to this object.</value><remarks>
            The setter of this property is reserved for internal use only.
            </remarks></member><member name="T:ActiproSoftware.ComponentModel.IKeyedLogicalTreeNode"><summary>
            Provides the base requirements for a node that has a string key and needs to be part of a logical tree.
            </summary></member><member name="P:ActiproSoftware.ComponentModel.IKeyedLogicalTreeNode.Key"><summary>
            Gets a string-based key that identifies the object.
            </summary><value>A string-based key that identifies the object.</value></member><member name="T:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection"><summary>
            Provides a base collection class for objects that implement <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" />.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.AddCore(ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Adds an object to the end of the collection.
            </summary><param name="value">The object to be added to the end of the collection. </param><returns>The collection index at which the object has been added.</returns></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.ClearCore"><summary>
            Removes all objects from the collection.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.Contains(ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Returns whether the specified object is in the collection.
            </summary><param name="value">The object to locate in the collection.</param><returns><c>true</c> if the object is found in the collection; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.CopyTo(System.Array,System.Int32)"><summary>
            Copies the entire collection to a compatible one-dimensional <c>Array</c>, 
            starting at the specified index of the target array.
            </summary><param name="array">
            The one-dimensional <c>Array</c> that is the destination of the elements copied from the collection. 
            The <c>Array</c> must have zero-based indexing. 
            </param><param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.DisposeAllChildObjects"><summary>
            Disposes each child object in the collection that implements <see cref="T:System.IDisposable" />.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.GetEnumerator"><summary>
            Retrieves an <c>IEnumerator</c> object for the entire collection.
            </summary><returns>An <c>IEnumerator</c> object for the entire collection</returns><remarks>
            Enumerators are intended to be used only to read data in the collection. 
            Enumerators cannot be used to modify the underlying collection.
            <para>
            The enumerator does not have exclusive access to the collection.
            </para><para>
            When an enumerator is instantiated, it takes a snapshot of the current state of the collection. 
            If changes are made to the collection, such as adding, modifying or deleting elements, the 
            snapshot gets out of sync and the enumerator throws an <c>InvalidOperationException</c>. 
            Two enumerators instantiated from the same collection at the same time can have 
            different snapshots of the collection.
            </para></remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.IndexOf(ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire collection.
            </summary><param name="value">The object to locate in the collection.</param><returns>
            The zero-based index of the first occurrence of the object within the entire collection, if found; otherwise, <c>-1</c>.
            </returns></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.InsertCore(System.Int32,ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Inserts an object into the collection at the specified index.
            </summary><param name="index">The zero-based index at which the object should be inserted.</param><param name="value">The object to insert.</param></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.OnObjectAdding(System.Int32,ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Performs additional custom processes before an object is added to the collection.
            </summary><param name="index">The zero-based index at which the object was inserted.</param><param name="value">The object that was inserted.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action after the specified object is added.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.OnObjectAdded(System.Int32,ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Performs additional custom processes after an object is added to the collection.
            </summary><param name="index">The zero-based index at which the object was inserted.</param><param name="value">The object that was inserted.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action after the specified object is added.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.OnObjectRemoving(System.Int32,ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Performs additional custom processes before an object is removed from the collection.
            </summary><param name="index">The zero-based index from which the object was removed.</param><param name="value">The object that was removed.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action before the specified object is removed.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.OnObjectRemoved(System.Int32,ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Performs additional custom processes after an object is removed from the collection.
            </summary><param name="index">The zero-based index from which the object was removed.</param><param name="value">The object that was removed.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action after the specified object is removed.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.OnValidate(ActiproSoftware.ComponentModel.ILogicalTreeNode,System.Int32)"><summary>
            Performs additional custom processes when validating a value.
            </summary><param name="value">The object to validate.</param><param name="existingIndex">The index within the collection of the object that would be replaced by the value.</param><remarks>
            The default implementation of this method determines whether value is <see langword="null" />, and if so, 
            throws <see cref="T:System.ArgumentNullException" />.  It is intended to be overridden by a derived class to 
            perform additional action when the specified element is validated.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.RemoveCore(ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Removes the first occurrence of a specific object from the collection.
            </summary><param name="value">The object to remove from the collection.</param><remarks>
            The elements that follow the removed element move up to occupy the vacated spot. 
            The indexes of the elements that are moved are also updated.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.RemoveAllOfTypeCore(System.Type)"><summary>
            Removes all objects of the specified type from the collection.
            </summary><param name="type">A <see cref="T:System.Type" /> specifying the type of objects to remove.</param></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.RemoveAtCore(System.Int32)"><summary>
            Removes the element at the specified index of the collection.
            </summary><param name="index">The zero-based index of the object to remove.</param><remarks>
            The elements that follow the removed element move up to occupy the vacated spot. 
            The indexes of the elements that are moved are also updated.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.SetCore(System.Int32,ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Sets a value at the specified index in the collection.
            </summary><param name="index">The zero-based index of the object to set.</param><param name="value">The object to add to the collection.</param></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.#ctor(ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Initializes a new instance of the <c>LogicalTreeNodeCollection</c> class. 
            </summary><param name="owner">The owner of the collection.</param></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.AutoAssignParent"><summary>
            Gets or sets whether to automatically assign the parent of child objects to be the owner of the collection.
            </summary><value><c>true</c> if the parent of child objects should be assigned; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.Count"><summary>
            Gets the number of elements contained in the <see cref="T:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection" /> instance.
            </summary><value>The number of elements contained in the <see cref="T:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection" /> instance.</value></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.InnerList"><summary>
            Gets the list of items contained in the collection instance.
            </summary><value>
            An <see cref="T:System.Collections.ArrayList" /> representing the collection instance itself.
            </value></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.IsFixedSize"><summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary><value><c>true</c> if the collection has a fixed size; otherwise, <c>false</c>.
            </value><remarks>
            A collection with a fixed size does not allow the addition or removal of elements, 
            but it allows the modification of existing elements.
            </remarks></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.IsReadOnly"><summary>
            Gets a value indicating whether the collection is read-only.
            </summary><value><c>true</c> if the collection is read-only; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.IsSynchronized"><summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary><value><c>true</c> if the collection is synchronized (thread-safe); otherwise, <c>false</c>.
            </value><remarks>
            To guarantee the thread safety of the collection, all operations must be done through 
            the wrapper returned by the <see cref="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.SyncRoot" /> property.
            </remarks></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.OwnerCore"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" /> that is the owner of the collection.
            </summary><value>The <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" /> that is the owner of the collection.</value></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.SyncRoot"><summary>
            Gets an <c>Object</c> that can be used to synchronize access to the collection.
            </summary><value>
            An <c>Object</c> that can be used to synchronize access to the collection.
            </value></member><member name="E:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.ObjectAdding"><summary>
            Occurs before an object is added to the collection.
            </summary><eventdata>
            The event handler receives an argument of type <c>LogicalTreeNodeCollectionEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.ObjectAdded"><summary>
            Occurs after an object is added to the collection.
            </summary><eventdata>
            The event handler receives an argument of type <c>LogicalTreeNodeCollectionEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.ObjectRemoving"><summary>
            Occurs before an object is removed from the collection.
            </summary><eventdata>
            The event handler receives an argument of type <c>LogicalTreeNodeCollectionEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection.ObjectRemoved"><summary>
            Occurs after an object is removed from the collection.
            </summary><eventdata>
            The event handler receives an argument of type <c>LogicalTreeNodeCollectionEventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.ComponentModel.KeyedLogicalTreeNodeCollection"><summary>
            Provides a base collection class for objects that implement <see cref="T:ActiproSoftware.ComponentModel.IKeyedLogicalTreeNode" />.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.KeyedLogicalTreeNodeCollection.Contains(System.String)"><summary>
            Determines whether a key is in the collection.
            </summary><param name="key">The key to locate in the collection.</param><returns><c>true</c> if the key is found in the collection; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.ComponentModel.KeyedLogicalTreeNodeCollection.IndexOf(System.String)"><summary>
            Searches for the specified key and returns the zero-based index of the first occurrence within the entire collection.
            </summary><param name="key">The key to locate in the collection.</param><returns>
            The zero-based index of the first occurrence of the key within the entire collection, if found; otherwise, <c>-1</c>.
            </returns></member><member name="M:ActiproSoftware.ComponentModel.KeyedLogicalTreeNodeCollection.OnValidate(ActiproSoftware.ComponentModel.ILogicalTreeNode,System.Int32)"><summary>
            Performs additional custom processes when validating a value.
            </summary><param name="value">The object to validate.</param><param name="existingIndex">The index within the collection of the object that would be replaced by the value.</param><remarks>
            The default implementation of this method determines whether value is <see langword="null" />, and if so, 
            throws <see cref="T:System.ArgumentNullException" />.  
            It also implements rules defined by <see cref="P:ActiproSoftware.ComponentModel.KeyedLogicalTreeNodeCollection.AllowEmptyKeys" /> and <see cref="P:ActiproSoftware.ComponentModel.KeyedLogicalTreeNodeCollection.AllowDuplicateKeys" />.
            It is intended to be overridden by a derived class to perform additional action when the specified element is validated.
            </remarks></member><member name="M:ActiproSoftware.ComponentModel.KeyedLogicalTreeNodeCollection.#ctor(ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Initializes a new instance of the <c>KeyedLogicalTreeNodeCollection</c> class. 
            </summary><param name="owner">The owner of the collection.</param></member><member name="P:ActiproSoftware.ComponentModel.KeyedLogicalTreeNodeCollection.AllowDuplicateKeys"><summary>
            Gets whether duplicate keys are permitted within the collection.
            </summary><value><c>true</c> if duplicate keys are permitted; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.ComponentModel.KeyedLogicalTreeNodeCollection.AllowEmptyKeys"><summary>
            Gets whether empty keys are permitted within the collection.
            </summary><value><c>true</c> if empty keys are permitted; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.ComponentModel.LogicalTreeNodeBase"><summary>
            Represents a base disposable <see cref="T:System.Object" /> that implements <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" />.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeBase.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.ComponentModel.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeBase.OnParentChanged"><summary>
            Invoked when logical parent is changed. 
            This is invoked after the parent has changed, and the purpose is to allow elements to perform actions based on the changed parent.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeBase.#ctor"><summary>
            Initializes a new instance of the <c>LogicalTreeNodeBase</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="T:ActiproSoftware.ComponentModel.LogicalTreeNodeCollectionEventArgs"><summary>
            Provides data for <see cref="T:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection" /> events.
            </summary></member><member name="M:ActiproSoftware.ComponentModel.LogicalTreeNodeCollectionEventArgs.#ctor(System.Int32,ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Initializes a new instance of the <c>LogicalTreeNodeCollectionEventArgs</c> class.
            </summary><param name="index">The index at which the component is/was located.</param><param name="logicalTreeNode">The <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" /> that is affected by this event.</param></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollectionEventArgs.Index"><summary>
            Gets the index at which the component is/was located.
            </summary><value>The index at which the component is/was located.</value></member><member name="P:ActiproSoftware.ComponentModel.LogicalTreeNodeCollectionEventArgs.LogicalTreeNode"><summary>
            Gets the <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" /> that is affected by this event.
            </summary><value>The <see cref="T:ActiproSoftware.ComponentModel.ILogicalTreeNode" /> that is affected by this event.</value></member><member name="T:ActiproSoftware.ComponentModel.LogicalTreeNodeCollectionEventHandler"><summary>
            Represents the method that will handle <see cref="T:ActiproSoftware.ComponentModel.LogicalTreeNodeCollection" /> events.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.ComponentModel.LogicalTreeNodeCollectionEventArgs" /> containing event data.</param><remarks>
            When you create a <c>LogicalTreeNodeCollectionEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.Drawing.BackgroundFill"><summary>
            Provides a base class for an object that can be used as a background fill.
            </summary></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.GetBrush(System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.OnPropertyChanged(System.EventArgs)"><summary>
            Raises the <c>PropertyChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.Drawing.BackgroundFill.#ctor"><summary>
            Initializes a new instance of the <c>BackgroundFill</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="E:ActiproSoftware.Drawing.BackgroundFill.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.Drawing.BackgroundFillRotationType"><summary>
            Specifies how to rotate a background fill when drawing with a different side.
            </summary></member><member name="F:ActiproSoftware.Drawing.BackgroundFillRotationType.None"><summary>
            Draw as specified.
            </summary></member><member name="F:ActiproSoftware.Drawing.BackgroundFillRotationType.Orientation"><summary>
            Draw as specified if the side is top or bottom.  Rotate 90 degrees if the side is left or right.
            </summary></member><member name="F:ActiproSoftware.Drawing.BackgroundFillRotationType.Side"><summary>
            Draw as specified if the side is top.  Rotate 90 degrees for each side around from top.
            </summary></member><member name="T:ActiproSoftware.Drawing.Border"><summary>
            Provides a base class for an object that can be used as a border.
            </summary></member><member name="M:ActiproSoftware.Drawing.Border.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.Drawing.Border" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.Drawing.Border" /> object.</returns></member><member name="M:ActiproSoftware.Drawing.Border.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)"><summary>
            Draws the border on all sides.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param></member><member name="M:ActiproSoftware.Drawing.Border.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Draws the border.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="sides">The <see cref="T:ActiproSoftware.Drawing.Sides" /> of the border to draw.</param></member><member name="M:ActiproSoftware.Drawing.Border.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.Border.GetBorderWidth"><summary>
            Returns the width of the border.
            </summary><returns>The width of the border.</returns></member><member name="M:ActiproSoftware.Drawing.Border.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.Border.GetPrimaryColor"><summary>
            Returns the primary <c>Color</c> of the border.
            </summary><returns>The primary <c>Color</c> of the border.</returns></member><member name="M:ActiproSoftware.Drawing.Border.OnPropertyChanged(System.EventArgs)"><summary>
            Raises the <c>PropertyChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.Drawing.Border.#ctor"><summary>
            Initializes a new instance of the <c>Border</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="E:ActiproSoftware.Drawing.Border.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.Drawing.IDoubleBufferCanvas"><summary>
            Provides the base requirements of a canvas to use for double-buffered painting.
            </summary></member><member name="M:ActiproSoftware.Drawing.IDoubleBufferCanvas.Copy(System.Drawing.Rectangle,System.Drawing.Point)"><summary>
            Copies one area of the canvas to another.
            </summary><param name="sourceRect">A <c>Rectangle</c> specifying the source bounds to copy.</param><param name="destLocation">A <c>Point</c> specifying the destination location.</param></member><member name="M:ActiproSoftware.Drawing.IDoubleBufferCanvas.Flush"><summary>
            Flushes the contents of the double-buffer canvas back to the original <c>Graphics</c> object.
            </summary></member><member name="M:ActiproSoftware.Drawing.IDoubleBufferCanvas.Invert(System.Drawing.Rectangle)"><summary>
            Inverts the specified bounds in the canvas.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param></member><member name="M:ActiproSoftware.Drawing.IDoubleBufferCanvas.PrepareGraphics(System.Windows.Forms.PaintEventArgs)"><summary>
            Prepares the double-buffer canvas for drawing.
            </summary><param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs" /> passed to the <c>Paint</c> event.</param></member><member name="M:ActiproSoftware.Drawing.IDoubleBufferCanvas.Reset"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.IDoubleBufferCanvas.Graphics" /> and canvas.
            </summary></member><member name="P:ActiproSoftware.Drawing.IDoubleBufferCanvas.Graphics"><summary>
            The <c>Graphics</c> object to use for all drawing operations.
            </summary><value>A <c>Graphics</c> object to use for all drawing operations.</value></member><member name="T:ActiproSoftware.Drawing.Corner"><summary>
            Specifies the corner of a rectangle.
            </summary></member><member name="F:ActiproSoftware.Drawing.Corner.UpperLeft"><summary>
            The upper left corner.
            </summary></member><member name="F:ActiproSoftware.Drawing.Corner.UpperRight"><summary>
            The upper right corner.
            </summary></member><member name="F:ActiproSoftware.Drawing.Corner.LowerLeft"><summary>
            The lower left corner.
            </summary></member><member name="F:ActiproSoftware.Drawing.Corner.LowerRight"><summary>
            The lower right corner.
            </summary></member><member name="T:ActiproSoftware.Drawing.Design.ImageEditor"><summary>
            Provides a value editor that provides a user interface for representing and editing the values 
            of an <see cref="T:System.Drawing.Image" />.
            </summary><remarks>
            This works around a bug in .NET 2.0 where their <c>ImageEditor</c> class does not work on object classes.
            </remarks></member><member name="M:ActiproSoftware.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"><summary>
            Edits the specified object's value using the editor style indicated by <see cref="M:ActiproSoftware.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that can be used to gain additional context information.</param><param name="provider">An <c>IServiceProvider</c> that this editor can use to obtain services.</param><param name="value">The object to edit.</param><returns>The new value of the object.</returns></member><member name="M:ActiproSoftware.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"><summary>
            Gets the editor style used by the <see cref="M:ActiproSoftware.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that can be used to gain additional context information.</param><returns>
            A <c>UITypeEditorEditStyle</c> value that indicates the style of editor used by <see cref="M:ActiproSoftware.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />. 
            If the <c>UITypeEditor</c> does not support this method, then <c>GetEditStyle</c> will return <c>None</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)"><summary>
            Gets a value indicating whether this editor supports painting a representation of an object's value.
            </summary><param name="context">
            An <c>ITypeDescriptorContext</c> that can be used to gain additional context information. 
            </param><returns><c>true</c> if <see cref="M:ActiproSoftware.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> is implemented; otherwise, <c>false</c>.</returns></member><member name="M:ActiproSoftware.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)"><summary>
            Paints a value indicated by the specified <c>PaintValueEventArgs</c>.
            </summary><param name="pe">
            A <c>PaintValueEventArgs</c> indicating what to paint and where to paint it. 
            </param></member><member name="T:ActiproSoftware.Drawing.DoubleBufferCanvas"><summary>
            Provides a canvas to use for double-buffered painting.
            </summary></member><member name="M:ActiproSoftware.Drawing.DoubleBufferCanvas.Copy(System.Drawing.Rectangle,System.Drawing.Point)"><summary>
            Copies one area of the canvas to another.
            </summary><param name="sourceRect">A <c>Rectangle</c> specifying the source bounds to copy.</param><param name="destLocation">A <c>Point</c> specifying the destination location.</param></member><member name="M:ActiproSoftware.Drawing.DoubleBufferCanvas.Dispose"><summary>
            Disposes any resources used by the object.
            </summary></member><member name="M:ActiproSoftware.Drawing.DoubleBufferCanvas.Flush"><summary>
            Flushes the contents of the double-buffer canvas back to the original <c>Graphics</c> object.
            </summary></member><member name="M:ActiproSoftware.Drawing.DoubleBufferCanvas.Invert(System.Drawing.Rectangle)"><summary>
            Inverts the specified bounds in the canvas.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param></member><member name="M:ActiproSoftware.Drawing.DoubleBufferCanvas.PrepareGraphics(System.Windows.Forms.PaintEventArgs)"><summary>
            Prepares the double-buffer canvas for drawing.
            </summary><param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs" /> passed to the <c>Paint</c> event.</param></member><member name="M:ActiproSoftware.Drawing.DoubleBufferCanvas.Reset"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.DoubleBufferCanvas.Graphics" /> and canvas.
            </summary></member><member name="M:ActiproSoftware.Drawing.DoubleBufferCanvas.#ctor(System.Windows.Forms.Control)"><summary>
            Creates a new instance of the <c>DoubleBufferCanvas</c> class.
            </summary><param name="control">The <see cref="T:System.Windows.Forms.Control" /> that is using the canvas.</param></member><member name="P:ActiproSoftware.Drawing.DoubleBufferCanvas.Graphics"><summary>
            The <c>Graphics</c> object to use for all drawing operations.
            </summary><value>A <c>Graphics</c> object to use for all drawing operations.</value></member><member name="T:ActiproSoftware.Drawing.DrawingHelper"><summary>
            A helper class containing various drawing procedures.
            </summary></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Single,System.Drawing.RotateFlipType)"><summary>
            Draws an image.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="image">The <c>Image</c> to draw.</param><param name="x">The x-coordinate at which to draw.</param><param name="y">The y-coordinate at which to draw.</param><param name="alpha">The opacity of the image (decimal between <c>0</c> and <c>1</c>).</param><param name="imageRotation">The image rotation.</param></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Drawing.RotateFlipType)"><summary>
            Draws an image.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="image">The <c>Image</c> to draw.</param><param name="x">The x-coordinate at which to draw.</param><param name="y">The y-coordinate at which to draw.</param><param name="width">The width of the image.</param><param name="height">The height of the image.</param><param name="alpha">The opacity of the image (decimal between <c>0</c> and <c>1</c>).</param><param name="imageRotation">The image rotation.</param></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.DrawImageShadow(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Single,System.Drawing.RotateFlipType)"><summary>
            Draws an image shadow.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="image">The <c>Image</c> to use for creating the shadow.</param><param name="x">The x-coordinate at which to draw.</param><param name="y">The y-coordinate at which to draw.</param><param name="alpha">The opacity of the image (decimal between <c>0</c> and <c>1</c>).</param><param name="imageRotation">The image rotation.</param></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.DrawRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen)"><summary>
            Draws a rectangle.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area.</param><param name="pen">The <c>Pen</c> to use for drawing.</param></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.DrawRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Drawing2D.DashStyle)"><summary>
            Draws a rectangle with the specified color and dash style.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area.</param><param name="color">The <see cref="T:System.Drawing.Color" /> to use for drawing.</param><param name="dashStyle">The <c>DashStyle</c> to use for drawing.</param></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,System.Drawing.Pen)"><summary>
            Draws a rounded rectangle.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area.</param><param name="offsetX">The x-offset of the arc.</param><param name="offsetY">The y-offset of the arc.</param><param name="pen">The <c>Pen</c> to use for drawing.</param></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.DrawString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)"><summary>
            Draws a string.  
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use.</param><param name="text">The text to draw.</param><param name="font">The <see cref="T:System.Drawing.Font" /> to use when drawing the text.</param><param name="color">The <see cref="T:System.Drawing.Color" /> to use when drawing the text.</param><param name="bounds">The bounds in which to draw the text.</param><param name="format">The <see cref="T:System.Drawing.StringFormat" /> to use when drawing the text.</param></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.DrawWrappedImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)"><summary>
            Draws a wrapped <c>Image</c>.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">A <c>Rectangle</c> indicating the bounds of the drawing operation.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="image">The <c>Image</c> to draw.</param><param name="wrapMode">The <c>WrapMode</c> to tile with.</param></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,System.Drawing.Brush)"><summary>
            Fills a rounded rectangle.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area.</param><param name="offsetX">The x-offset of the arc.</param><param name="offsetY">The y-offset of the arc.</param><param name="brush">The <c>Brush</c> to use for drawing.</param></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.GetCenteredRectangleLocation(System.Drawing.Rectangle,System.Drawing.Size)"><summary>
            Gets the <c>Point</c> at which the specified rectangle should be located within the bounds to be centered.
            </summary><param name="bounds">The bounds of the parent.</param><param name="size">The child rectangle's size.</param><returns>A <c>Point</c> specifying the upper-left position that the rectangle should be placed.</returns></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.GetHatchedBrush(System.Drawing.Color,System.Drawing.Color)"><summary>
            Creates a hatched checkerboard brush.
            </summary><param name="color1">The first color to use.</param><param name="color2">The second color to use.</param><returns>A <c>TextureBrush</c> that is a checkerboard-patterned brush.</returns></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.GetOppositeSides(ActiproSoftware.Drawing.Sides)"><summary>
            Returns a <see cref="T:ActiproSoftware.Drawing.Sides" /> value containing the sides that are not specified.
            </summary><param name="sides">The <see cref="T:ActiproSoftware.Drawing.Sides" /> value whose opposite sides are to be found.</param><returns>A <see cref="T:ActiproSoftware.Drawing.Sides" /> value containing the sides that are not specified.</returns></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.GetShortcutTextFromShortcut(System.Windows.Forms.Shortcut)"><summary>
            Gets the proper display text of a shortcut.
            </summary><param name="shortcut">The <c>Shortcut</c> whose text is to be retrieved.</param><returns>The proper display text of a shortcut.</returns></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.GetStringFormat(System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Drawing.StringTrimming,System.Boolean,System.Boolean)"><summary>
            Gets a <see cref="T:System.Drawing.StringFormat" /> for the specified parameters.
            </summary><param name="hAlign">A <see cref="T:System.Drawing.StringAlignment" /> indicating the horizontal alignment.</param><param name="vAlign">A <see cref="T:System.Drawing.StringAlignment" /> indicating the vertical alignment.</param><param name="trimming">A <see cref="T:System.Drawing.StringTrimming" /> indicating the trimming method.</param><param name="wrap">Whether to allow wrapped text.</param><param name="vertical">Whether to work with vertical text.</param><returns>A <see cref="T:System.Drawing.StringFormat" /> for the specified parameters.</returns></member><member name="M:ActiproSoftware.Drawing.DrawingHelper.MeasureString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.StringFormat)"><summary>
            Measures a string.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use.</param><param name="text">The text to draw.</param><param name="font">The <see cref="T:System.Drawing.Font" /> to use when drawing the text.</param><param name="format">The <see cref="T:System.Drawing.StringFormat" /> to use when drawing the text.</param></member><member name="T:ActiproSoftware.Drawing.Gradient"><summary>
            Specifies a base class for gradient information.
            </summary></member><member name="M:ActiproSoftware.Drawing.Gradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.Gradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.Gradient.#ctor"><summary>
            Initializes a new instance of the <c>Gradient</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="T:ActiproSoftware.Drawing.EllipseGradient"><summary>
            Represents an ellipse gradient.
            </summary></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.ResetBackColor"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.EllipseGradient.BackColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.ShouldSerializeBackColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.EllipseGradient.BackColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.ResetCenterColor"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.EllipseGradient.CenterColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.ShouldSerializeCenterColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.EllipseGradient.CenterColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="centerColor">The center color of the gradient.</param><param name="outerColor">The outer color of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="centerColor">The center color of the gradient.</param><param name="outerColor">The outer color of the gradient.</param><param name="backColor">The background color of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.GetBrush(System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.ResetOuterColor"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.EllipseGradient.OuterColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.ShouldSerializeOuterColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.EllipseGradient.OuterColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.#ctor"><summary>
            Initializes a new instance of the <c>EllipseGradient</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.#ctor(System.Drawing.Color,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>EllipseGradient</c> class. 
            </summary><param name="centerColor">The center color of the gradient.</param><param name="outerColor">The outer color of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.EllipseGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>EllipseGradient</c> class. 
            </summary><param name="centerColor">The center color of the gradient.</param><param name="outerColor">The outer color of the gradient.</param><param name="backColor">The background color of the gradient.</param></member><member name="P:ActiproSoftware.Drawing.EllipseGradient.BackColor"><summary>
            Gets or sets the background color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the background color.</value></member><member name="P:ActiproSoftware.Drawing.EllipseGradient.BackColorAlpha"><summary>
            Gets or sets the background color alpha value.
            </summary><value>The background color alpha value.</value></member><member name="P:ActiproSoftware.Drawing.EllipseGradient.CenterColor"><summary>
            Gets or sets the center color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the center color.</value></member><member name="P:ActiproSoftware.Drawing.EllipseGradient.CenterColorAlpha"><summary>
            Gets or sets the center color alpha value.
            </summary><value>The center color alpha value.</value></member><member name="P:ActiproSoftware.Drawing.EllipseGradient.OuterColor"><summary>
            Gets or sets the outer color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the outer color.</value></member><member name="P:ActiproSoftware.Drawing.EllipseGradient.OuterColorAlpha"><summary>
            Gets or sets the outer color alpha value.
            </summary><value>The outer color alpha value.</value></member><member name="T:ActiproSoftware.Drawing.HatchedBackgroundFill"><summary>
            Provides a class that draws a hatched two-color background fill.
            </summary></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.ResetColor1"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.HatchedBackgroundFill.Color1" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.ShouldSerializeColor1"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.HatchedBackgroundFill.Color1" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.ResetColor2"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.HatchedBackgroundFill.Color2" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.ShouldSerializeColor2"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.HatchedBackgroundFill.Color2" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="color1">The first color of the background fill.</param><param name="color2">The second color of the background fill.</param></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.GetBrush(System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.#ctor"><summary>
            Initializes a new instance of the <c>HatchedBackgroundFill</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.#ctor(System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>HatchedBackgroundFill</c> class.
            </summary><param name="color">The first color of the background fill.</param></member><member name="M:ActiproSoftware.Drawing.HatchedBackgroundFill.#ctor(System.Drawing.Color,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>HatchedBackgroundFill</c> class.
            </summary><param name="color1">The first color of the background fill.</param><param name="color2">The second color of the background fill.</param></member><member name="P:ActiproSoftware.Drawing.HatchedBackgroundFill.Color1"><summary>
            Gets or sets the first color of the background fill.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the first background fill color.</value></member><member name="P:ActiproSoftware.Drawing.HatchedBackgroundFill.Color2"><summary>
            Gets or sets the second color of the background fill.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the second background fill color.</value></member><member name="T:ActiproSoftware.Drawing.HorizontalAlignment"><summary>
            Specifies how an object or text in a control is horizontally aligned.
            </summary></member><member name="F:ActiproSoftware.Drawing.HorizontalAlignment.Left"><summary>
            The object or text is aligned to the left.
            </summary></member><member name="F:ActiproSoftware.Drawing.HorizontalAlignment.Center"><summary>
            The object or text is aligned in the center.
            </summary></member><member name="F:ActiproSoftware.Drawing.HorizontalAlignment.Right"><summary>
            The object or text is aligned to the right.
            </summary></member><member name="T:ActiproSoftware.Drawing.ImageBackgroundFill"><summary>
            Provides a class that draws an image as a background fill.
            </summary></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="image">The image to tile in the background.</param></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,ActiproSoftware.Drawing.ImageBackgroundFillStyle)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="image">The image to tile in the background.</param><param name="style">The style of the image.</param></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.GetBrush(System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.ResetImage"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.ImageBackgroundFill.Image" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.ShouldSerializeImage"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.ImageBackgroundFill.Image" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.ResetStyle"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.ImageBackgroundFill.Style" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.ShouldSerializeStyle"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.ImageBackgroundFill.Style" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.#ctor"><summary>
            Initializes a new instance of the <c>ImageBackgroundFill</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.#ctor(System.Drawing.Image)"><summary>
            Initializes a new instance of the <c>ImageBackgroundFill</c> class.
            </summary><param name="image">The image to tile in the background.</param></member><member name="M:ActiproSoftware.Drawing.ImageBackgroundFill.#ctor(System.Drawing.Image,ActiproSoftware.Drawing.ImageBackgroundFillStyle)"><summary>
            Initializes a new instance of the <c>ImageBackgroundFill</c> class.
            </summary><param name="image">The image to tile in the background.</param><param name="style">The style of the image.</param></member><member name="P:ActiproSoftware.Drawing.ImageBackgroundFill.Image"><summary>
            Gets or sets the image to tile in the background.
            </summary><value>An <see cref="T:System.Drawing.Image" /> to tile in the background.</value></member><member name="P:ActiproSoftware.Drawing.ImageBackgroundFill.Style"><summary>
            Gets or sets the style of the image.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.ImageBackgroundFillStyle" /> object containing the style of the image.</value></member><member name="T:ActiproSoftware.Drawing.ImageBackgroundFillStyle"><summary>
            Specifies the type of image fill effect to apply to a <see cref="T:ActiproSoftware.Drawing.ImageBackgroundFill" />.
            </summary></member><member name="F:ActiproSoftware.Drawing.ImageBackgroundFillStyle.Tile"><summary>
            The image is tiled.
            </summary></member><member name="F:ActiproSoftware.Drawing.ImageBackgroundFillStyle.TileFlipX"><summary>
            Reverses the image horizontally and then tiles the texture or gradient. 
            </summary></member><member name="F:ActiproSoftware.Drawing.ImageBackgroundFillStyle.TileFlipY"><summary>
            Reverses the image vertically and then tiles the texture or gradient. 
            </summary></member><member name="F:ActiproSoftware.Drawing.ImageBackgroundFillStyle.TileFlipXY"><summary>
            Reverses the image horizontally and vertically and then tiles the texture or gradient. 
            </summary></member><member name="F:ActiproSoftware.Drawing.ImageBackgroundFillStyle.Stretch"><summary>
            The image is streched across the bounds of the background fill. 
            </summary></member><member name="T:ActiproSoftware.Drawing.LinearGradient"><summary>
            Represents a simple linear gradient.
            </summary></member><member name="M:ActiproSoftware.Drawing.LinearGradient.ResetAngle"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.LinearGradient.Angle" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.LinearGradient.ShouldSerializeAngle"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.LinearGradient.Angle" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.LinearGradient.ResetEndColor"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.LinearGradient.EndColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.LinearGradient.ShouldSerializeEndColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.LinearGradient.EndColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.LinearGradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.LinearGradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.LinearGradient.ResetStartColor"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.LinearGradient.StartColor" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.LinearGradient.ShouldSerializeStartColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.LinearGradient.StartColor" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.LinearGradient.#ctor"><summary>
            Initializes a new instance of the <c>LinearGradient</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.LinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>LinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.LinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single)"><summary>
            Initializes a new instance of the <c>LinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param></member><member name="P:ActiproSoftware.Drawing.LinearGradient.Angle"><summary>
            Gets or sets the angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient. 
            </summary><value>
            The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient. 
            </value></member><member name="P:ActiproSoftware.Drawing.LinearGradient.EndColor"><summary>
            Gets or sets the end color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the end color.</value></member><member name="P:ActiproSoftware.Drawing.LinearGradient.EndColorAlpha"><summary>
            Gets or sets the end color alpha value.
            </summary><value>The end color alpha value.</value></member><member name="P:ActiproSoftware.Drawing.LinearGradient.RotationType"><summary>
            Gets or sets the type of rotation to perform when drawing the background fill for a side.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.BackgroundFillRotationType" /> indicating the type of rotation to perform when drawing the background fill for a side.</value><remarks>The default drawing side is <see cref="F:ActiproSoftware.Drawing.Sides.Top" />.</remarks></member><member name="P:ActiproSoftware.Drawing.LinearGradient.StartColor"><summary>
            Gets or sets the start color of the gradient.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the start color.</value></member><member name="P:ActiproSoftware.Drawing.LinearGradient.StartColorAlpha"><summary>
            Gets or sets the start color alpha value.
            </summary><value>The start color alpha value.</value></member><member name="T:ActiproSoftware.Drawing.LinearGradientColorPosition"><summary>
            Provides color and position information for a linear gradient.
            </summary></member><member name="M:ActiproSoftware.Drawing.LinearGradientColorPosition.ResetColor"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.LinearGradientColorPosition.Color" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.LinearGradientColorPosition.ShouldSerializeColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.LinearGradientColorPosition.Color" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.LinearGradientColorPosition.OnPropertyChanged(System.EventArgs)"><summary>
            Raises the <c>PropertyChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.Drawing.LinearGradientColorPosition.ResetPosition"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.LinearGradientColorPosition.Position" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.LinearGradientColorPosition.ShouldSerializePosition"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.LinearGradientColorPosition.Position" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.LinearGradientColorPosition.#ctor"><summary>
            Initializes a new instance of the <c>LinearGradientColorPosition</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.LinearGradientColorPosition.#ctor(System.Drawing.Color,System.Single)"><summary>
            Initializes a new instance of the <c>LinearGradientColorPosition</c> class. 
            </summary><param name="color">The color of the gradient step.</param><param name="position">The percentage of distance along the gradient line.</param></member><member name="P:ActiproSoftware.Drawing.LinearGradientColorPosition.Color"><summary>
            Gets or sets the color of the gradient step.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object containing the color.</value></member><member name="P:ActiproSoftware.Drawing.LinearGradientColorPosition.ColorAlpha"><summary>
            Gets or sets the color alpha value.
            </summary><value>The color alpha value.</value></member><member name="P:ActiproSoftware.Drawing.LinearGradientColorPosition.Position"><summary>
            Gets or sets the percentage of distance along the gradient line.
            </summary><value>
            The percentage of distance along the gradient line.  This value is a decimal between 0 and 1.
            </value></member><member name="E:ActiproSoftware.Drawing.LinearGradientColorPosition.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.Drawing.MultiColorLinearGradient"><summary>
            Represents a multi-color linear gradient.
            </summary></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.Drawing.MultiColorLinearGradient" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.Drawing.MultiColorLinearGradient" /> object.</returns></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="middleColor">The middle color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,ActiproSoftware.Drawing.LinearGradientColorPosition[],System.Drawing.Color,System.Single)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="intermediateColors">The intermediate colors of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.GetBrush(System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.ResetIntermediateColors"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.MultiColorLinearGradient.IntermediateColors" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.ShouldSerializeIntermediateColors"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.MultiColorLinearGradient.IntermediateColors" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.#ctor"><summary>
            Initializes a new instance of the <c>MultiColorLinearGradient</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single)"><summary>
            Initializes a new instance of the <c>MultiColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="middleColor">The middle color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.Drawing.BackgroundFillRotationType)"><summary>
            Initializes a new instance of the <c>MultiColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="middleColor">The middle color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="rotationType">The type of rotation to perform when drawing the background fill for a side.</param></member><member name="M:ActiproSoftware.Drawing.MultiColorLinearGradient.#ctor(System.Drawing.Color,ActiproSoftware.Drawing.LinearGradientColorPosition[],System.Drawing.Color,System.Single,ActiproSoftware.Drawing.BackgroundFillRotationType)"><summary>
            Initializes a new instance of the <c>MultiColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="intermediateColors">The intermediate colors of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="rotationType">The type of rotation to perform when drawing the background fill for a side.</param></member><member name="P:ActiproSoftware.Drawing.MultiColorLinearGradient.IntermediateColors"><summary>
            Gets or sets the intermediate colors of the gradient.
            </summary><value>An array of <see cref="T:ActiproSoftware.Drawing.LinearGradientColorPosition" /> objects containing the intermediate colors.</value></member><member name="T:ActiproSoftware.Drawing.Office2003ColorScheme"><summary>
            Provides an Office 2003 color scheme.
            </summary></member><member name="M:ActiproSoftware.Drawing.Office2003ColorScheme.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.Drawing.Office2003ColorScheme.GetColorScheme(ActiproSoftware.Drawing.Office2003ColorSchemeType)"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the specified <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" />.
            </summary><param name="colorSchemeType">The <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" /> to return.</param><returns>The <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the specified <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" />.</returns></member><member name="M:ActiproSoftware.Drawing.Office2003ColorScheme.UpdateColors"><summary>
            Updates the colors.
            </summary><remarks>
            This method is called when the color scheme is first created and when system color preferences change.
            </remarks></member><member name="M:ActiproSoftware.Drawing.Office2003ColorScheme.#ctor(ActiproSoftware.Drawing.Office2003ColorSchemeType)"><summary>
            Creates an instance of the <c>Office2003ColorScheme</c> class.
            </summary><param name="baseColorSchemeType">The base <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" /> from which colors should be initialized.</param></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedAlternateBackGradientDarkColor"><summary>
            Gets the dark gradient background color of an alternate color set.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of an alternate color set.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedAlternateBackGradientLightColor"><summary>
            Gets the light gradient background color of an alternate color set.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of an alternate color set.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedAlternateForeColor"><summary>
            Gets the foreground color to use on the alternate background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the foreground color to use on the alternate background.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedCheckedBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a checked item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a checked item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedCheckedBackGradientLightColor"><summary>
            Gets the light gradient background color of a checked item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a checked item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedDecorationDarkColor"><summary>
            Gets the dark decoration color.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark decoration color.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedDecorationLightColor"><summary>
            Gets the light decoration color.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light decoration color.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedFormBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a form.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a form.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedFormBackGradientLightColor"><summary>
            Gets the light gradient background color of a form.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a form.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedHotBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a highlighted item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a highlighted item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedHotBackGradientLightColor"><summary>
            Gets the light gradient background color of a highlighted item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a highlighted item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedHotBorderColor"><summary>
            Gets the border color of a highlighted item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a highlighted item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedMenuBackColor"><summary>
            Gets the background color of a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedMenuBorderColor"><summary>
            Gets the color of the border of a dropped menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of the border of a dropped menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedMenuDisabledTextColor"><summary>
            Gets the color of disabled text on a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of disabled text on a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedMenuStripeGradientDarkColor"><summary>
            Gets the dark gradient color of the stripe on a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient color of the stripe on a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedMenuStripeGradientLightColor"><summary>
            Gets the light gradient color of the stripe on a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient color of the stripe on a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedMenuTextColor"><summary>
            Gets the color of text on a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of text on a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedNavigationPaneButtonBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a navigation pane in a normal state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a navigation pane in a normal state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedNavigationPaneButtonBackGradientLightColor"><summary>
            Gets the light gradient background color of a navigation pane in a normal state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a navigation pane in a normal state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedNavigationPaneButtonHotBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a navigation pane in a hot state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a navigation pane in a hot state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedNavigationPaneButtonHotBackGradientLightColor"><summary>
            Gets the light gradient background color of a navigation pane in a hot state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a navigation pane in a hot state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedNavigationPaneButtonHotPressedBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a navigation pane in a hot pressed state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a navigation pane in a hot pressed state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedNavigationPaneButtonHotPressedBackGradientLightColor"><summary>
            Gets the light gradient background color of a navigation pane in a hot pressed state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a navigation pane in a hot pressed state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedNavigationPaneButtonPressedBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a navigation pane in a pressed state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a navigation pane in a pressed state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedNavigationPaneButtonPressedBackGradientLightColor"><summary>
            Gets the light gradient background color of a navigation pane in a pressed state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a navigation pane in a pressed state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedPressedBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a pressed item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a pressed item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedPressedBackGradientLightColor"><summary>
            Gets the light gradient background color of a pressed item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a pressed item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedToolBarBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a toolbar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a toolbar.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedToolBarBackGradientLightColor"><summary>
            Gets the light gradient background color of a toolbar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a toolbar.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CalculatedToolBarForeColor"><summary>
            Gets the foreground color of a toolbar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the foreground color of a toolbar.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.AlternateBackGradientDarkColor"><summary>
            Gets the dark gradient background color of an alternate color set.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of an alternate color set.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.AlternateBackGradientLightColor"><summary>
            Gets the light gradient background color of an alternate color set.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of an alternate color set.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.AlternateForeColor"><summary>
            Gets the foreground color to use on the alternate background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the foreground color to use on the alternate background.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.BaseColorSchemeType"><summary>
            Gets a <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" /> that indicates the base color scheme type represented by this scheme.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" /> that indicates the base color scheme type represented by this scheme.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CheckedBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a checked item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a checked item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.CheckedBackGradientLightColor"><summary>
            Gets the light gradient background color of a checked item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a checked item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.ColorSchemeType"><summary>
            Gets a <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" /> that indicates the color scheme type represented by this scheme.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" /> that indicates the color scheme type represented by this scheme.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.DecorationDarkColor"><summary>
            Gets the dark decoration color.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark decoration color.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.DecorationLightColor"><summary>
            Gets the light decoration color.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light decoration color.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.DefaultColorScheme"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the current default color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the current default color scheme.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.DefaultColorSchemeType"><summary>
            Gets a <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" /> that indicates the default color scheme.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.Office2003ColorSchemeType" /> that indicates the default color scheme.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.FormBackDarkColor"><summary>
            Gets the dark gradient background color of a form.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a form.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.FormBackLightColor"><summary>
            Gets the light gradient background color of a form.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a form.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.HotBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a highlighted item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a highlighted item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.HotBackGradientLightColor"><summary>
            Gets the light gradient background color of a highlighted item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a highlighted item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.HotBorderColor"><summary>
            Gets the border color of a highlighted item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a highlighted item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.MenuBackColor"><summary>
            Gets the background color of a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.MenuBorderColor"><summary>
            Gets the color of the border of a dropped menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of the border of a dropped menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.MenuDisabledTextColor"><summary>
            Gets the color of disabled text on a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of disabled text on a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.MenuStripeGradientDarkColor"><summary>
            Gets the dark gradient color of the stripe on a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient color of a stripe on a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.MenuStripeGradientLightColor"><summary>
            Gets the light gradient color of the stripe on a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient color of a stripe on a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.MenuTextColor"><summary>
            Gets the color of text on a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of text on a menu.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.NavigationPaneButtonBackGradientDarkColor"><summary>
            Gets or sets the dark gradient background color of a navigation pane in a normal state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a navigation pane in a normal state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.NavigationPaneButtonBackGradientLightColor"><summary>
            Gets or sets the light gradient background color of a navigation pane in a normal state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a navigation pane in a normal state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.NavigationPaneButtonHotBackGradientDarkColor"><summary>
            Gets or sets the dark gradient background color of a navigation pane in a hot state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a navigation pane in a hot state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.NavigationPaneButtonHotBackGradientLightColor"><summary>
            Gets or sets the light gradient background color of a navigation pane in a hot state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a navigation pane in a hot state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.NavigationPaneButtonHotPressedBackGradientDarkColor"><summary>
            Gets or sets the dark gradient background color of a navigation pane in a hot pressed state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a navigation pane in a hot pressed state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.NavigationPaneButtonHotPressedBackGradientLightColor"><summary>
            Gets or sets the light gradient background color of a navigation pane in a hot pressed state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a navigation pane in a hot pressed state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.NavigationPaneButtonPressedBackGradientDarkColor"><summary>
            Gets or sets the dark gradient background color of a navigation pane in a pressed state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a navigation pane in a pressed state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.NavigationPaneButtonPressedBackGradientLightColor"><summary>
            Gets or sets the light gradient background color of a navigation pane in a pressed state.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a navigation pane in a pressed state.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.PressedBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a pressed item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a pressed item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.PressedBackGradientLightColor"><summary>
            Gets the light gradient background color of a pressed item.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a pressed item.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.ToolBarBackGradientDarkColor"><summary>
            Gets the dark gradient background color of a toolbar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark gradient background color of a toolbar.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.ToolBarBackGradientLightColor"><summary>
            Gets the light gradient background color of a toolbar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light gradient background color of a toolbar.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.ToolBarForeColor"><summary>
            Gets the foreground color of a toolbar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the foreground color of a toolbar.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.WindowsClassic"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the Windows Classic color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the Windows Classic color scheme.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.WindowsDefault"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the default Windows color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the default Windows color scheme.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.WindowsXPBlue"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the Windows XP blue color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the Windows XP blue color scheme.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.WindowsXPOliveGreen"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the Windows XP olive green color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the Windows XP olive green color scheme.</value></member><member name="P:ActiproSoftware.Drawing.Office2003ColorScheme.WindowsXPSilver"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the Windows XP silver color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.Office2003ColorScheme" /> that represents the Windows XP silver color scheme.</value></member><member name="T:ActiproSoftware.Drawing.Office2003ColorSchemeType"><summary>
            Specifies an Office 2003 color scheme type.
            </summary></member><member name="F:ActiproSoftware.Drawing.Office2003ColorSchemeType.WindowsDefault"><summary>
            The default Windows color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.Office2003ColorSchemeType.WindowsClassic"><summary>
            The Windows Classic color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.Office2003ColorSchemeType.WindowsXPBlue"><summary>
            The Windows XP blue color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.Office2003ColorSchemeType.WindowsXPOliveGreen"><summary>
            The Windows XP olive green color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.Office2003ColorSchemeType.WindowsXPSilver"><summary>
            The Windows XP silver color scheme.
            </summary></member><member name="T:ActiproSoftware.Drawing.Padding"><summary>
            Specifies a set of values for each side of a rectangle.
            </summary></member><member name="M:ActiproSoftware.Drawing.Padding.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.Padding.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.Padding.#ctor(System.Int32)"><summary>
            Initializes a new instance of the <c>Padding</c> class.
            </summary><param name="allSides">The value to assign to all sides.</param></member><member name="M:ActiproSoftware.Drawing.Padding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)"><summary>
            Initializes a new instance of the <c>Padding</c> class.
            </summary><param name="left">The left value to set.</param><param name="top">The top value to set.</param><param name="right">The right value to set.</param><param name="bottom">The bottom value to set.</param></member><member name="P:ActiproSoftware.Drawing.Padding.AllSidesEqual"><summary>
            Gets whether the padding is set.
            </summary><value><c>true</c> if any member of the padding is set; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Drawing.Padding.All"><summary>
            Gets or sets all values.
            </summary><value>All values.</value></member><member name="P:ActiproSoftware.Drawing.Padding.Bottom"><summary>
            Gets or sets the bottom value.
            </summary><value>The bottom value.</value></member><member name="P:ActiproSoftware.Drawing.Padding.Empty"><summary>
            Gets an empty <see cref="T:ActiproSoftware.Drawing.Padding" /> object.
            </summary><value>
            The empty <see cref="T:ActiproSoftware.Drawing.Padding" /> object that was created.
            </value></member><member name="P:ActiproSoftware.Drawing.Padding.Horizontal"><summary>
            Gets the combined padding for the right and left values.
            </summary><value>The combined padding for the right and left values.</value></member><member name="P:ActiproSoftware.Drawing.Padding.IsEmpty"><summary>
            Gets whether the padding is set.
            </summary><value><c>true</c> if any member of the padding is set; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Drawing.Padding.Left"><summary>
            Gets or sets the left value.
            </summary><value>The left value.</value></member><member name="P:ActiproSoftware.Drawing.Padding.Right"><summary>
            Gets or sets the right value.
            </summary><value>The right value.</value></member><member name="P:ActiproSoftware.Drawing.Padding.Top"><summary>
            Gets or sets the top value.
            </summary><value>The top value.</value></member><member name="P:ActiproSoftware.Drawing.Padding.Vertical"><summary>
            Gets the combined padding for the top and bottom values.
            </summary><value>The combined padding for the top and bottom values.</value></member><member name="P:ActiproSoftware.Drawing.Padding.Zero"><summary>
            Gets an <see cref="T:ActiproSoftware.Drawing.Padding" /> object with all sides equal to zero.
            </summary><value>
            The <see cref="T:ActiproSoftware.Drawing.Padding" /> object that was created.
            </value></member><member name="T:ActiproSoftware.Drawing.Range"><summary>
            Represents an ordered pair of min and max values.
            </summary></member><member name="M:ActiproSoftware.Drawing.Range.Contains(System.Int32)"><summary>
            Returns whether the range inclusively contains the specified value.
            </summary><param name="value">The value to check.</param><returns><c>true</c> if the range inclusively contains the specified value; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.Range.Contains(ActiproSoftware.Drawing.Range)"><summary>
            Returns whether the range inclusively contains the specified <see cref="T:ActiproSoftware.Drawing.Range" />.
            </summary><param name="range">The <see cref="T:ActiproSoftware.Drawing.Range" /> to check.</param><returns><c>true</c> if the range inclusively contains the specified <see cref="T:ActiproSoftware.Drawing.Range" />; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.Range.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.Range.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.Range.IntersectsWith(ActiproSoftware.Drawing.Range)"><summary>
            Returns whether the range intersects with the specified <see cref="T:ActiproSoftware.Drawing.Range" />.
            </summary><param name="range">The <see cref="T:ActiproSoftware.Drawing.Range" /> to check.</param><returns><c>true</c> if the range intersects with the specified <see cref="T:ActiproSoftware.Drawing.Range" />; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.Range.Normalize"><summary>
            Normalizes the range values (ensures that the maximum value is greater than or equal to the minimum).
            </summary></member><member name="M:ActiproSoftware.Drawing.Range.ToString"><summary>
            Converts the object to a <c>String</c>.
            </summary><returns>
            A string whose value represents this object.
            </returns></member><member name="M:ActiproSoftware.Drawing.Range.Union(ActiproSoftware.Drawing.Range)"><summary>
            Changes this <see cref="T:ActiproSoftware.Drawing.Range" /> to be the union of this <see cref="T:ActiproSoftware.Drawing.Range" /> with another <see cref="T:ActiproSoftware.Drawing.Range" />.
            </summary><param name="range">The <see cref="T:ActiproSoftware.Drawing.Range" /> with which to merge.</param></member><member name="M:ActiproSoftware.Drawing.Range.#ctor"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.Drawing.Range" /> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.Range.#ctor(System.Int32,System.Int32)"><summary>
            Initializes a new instance of the <see cref="T:ActiproSoftware.Drawing.Range" /> class with the specified min and max values.
            </summary><param name="min">The minimum value of the range.</param><param name="max">The maximum value of the range.</param></member><member name="P:ActiproSoftware.Drawing.Range.Empty"><summary>
            Returns an empty <see cref="T:ActiproSoftware.Drawing.Range" />.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.Range" /> that is empty.</value></member><member name="P:ActiproSoftware.Drawing.Range.IsEmpty"><summary>
            Returns whether the <see cref="T:ActiproSoftware.Drawing.Range" /> is empty.
            </summary><value><c>true</c> if the <see cref="T:ActiproSoftware.Drawing.Range" /> is empty; otherwise, <c>false</c>.</value></member><member name="P:ActiproSoftware.Drawing.Range.IsNormalized"><summary>
            Gets whether the range is normalized (the maximum value is greater than or equal to the minimum).
            </summary><value><c>true</c> if the range is normalized; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Drawing.Range.Length"><summary>
            Gets the length of this <see cref="T:ActiproSoftware.Drawing.Range" />.
            </summary><value>The length of this <see cref="T:ActiproSoftware.Drawing.Range" />.</value></member><member name="P:ActiproSoftware.Drawing.Range.Max"><summary>
            Gets or sets the maximum value of this <see cref="T:ActiproSoftware.Drawing.Range" />.
            </summary><value>The maximum value of this <see cref="T:ActiproSoftware.Drawing.Range" />.</value></member><member name="P:ActiproSoftware.Drawing.Range.Min"><summary>
            Gets or sets the minimum value of this <see cref="T:ActiproSoftware.Drawing.Range" />.
            </summary><value>The minimum value of this <see cref="T:ActiproSoftware.Drawing.Range" />.</value></member><member name="T:ActiproSoftware.Drawing.Sides"><summary>
            Specifies one or more sides.
            </summary></member><member name="F:ActiproSoftware.Drawing.Sides.Top"><summary>
            The top side.
            </summary></member><member name="F:ActiproSoftware.Drawing.Sides.Right"><summary>
            The right side.
            </summary></member><member name="F:ActiproSoftware.Drawing.Sides.Bottom"><summary>
            The bottom side.
            </summary></member><member name="F:ActiproSoftware.Drawing.Sides.Left"><summary>
            The left side.
            </summary></member><member name="T:ActiproSoftware.Drawing.SimpleBorder"><summary>
            Provides a class that draws a simple border.
            </summary></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.Drawing.Border" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.Drawing.Border" /> object.</returns></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.ResetColor"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.SimpleBorder.Color" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.ShouldSerializeColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.SimpleBorder.Color" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Draws the border.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="sides">The <see cref="T:ActiproSoftware.Drawing.Sides" /> of the border to draw.</param></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.Drawing.SimpleBorderStyle,System.Drawing.Color)"><summary>
            Draws a border.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the border.</param><param name="borderStyle">The <see cref="T:ActiproSoftware.Drawing.SimpleBorderStyle" /> specifying the border type.</param><param name="borderColor">The base <see cref="P:ActiproSoftware.Drawing.SimpleBorder.Color" /> of the border.</param></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,ActiproSoftware.Drawing.SimpleBorderStyle,System.Drawing.Color,ActiproSoftware.Drawing.Sides)"><summary>
            Draws a border.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the border.</param><param name="borderStyle">The <see cref="T:ActiproSoftware.Drawing.SimpleBorderStyle" /> specifying the border type.</param><param name="borderColor">The base <see cref="P:ActiproSoftware.Drawing.SimpleBorder.Color" /> of the border.</param><param name="sides">The <see cref="T:ActiproSoftware.Drawing.Sides" /> of the border to draw.</param></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.GetBorderWidth"><summary>
            Returns the width of the border.
            </summary><returns>The width of the border.</returns></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.GetBorderWidth(ActiproSoftware.Drawing.SimpleBorderStyle)"><summary>
            Returns the width of the border for the specified <see cref="T:ActiproSoftware.Drawing.SimpleBorderStyle" />.
            </summary><param name="borderStyle">A <see cref="T:ActiproSoftware.Drawing.SimpleBorderStyle" /> specifying the type of border to measure.</param><returns>The width of the border for the specified <see cref="T:ActiproSoftware.Drawing.SimpleBorderStyle" />.</returns></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.GetPrimaryColor"><summary>
            Returns the primary <c>Color</c> of the border.
            </summary><returns>The primary <c>Color</c> of the border.</returns></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.ResetStyle"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.SimpleBorder.Style" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.ShouldSerializeStyle"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.SimpleBorder.Style" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.#ctor"><summary>
            Initializes a new instance of the <c>SimpleBorder</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.SimpleBorder.#ctor(ActiproSoftware.Drawing.SimpleBorderStyle,System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>SimpleBorder</c> class.
            </summary><param name="style">The <see cref="T:ActiproSoftware.Drawing.SimpleBorderStyle" /> specifying the border type.</param><param name="color">The base <see cref="P:ActiproSoftware.Drawing.SimpleBorder.Color" /> of the border.</param></member><member name="P:ActiproSoftware.Drawing.SimpleBorder.Color"><summary>
            Gets or sets the base color of the border.
            </summary><value>A <see cref="P:ActiproSoftware.Drawing.SimpleBorder.Color" /> object containing the base color value.</value></member><member name="P:ActiproSoftware.Drawing.SimpleBorder.ColorAlpha"><summary>
            Gets or sets the color alpha value.
            </summary><value>The color alpha value.</value></member><member name="P:ActiproSoftware.Drawing.SimpleBorder.Style"><summary>
            Gets or sets the style of the border.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.SimpleBorderStyle" /> object specifying the border style.</value></member><member name="T:ActiproSoftware.Drawing.SimpleBorderStyle"><summary>
            Specifies a border style for a user interface component.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.None"><summary>
            No border.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.Solid"><summary>
            A solid line border.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.DoubleSolid"><summary>
            A solid line border 2 pixels wide.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.SinglePixelRoundedSolid"><summary>
            A single-pixel softly-rounded solid line border.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.SinglePixelRoundedTopSolid"><summary>
            A single-pixel softly-rounded (on the top only) solid line border.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.DoublePixelRoundedSolid"><summary>
            A double-pixel softly-rounded solid line border.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.Dashed"><summary>
            A dashed border.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.Dotted"><summary>
            A dotted-line border.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.Raised"><summary>
            The border has raised inner and outer edges.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.Sunken"><summary>
            The border has sunken inner and outer edges.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.RaisedInner"><summary>
            The border has raised inner edges.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.SunkenInner"><summary>
            The border has sunken inner edges.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.Bump"><summary>
            The inner and outer edges of the border have a raised appearance.
            </summary></member><member name="F:ActiproSoftware.Drawing.SimpleBorderStyle.Etched"><summary>
            The inner and outer edges of the border have an etched appearance.
            </summary></member><member name="T:ActiproSoftware.Drawing.SolidColorBackgroundFill"><summary>
            Provides a class that draws a solid color background fill.
            </summary></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.Drawing.BackgroundFill" /> object.</returns></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.ResetColor"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.SolidColorBackgroundFill.Color" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.ShouldSerializeColor"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.SolidColorBackgroundFill.Color" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="brushBounds">The reference bounds for the brush.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)"><summary>
            Fills an area with the background fill.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="color">The color of the background fill.</param></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.GetBrush(System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.#ctor"><summary>
            Initializes a new instance of the <c>SolidColorBackgroundFill</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.SolidColorBackgroundFill.#ctor(System.Drawing.Color)"><summary>
            Initializes a new instance of the <c>SolidColorBackgroundFill</c> class.
            </summary><param name="color">The color of the background fill.</param></member><member name="P:ActiproSoftware.Drawing.SolidColorBackgroundFill.Color"><summary>
            Gets or sets the color of the background fill.
            </summary><value>A <see cref="P:ActiproSoftware.Drawing.SolidColorBackgroundFill.Color" /> object containing the background fill color.</value></member><member name="P:ActiproSoftware.Drawing.SolidColorBackgroundFill.ColorAlpha"><summary>
            Gets or sets the color alpha value.
            </summary><value>The color alpha value.</value></member><member name="T:ActiproSoftware.Drawing.TwoColorLinearGradient"><summary>
            Represents a two color linear gradient.
            </summary></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.Clone"><summary>
            Creates an exact duplicate of the <see cref="T:ActiproSoftware.Drawing.TwoColorLinearGradient" /> object.
            </summary><returns>An exact duplicate of the <see cref="T:ActiproSoftware.Drawing.TwoColorLinearGradient" /> object.</returns></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="side">The side with which the background fill should be oriented.</param></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.Drawing.TwoColorLinearGradientStyle)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.Drawing.TwoColorLinearGradientStyle,System.Single,System.Single)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="bounds">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="focus">The gradient focus.</param><param name="scale">The gradient scale.</param></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.Drawing.TwoColorLinearGradientStyle)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="path">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.Draw(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.Drawing.TwoColorLinearGradientStyle,System.Single,System.Single)"><summary>
            Fills an area with the gradient.
            </summary><param name="g">The <c>Graphics</c> object used to paint.</param><param name="path">The bounds of the area to paint.</param><param name="gradientBounds">The bounds of the gradient effect.</param><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="focus">The gradient focus.</param><param name="scale">The gradient scale.</param></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.ResetFocus"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.TwoColorLinearGradient.Focus" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.ShouldSerializeFocus"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.TwoColorLinearGradient.Focus" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.GetBrush(System.Drawing.Rectangle,ActiproSoftware.Drawing.Sides)"><summary>
            Gets a <see cref="T:System.Drawing.Brush" /> that represents the background fill.
            </summary><param name="bounds">The bounds of the area to paint.</param><param name="side">The side with which the background fill should be oriented.</param><returns>A <see cref="T:System.Drawing.Brush" /> that represents the background fill.</returns></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.ResetScale"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.TwoColorLinearGradient.Scale" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.ShouldSerializeScale"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.TwoColorLinearGradient.Focus" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.ResetStyle"><summary>
            Resets the <see cref="P:ActiproSoftware.Drawing.TwoColorLinearGradient.Style" /> property to its default value.
            </summary></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.ShouldSerializeStyle"><summary>
            Indicates whether the <see cref="P:ActiproSoftware.Drawing.TwoColorLinearGradient.Style" /> property should be persisted.
            </summary><returns><c>true</c> if the property value has changed from its default; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.#ctor"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.Drawing.TwoColorLinearGradientStyle)"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.Drawing.TwoColorLinearGradientStyle,ActiproSoftware.Drawing.BackgroundFillRotationType)"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="rotationType">The type of rotation to perform when drawing the background fill for a side.</param></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.Drawing.TwoColorLinearGradientStyle,System.Single,System.Single)"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="focus">The gradient focus.</param><param name="scale">The gradient scale.</param></member><member name="M:ActiproSoftware.Drawing.TwoColorLinearGradient.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,ActiproSoftware.Drawing.TwoColorLinearGradientStyle,System.Single,System.Single,ActiproSoftware.Drawing.BackgroundFillRotationType)"><summary>
            Initializes a new instance of the <c>TwoColorLinearGradient</c> class. 
            </summary><param name="startColor">The start color of the gradient.</param><param name="endColor">The end color of the gradient.</param><param name="angle">The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.</param><param name="style">The style of the gradient.</param><param name="focus">The gradient focus.</param><param name="scale">The gradient scale.</param><param name="rotationType">The type of rotation to perform when drawing the background fill for a side.</param></member><member name="P:ActiproSoftware.Drawing.TwoColorLinearGradient.Focus"><summary>
            Gets or sets the gradient focus.
            </summary><value>The gradient focus.</value><remarks>
            This value is used to determine the center point of triangle and bell-shaped gradients.
            It's value should be a decimal between <c>0</c> and <c>1</c>.
            </remarks></member><member name="P:ActiproSoftware.Drawing.TwoColorLinearGradient.Scale"><summary>
            Gets or sets the gradient scale.
            </summary><value>The gradient scale.</value><remarks>
            This value is used to determine how fast the colors falloff from the focus in triangle and bell-shaped gradients.
            It's value should be a decimal between <c>0</c> and <c>1</c>.
            </remarks></member><member name="P:ActiproSoftware.Drawing.TwoColorLinearGradient.Style"><summary>
            Gets or sets the style of the gradient.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.TwoColorLinearGradientStyle" /> object containing the style of the gradient.</value></member><member name="T:ActiproSoftware.Drawing.TwoColorLinearGradientStyle"><summary>
            Specifies the type of gradient effect to apply to a <see cref="T:ActiproSoftware.Drawing.TwoColorLinearGradient" />.
            </summary></member><member name="F:ActiproSoftware.Drawing.TwoColorLinearGradientStyle.Normal"><summary>
            Specifies a gradient that starts with the start color at one edge and
            ends with the end color at the opposite edge.
            </summary></member><member name="F:ActiproSoftware.Drawing.TwoColorLinearGradientStyle.TriangleBump"><summary>
            Specifies a gradient that starts the end color at the center point of the gradient and
            performs a triangle shaped linear falloff to the edges 
            of the gradient using the start color.
            </summary></member><member name="F:ActiproSoftware.Drawing.TwoColorLinearGradientStyle.SigmaBellBump"><summary>
            Specifies a gradient that starts the end color at the center point of the gradient and
            performs a sigma bell-shaped linear falloff to the edges 
            of the gradient using the start color.
            </summary></member><member name="T:ActiproSoftware.Drawing.UIColor"><summary>
            Provides an enhanced representation of a <see cref="T:System.Drawing.Color" /> object that supports both RGB and HSB color settings.
            </summary></member><member name="M:ActiproSoftware.Drawing.UIColor.Equals(System.Drawing.Color)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.UIColor.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.Drawing.UIColor.FromAhsb(System.Single,System.Single,System.Single)"><summary>
            Creates a <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure from the specified HSB color values (hue, saturation, and brightness). 
            </summary><param name="hue">The hue component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 360.</param><param name="saturation">The saturation component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 1.</param><param name="brightness">The brightness component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 1.</param><returns>The <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            The alpha value is implicitly 255 (fully opaque). 
            Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to the values indicated above.
            </remarks></member><member name="M:ActiproSoftware.Drawing.UIColor.FromAhsb(System.Int32,System.Single,System.Single,System.Single)"><summary>
            Creates a <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure from an alpha value and the specified HSB color values (hue, saturation, and brightness).
            </summary><param name="alpha">The alpha component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="hue">The hue component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 360.</param><param name="saturation">The saturation component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 1.</param><param name="brightness">The brightness component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 1.</param><returns>The <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to the values indicated above.
            </remarks></member><member name="M:ActiproSoftware.Drawing.UIColor.FromArgb(System.Drawing.Color)"><summary>
            Creates a <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure from the specified <see cref="T:System.Drawing.Color" />.
            </summary><param name="color">The <see cref="T:System.Drawing.Color" /> to use as a template.</param><returns>The <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that this method creates.</returns></member><member name="M:ActiproSoftware.Drawing.UIColor.FromArgb(System.Int32,System.Int32,System.Int32)"><summary>
            Creates a <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure from the specified 8-bit color values (red, green, and blue). 
            </summary><param name="red">The red component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="green">The red component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="blue">The red component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><returns>The <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            The alpha value is implicitly 255 (fully opaque). 
            Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </remarks></member><member name="M:ActiproSoftware.Drawing.UIColor.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)"><summary>
            Creates a <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure from the four ARGB component (alpha, red, green, and blue) values.
            </summary><param name="alpha">The alpha component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="red">The red component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="green">The red component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><param name="blue">The red component value for the new <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure. Valid values are 0 through 255.</param><returns>The <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </remarks></member><member name="M:ActiproSoftware.Drawing.UIColor.FromMix(System.Drawing.Color,System.Drawing.Color,System.Single)"><summary>
             Creates a <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that is the specified percentage between the value of two <see cref="T:System.Drawing.Color" /> objects.
            </summary><param name="color1">The first <see cref="T:System.Drawing.Color" /> to examine.</param><param name="color2">The second <see cref="T:System.Drawing.Color" /> to examine.</param><param name="percentage">The percentage from the first color to the second in which to return a color.</param><returns>The <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that this method creates.</returns></member><member name="M:ActiproSoftware.Drawing.UIColor.FromKnownColor(System.Drawing.KnownColor)"><summary>
            Creates a <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure from the specified pre-defined color.
            </summary><param name="color">An element of the <see cref="T:System.Drawing.KnownColor" /> enumeration.</param><returns>The <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that this method creates.</returns></member><member name="M:ActiproSoftware.Drawing.UIColor.FromName(System.String)"><summary>
            Creates a <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure from the specified name of a pre-defined color.
            </summary><param name="name">
            A string that is the name of a pre-defined color. 
            Valid names are the same as the names of the elements of the <see cref="T:System.Drawing.KnownColor" /> enumeration.
            </param><returns>The <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that this method creates.</returns></member><member name="M:ActiproSoftware.Drawing.UIColor.FromWebColor(System.String)"><summary>
            Creates a <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure from the specified web color.
            </summary><param name="color">A string containing the color.</param><returns>The <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure that this method creates.</returns><remarks>
            This method can process HTML color specifications (e.g. #FF00FF) and known color names.
            </remarks></member><member name="M:ActiproSoftware.Drawing.UIColor.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.Drawing.UIColor.GetStandardCustomColors"><summary>
            Returns an array containing all of the standard custom values.
            </summary><returns>An array of <see cref="T:System.Drawing.Color" /> objects.</returns></member><member name="M:ActiproSoftware.Drawing.UIColor.GetSystemColors"><summary>
            Returns an array containing all of the <see cref="T:System.Drawing.SystemColors" /> values.
            </summary><returns>An array of <see cref="T:System.Drawing.Color" /> objects.</returns></member><member name="M:ActiproSoftware.Drawing.UIColor.GetTintedColor(System.Drawing.Color,System.Drawing.Color)"><summary>
            Returns the custom tinted color for the specified base color.
            </summary><param name="baseColor">The base <see cref="T:System.Drawing.Color" /> to examine.</param><param name="tintColor">The tint <see cref="T:System.Drawing.Color" />.</param><returns>The custom tinted color for the specified base color.</returns></member><member name="M:ActiproSoftware.Drawing.UIColor.GetWebColors"><summary>
            Returns an array containing all of the web color values.
            </summary><returns>An array of <see cref="T:System.Drawing.Color" /> objects.</returns></member><member name="M:ActiproSoftware.Drawing.UIColor.Tint(System.Drawing.Color)"><summary>
            Tints this color towards the specified tint <see cref="T:System.Drawing.Color" />.
            </summary><param name="tintColor">The tint <see cref="T:System.Drawing.Color" />.</param></member><member name="M:ActiproSoftware.Drawing.UIColor.ToColor"><summary>
            Gets the <see cref="T:System.Drawing.Color" /> value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.
            </summary><returns>
            The <see cref="T:System.Drawing.Color" /> that is encapsulated by this <see cref="T:ActiproSoftware.Drawing.UIColor" />.
            </returns></member><member name="M:ActiproSoftware.Drawing.UIColor.ToKnownColor"><summary>
            Gets the <see cref="T:System.Drawing.KnownColor" /> value of this <see cref="T:System.Drawing.KnownColor" /> structure.
            </summary><returns>
            An element of the <see cref="T:System.Drawing.KnownColor" /> enumeration, if the <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure is created from a pre-defined color 
            by using either the <see cref="M:ActiproSoftware.Drawing.UIColor.FromName(System.String)" /> method or the <see cref="M:ActiproSoftware.Drawing.UIColor.FromKnownColor(System.Drawing.KnownColor)" /> method; otherwise, zero.
            </returns></member><member name="M:ActiproSoftware.Drawing.UIColor.ToWebColor"><summary>
            Converts the <see cref="T:ActiproSoftware.Drawing.UIColor" /> to a web color.
            </summary><returns>
            The color in HTML color specification format (e.g. #FF00FF).
            </returns></member><member name="M:ActiproSoftware.Drawing.UIColor.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="P:ActiproSoftware.Drawing.UIColor.A"><summary>
            Gets or sets the alpha component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.
            </summary><value>The alpha component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.Drawing.UIColor.B"><summary>
            Gets or sets the blue component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.
            </summary><value>The blue component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.Drawing.UIColor.Brightness"><summary>
            Gets or sets the brightness component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.
            </summary><value>The brightness component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.Drawing.UIColor.G"><summary>
            Gets or sets the green component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.
            </summary><value>The green component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.Drawing.UIColor.Hue"><summary>
            Gets or sets the hue component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.
            </summary><value>The hue component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.Drawing.UIColor.R"><summary>
            Gets or sets the ref component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.
            </summary><value>The red component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.</value></member><member name="P:ActiproSoftware.Drawing.UIColor.Saturation"><summary>
            Gets or sets the saturation component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.
            </summary><value>The saturation component value of this <see cref="T:ActiproSoftware.Drawing.UIColor" /> structure.</value></member><member name="T:ActiproSoftware.Drawing.VerticalAlignment"><summary>
            Specifies how an object or text in a control is vertically aligned.
            </summary></member><member name="F:ActiproSoftware.Drawing.VerticalAlignment.Top"><summary>
            The object or text is aligned to the top.
            </summary></member><member name="F:ActiproSoftware.Drawing.VerticalAlignment.Middle"><summary>
            The object or text is aligned in the middle.
            </summary></member><member name="F:ActiproSoftware.Drawing.VerticalAlignment.Bottom"><summary>
            The object or text is aligned to the bottom.
            </summary></member><member name="T:ActiproSoftware.Drawing.WindowsColorScheme"><summary>
            Provides a Windows color scheme.
            </summary></member><member name="M:ActiproSoftware.Drawing.WindowsColorScheme.UpdateColors"><summary>
            Updates the colors.
            </summary><remarks>
            This method is called when the color scheme is first created and when system color preferences change.
            </remarks></member><member name="M:ActiproSoftware.Drawing.WindowsColorScheme.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.Drawing.WindowsColorScheme.GetColorScheme(ActiproSoftware.Drawing.WindowsColorSchemeType)"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the specified <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" />.
            </summary><param name="colorSchemeType">The <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> to return.</param><returns>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the specified <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" />.</returns></member><member name="M:ActiproSoftware.Drawing.WindowsColorScheme.Initialize"><summary>
            Re-initializes all the colors.
            </summary></member><member name="M:ActiproSoftware.Drawing.WindowsColorScheme.#ctor(System.String,ActiproSoftware.Drawing.WindowsColorSchemeType,System.Drawing.Color)"><summary>
            Creates an instance of the <c>WindowsColorScheme</c> class.
            </summary><param name="key">The key of the color scheme.</param><param name="baseColorSchemeType">The base <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> from which colors should be initialized.</param><param name="tintColor">A <see cref="T:System.Drawing.Color" /> that if is not <c>Color.Empty</c> will tint the color scheme to be based on the color.</param></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonCheckedBack"><summary>
            Gets or sets the background color of a checked bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a checked bar button.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonCheckedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a checked bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a checked bar button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonCheckedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a checked bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a checked bar button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonCheckedBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a checked bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a checked bar button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonCheckedBorder"><summary>
            Gets or sets the border color of a checked bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a checked bar button.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonHotBack"><summary>
            Gets or sets the background color of a hot bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a hot bar button.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonHotBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a hot bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a hot bar button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonHotBackGradientEnd"><summary>
            Gets or sets the end gradient color of a hot bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a hot bar button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonHotBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a hot bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot bar button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonHotBorder"><summary>
            Gets or sets the border color of a hot bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a hot bar button.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonPressedBack"><summary>
            Gets or sets the background color of a pressed bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a pressed bar button.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonPressedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a pressed bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a pressed bar button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonPressedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a pressed bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a pressed bar button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonPressedBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a pressed bar button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a pressed bar button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonPressedBorder"><summary>
            Gets or sets the border color of a pressed bar button.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a pressed bar button.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonText"><summary>
            Gets or sets the color of bar button text.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of bar button text.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonTextAlternate"><summary>
            Gets or sets the color of alternate bar button text.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of alternate bar button text.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarButtonTextDisabled"><summary>
            Gets or sets the color of disabled bar button text.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of disabled bar button text.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BarLabelBack"><summary>
            Gets or sets the background color of a bar label.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a bar label.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.BaseColorSchemeType"><summary>
            Gets a <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> that indicates the base color scheme type represented by this scheme.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> that indicates the base color scheme type represented by this scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ColorSchemeType"><summary>
            Gets a <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> that indicates the resolved color scheme type represented by this scheme.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> that indicates the resolved color scheme type represented by this scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.DefaultColorSchemeType"><summary>
            Gets a <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> that indicates the default color scheme.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> that indicates the default color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.FormBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a form background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a form background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.FormBackGradientEnd"><summary>
            Gets or sets the end gradient color of a form background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a form background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.Key"><summary>
            Gets the key that identifies the color scheme.
            </summary><value>The key that identifies the color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.MenuBack"><summary>
            Gets or sets the background color of a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a menu.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.MenuBorder"><summary>
            Gets or sets the border color of a menu.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the border color of a menu.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.MenuIconColumnBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a menu icon column background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a menu icon column background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.MenuIconColumnBackGradientEnd"><summary>
            Gets or sets the end gradient color of a menu icon column background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a menu icon column background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.MenuIconColumnBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a menu icon column background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a menu icon column background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationBarHeaderBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a navigationbar header background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a navigationbar header background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationBarHeaderBackGradientEnd"><summary>
            Gets or sets the end gradient color of a navigationbar header background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a navigationbar header background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationBarHeaderText"><summary>
            Gets or sets the color of navigationbar header text.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of navigationbar header text.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonBackGradientEnd"><summary>
            Gets or sets the end gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonBackGradientMid1"><summary>
            Gets or sets the middle gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonBackGradientMid2"><summary>
            Gets or sets the middle gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonHotBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a hot navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a hot navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonHotBackGradientEnd"><summary>
            Gets or sets the end gradient color of a hot navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a hot navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonHotBackGradientMid1"><summary>
            Gets or sets the middle gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonHotBackGradientMid2"><summary>
            Gets or sets the middle gradient color of a navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonHotPressedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a hot/pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a hot/pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonHotPressedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a hot/pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a hot/pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonHotPressedBackGradientMid1"><summary>
            Gets or sets the middle gradient color of a hot/pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot/pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonHotPressedBackGradientMid2"><summary>
            Gets or sets the middle gradient color of a hot/pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot/pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonPressedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonPressedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonPressedBackGradientMid1"><summary>
            Gets or sets the middle gradient color of a pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.NavigationPaneButtonPressedBackGradientMid2"><summary>
            Gets or sets the middle gradient color of a pressed navigationbar pane button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a pressed navigationbar pane button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.Office2007Black"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Office 2007 black color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Office 2007 black color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.Office2007Blue"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Office 2007 blue color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Office 2007 blue color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.Office2007Silver"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Office 2007 silver color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Office 2007 silver color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a toolbar background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a toolbar background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarBackGradientEnd"><summary>
            Gets or sets the end gradient color of a toolbar background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a toolbar background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a toolbar background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a toolbar background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarFloatingTitleBack"><summary>
            Gets or sets the background color of a floating toolbar title bar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the background color of a floating toolbar title bar.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarFloatingTitleText"><summary>
            Gets or sets the text color of a floating toolbar title bar.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the text color of a floating toolbar title bar.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarGripperDark"><summary>
            Gets or sets the dark color of a toolbar gripper.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark color of a toolbar gripper.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarGripperLight"><summary>
            Gets or sets the light color of a toolbar gripper.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light color of a toolbar gripper.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarOptionsBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a toolbar options button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarOptionsBackGradientEnd"><summary>
            Gets or sets the end gradient color of a toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a toolbar options button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarOptionsBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a toolbar options button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarOptionsHotBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a hot toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a hot toolbar options button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarOptionsHotBackGradientEnd"><summary>
            Gets or sets the end gradient color of a hot toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a hot toolbar options button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarOptionsHotBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a hot toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a hot toolbar options button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarOptionsPressedBackGradientBegin"><summary>
            Gets or sets the begin gradient color of a pressed toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the begin gradient color of a pressed toolbar options button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarOptionsPressedBackGradientEnd"><summary>
            Gets or sets the end gradient color of a pressed toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the end gradient color of a pressed toolbar options button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarOptionsPressedBackGradientMiddle"><summary>
            Gets or sets the middle gradient color of a pressed toolbar options button background.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the middle gradient color of a pressed toolbar options button background.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarSeparatorDark"><summary>
            Gets or sets the dark color of a toolbar separator.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the dark color of a toolbar separator.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarSeparatorLight"><summary>
            Gets or sets the light color of a toolbar separator.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the light color of a toolbar separator.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.ToolBarShadow"><summary>
            Gets or sets the color of a toolbar shadow.
            </summary><value>A <see cref="T:System.Drawing.Color" /> object specifying the color of a toolbar shadow.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.VisualStudio2005"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Visual Studio 2005 color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Visual Studio 2005 color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.WindowsClassic"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows Classic color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows Classic color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.WindowsDefault"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the default Windows color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the default Windows color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.WindowsXPBlue"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows XP blue color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows XP blue color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.WindowsXPOliveGreen"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows XP olive green color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows XP olive green color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.WindowsXPRoyale"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows XP royale color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows XP royale color scheme.</value></member><member name="P:ActiproSoftware.Drawing.WindowsColorScheme.WindowsXPSilver"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows XP silver color scheme.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> that represents the Windows XP silver color scheme.</value></member><member name="T:ActiproSoftware.Drawing.WindowsColorSchemeType"><summary>
            Specifies a Windows color scheme type.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.WindowsDefault"><summary>
            The default Windows color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.WindowsClassic"><summary>
            The Windows Classic color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.WindowsXPBlue"><summary>
            The Windows XP blue color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.WindowsXPOliveGreen"><summary>
            The Windows XP olive green color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.WindowsXPRoyale"><summary>
            The Windows XP royale color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.WindowsXPSilver"><summary>
            The Windows XP silver color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.VisualStudio2005"><summary>
            The Visual Studio 2005 color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.Office2007Blue"><summary>
            The Office 2007 blue color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.Office2007Silver"><summary>
            The Office 2007 silver color scheme.
            </summary></member><member name="F:ActiproSoftware.Drawing.WindowsColorSchemeType.Office2007Black"><summary>
            The Office 2007 black color scheme.
            </summary></member><member name="T:ActiproSoftware.Products.ActiproLicense"><summary>
            Represents a license for Actipro Software components.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicense.Dispose"><summary>
            Releases all resources used by the object.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicense.SetExceptionType(System.Int32)"><summary>
            Sets the specified exception type to the license.
            </summary><param name="exceptionType">The exception type to set.</param><remarks>
            This method allows for the setting of an exception after the license has been created.
            </remarks></member><member name="P:ActiproSoftware.Products.ActiproLicense.ExpirationDate"><summary>
            Gets the expiration date.
            </summary><value>The expiration date.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.ExpandedLicenseKey"><summary>
            Gets the expanded license key.
            </summary><value>The expanded license key.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.IsUnlicensedAddon"><summary>
            Gets whether the license is for an unlicensed add-on.
            </summary><value><c>true</c> if the license is for an unlicensed add-on; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Products.ActiproLicense.IsValid"><summary>
            Gets whether the license is valid.
            </summary><value><c>true</c> if the license is valid; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Products.ActiproLicense.IsSiteLicense"><summary>
            Gets whether the license is a site license.
            </summary><value><c>true</c> if the license is a site license; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Products.ActiproLicense.LicenseCount"><summary>
            Gets the number of licenses provided by the license key.
            </summary><value>The number of licenses provided by the license key.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.Licensee"><summary>
            Gets the name of the licensee.
            </summary><value>The name of the licensee.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.LicenseKey"><summary>
            Gets the compacted license key.
            </summary><value>The compacted license key.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.MajorVersion"><summary>
            Gets the major version for which the license applies.
            </summary><value>The major version for which the license applies.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.MinorVersion"><summary>
            Gets the minor version for which the license applies.
            </summary><value>The minor version for which the license applies.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.ProductFlags"><summary>
            Gets the product flags designated by the license.
            </summary><value>The product flags designated by the license.</value></member><member name="P:ActiproSoftware.Products.ActiproLicense.SourceLocation"><summary>
            Gets the location from where the license was obtained.
            </summary><value>The location from where the license was obtained.</value></member><member name="T:ActiproSoftware.Products.ActiproLicenseProvider"><summary>
            Represents a license provider for Actipro Software components.
            </summary></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.CreateLicense(ActiproSoftware.Products.AssemblyInfo,System.String,System.String,ActiproSoftware.Products.ActiproLicenseSourceLocation,System.Int32)"><summary>
            Creates a license that is invalid because of a license exception.
            </summary><param name="assemblyInfo">Information about the assembly being licensed.</param><param name="licensee">The name of the licensee.</param><param name="licenseKey">The compacted license key.</param><param name="sourceLocation">The location from where the license was obtained.</param><param name="exceptionType">The type of exception that occurred.</param><returns>The license that was created.</returns></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.CreateLicense(ActiproSoftware.Products.AssemblyInfo,System.String,System.String,ActiproSoftware.Products.ActiproLicenseSourceLocation,System.Int32,System.Byte,System.Byte,System.Byte,ActiproSoftware.Products.AssemblyLicenseType,System.Byte,ActiproSoftware.Products.AssemblyPlatform,System.Int32,System.DateTime)"><summary>
            Creates a license.
            </summary><param name="assemblyInfo">Information about the assembly being licensed.</param><param name="licensee">The name of the licensee.</param><param name="licenseKey">The compacted license key.</param><param name="sourceLocation">The location from where the license was obtained.</param><param name="exceptionType">The type of exception that occurred.</param><param name="productCode">The product code for which the license applies.</param><param name="majorVersion">The major version for which the license applies.</param><param name="minorVersion">The minor version for which the license applies.</param><param name="licenseType">The type of license.</param><param name="licenseCount">The number of licenses provided by the license key.</param><param name="platform">The target platform for the license.</param><param name="organizationID">The organization ID for which the license was generated.</param><param name="date">The date.</param><returns>The license that was created.</returns></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.CreateLicense(ActiproSoftware.Products.AssemblyInfo,System.String,System.String,ActiproSoftware.Products.ActiproLicenseSourceLocation,System.Int32,System.Byte,System.Byte,System.Byte,ActiproSoftware.Products.AssemblyLicenseType,System.Byte,ActiproSoftware.Products.AssemblyPlatform,System.Int32,System.DateTime,System.Byte)"><summary>
            Creates a license.
            </summary><param name="assemblyInfo">Information about the assembly being licensed.</param><param name="licensee">The name of the licensee.</param><param name="licenseKey">The compacted license key.</param><param name="sourceLocation">The location from where the license was obtained.</param><param name="exceptionType">The type of exception that occurred.</param><param name="productCode">The product code for which the license applies.</param><param name="majorVersion">The major version for which the license applies.</param><param name="minorVersion">The minor version for which the license applies.</param><param name="licenseType">The type of license.</param><param name="licenseCount">The number of licenses provided by the license key.</param><param name="platform">The target platform for the license.</param><param name="organizationID">The organization ID for which the license was generated.</param><param name="date">The date.</param><param name="productFlags">The product flags.</param><returns>The license that was created.</returns></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.EnsureLicenseProvider(System.ComponentModel.Component,System.Type)"><summary>
            Ensures that a proper <see cref="T:System.ComponentModel.LicenseProvider" /> is set for a component.
            </summary><param name="component">The <see cref="T:System.ComponentModel.Component" /> to check.</param><param name="licenseProviderType">The <see cref="T:System.Type" /> of license provider to check for.</param></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.EnsureLicenseProvider(System.ComponentModel.IComponent,System.Type)"><summary>
            Ensures that a proper <see cref="T:System.ComponentModel.LicenseProvider" /> is set for a component.
            </summary><param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to check.</param><param name="licenseProviderType">The <see cref="T:System.Type" /> of license provider to check for.</param></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object)"><summary>
            Returns a license for the component.
            </summary><param name="context">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies where you can use the licensed object.</param><param name="type">A <see cref="T:System.Type" /> that represents the component requesting the license.</param><param name="instance">The instance of the component requesting a license.</param><returns>The license that was created.</returns></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)"><summary>
            Returns a license for the instance of the component, if one is available.
            </summary><param name="context">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies where you can use the licensed object.</param><param name="type">A <see cref="T:System.Type" /> that represents the component requesting the license.</param><param name="instance">An object that is requesting the license.</param><param name="allowExceptions"><c>true</c> if a <see cref="T:System.ComponentModel.LicenseException" /> should be thrown when the component cannot be granted a license; otherwise, <c>false</c>.</param><returns>
            A valid <see cref="T:System.ComponentModel.License" />. If this method cannot find a valid <see cref="T:System.ComponentModel.License" /> or a valid context parameter, 
            it returns <see langword="null" />.
            </returns></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.GetLicenseInfoFromAssemblyContext(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Int32,System.String@,System.String@,ActiproSoftware.Products.ActiproLicenseSourceLocation@)"><summary>
            Attempts to get the license information from the assembly context.
            </summary><param name="context">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies where you can use the licensed object.</param><param name="type">A <see cref="T:System.Type" /> that represents the component requesting the license.</param><param name="instance">The instance of the component requesting a license.</param><param name="encryptionKey">The encryption key to use.</param><param name="licensee">Returns the licensee.</param><param name="licenseKey">Returns the license key.</param><param name="sourceLocation">Returns the source location.</param></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.GetLicenseInfoFromRegistry(System.String,System.String@,System.String@,ActiproSoftware.Products.ActiproLicenseSourceLocation@)"><summary>
            Attempts to get the license information from the registry.
            </summary><param name="regKeyName">The registry key to examine.</param><param name="licensee">Returns the licensee.</param><param name="licenseKey">Returns the license key.</param><param name="sourceLocation">Returns the source location.</param></member><member name="M:ActiproSoftware.Products.ActiproLicenseProvider.#ctor"><summary>
            Initializes a new instance of the <c>ActiproLicenseProvider</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.Products.ActiproLicenseProvider.AssemblyInfo"><summary>
            Gets the <see cref="P:ActiproSoftware.Products.ActiproLicenseProvider.AssemblyInfo" /> to use for the assembly being licensed.
            </summary><value>The <see cref="P:ActiproSoftware.Products.ActiproLicenseProvider.AssemblyInfo" /> to use for the assembly being licensed.</value></member><member name="T:ActiproSoftware.Products.ActiproLicenseSourceLocation"><summary>
            Specifies where a license was obtained.
            </summary></member><member name="F:ActiproSoftware.Products.ActiproLicenseSourceLocation.None"><summary>
            No license was obtained.
            </summary></member><member name="F:ActiproSoftware.Products.ActiproLicenseSourceLocation.Fixed"><summary>
            The license was hard-coded in code.  This is used for betas and pre-releases.
            </summary></member><member name="F:ActiproSoftware.Products.ActiproLicenseSourceLocation.Registry"><summary>
            The license was obtained from the registry.
            </summary></member><member name="F:ActiproSoftware.Products.ActiproLicenseSourceLocation.AssemblySavedContext"><summary>
            The license was obtained from an assembly saved context.
            </summary></member><member name="T:ActiproSoftware.Products.AssemblyInfo"><summary>
            Provides a base class for retrieving information about an assembly.
            </summary></member><member name="M:ActiproSoftware.Products.AssemblyInfo.ShowLicenseForm(ActiproSoftware.Products.ActiproLicense)"><summary>
            Shows the license form for the assembly.
            </summary><param name="license">The license for which the form should display information.</param></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Assembly"><summary>
            Gets the assembly.
            </summary><value>The assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Components"><summary>
            Gets an array containing the components that must be licensed to be used in production applications.
            </summary><value>An array containing the components that must be licensed to be used in production applications.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Copyright"><summary>
            Gets the copyright of the assembly.
            </summary><value>The copyright of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Description"><summary>
            Gets the description of the assembly.
            </summary><value>The description of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.LicenseFormProductLogo"><summary>
            Gets the product logo <see cref="T:System.Drawing.Image" /> to display on the license form.
            </summary><value>The <see cref="T:System.Drawing.Image" /> resource that was retrieved.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.LicenseType"><summary>
            Gets the type of license that is available for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyLicenseType" /> specifying the type of license that is available for the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Platform"><summary>
            Gets the target platform for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyPlatform" /> specifying the target platform for the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Product"><summary>
            Gets the product of the assembly.
            </summary><value>The product of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.ProductCode"><summary>
            Gets the product code of the assembly.
            </summary><value>A three-letter product code of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.RedistributableFiles"><summary>
            Gets an array containing the names of files that are permitted to be redistributed 
            with your projects after you have licensed the product.
            </summary><value>
            An array containing the names of files that are permitted to be redistributed 
            with your projects after you have licensed the product
            </value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Title"><summary>
            Gets the title of the assembly.
            </summary><value>The title of the assembly.</value></member><member name="P:ActiproSoftware.Products.AssemblyInfo.Version"><summary>
            Gets the version of the assembly.
            </summary><value>The version of the assembly.</value></member><member name="T:ActiproSoftware.Products.AssemblyLicenseType"><summary>
            Specifies the type of license for an assembly.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.Invalid"><summary>
            An invalid assembly license type.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.Beta"><summary>
            An assembly for beta testing.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.PreRelease"><summary>
            A pre-release version of an assembly.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.Evaluation"><summary>
            An evaluation copy of a release version.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyLicenseType.Full"><summary>
            A full copy of a release version that may be licensed.
            </summary></member><member name="T:ActiproSoftware.Products.AssemblyPlatform"><summary>
            Specifies the target platform for an assembly.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.Invalid"><summary>
            An invalid platform.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.WindowsForms"><summary>
            Windows Forms.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.ASPNET"><summary>
            ASP.NET.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.WPF"><summary>
            Windows Presentation Foundation.
            </summary></member><member name="F:ActiproSoftware.Products.AssemblyPlatform.Independent"><summary>
            Independent.
            </summary></member><member name="T:ActiproSoftware.Products.Resources"><summary>
            Provides a class for accessing the resources of an assembly.
            </summary></member><member name="M:ActiproSoftware.Products.Resources.ClearCustomStrings"><summary>
            Removes all custom strings.
            </summary></member><member name="M:ActiproSoftware.Products.Resources.GetCursor(System.Reflection.Assembly,System.String)"><summary>
            Gets a <see cref="T:System.Windows.Forms.Cursor" /> from the resources.
            </summary><param name="assembly">The <see cref="T:System.Reflection.Assembly" /> that contains the <see cref="T:System.Windows.Forms.Cursor" />.</param><param name="name">The name of the resource to get.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> resource that was retrieved.</returns></member><member name="M:ActiproSoftware.Products.Resources.GetCustomString(System.String)"><summary>
            Gets the specified string that is stored in the custom string resources.
            </summary><param name="name">The name of the resource to get.</param><returns>The specified string that is stored in the custom string resources.</returns></member><member name="M:ActiproSoftware.Products.Resources.GetIcon(System.Reflection.Assembly,System.String)"><summary>
            Gets an <see cref="T:System.Drawing.Icon" /> from the resources.
            </summary><param name="assembly">The <see cref="T:System.Reflection.Assembly" /> that contains the <see cref="T:System.Drawing.Icon" />.</param><param name="name">The name of the resource to get.</param><returns>The <see cref="T:System.Drawing.Icon" /> resource that was retrieved.</returns></member><member name="M:ActiproSoftware.Products.Resources.GetString(System.String)"><summary>
            Gets the value of the specified string resource.
            </summary><param name="name">The name of the resource to get.</param><returns>
            The value of the resource localized for the caller's current culture settings. 
            If a best match is not possible, <see langword="null" /> is returned.
            </returns></member><member name="M:ActiproSoftware.Products.Resources.GetString(System.String,System.Globalization.CultureInfo)"><summary>
            Gets the value of the string resource localized for the specified culture.
            </summary><param name="name">The name of the resource to get.</param><param name="culture">
            The <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture for which the resource is localized. 
            Note that if the resource is not localized for this culture, the lookup will fall back using the culture's 
            <see cref="P:System.Globalization.CultureInfo.Parent" /> property, stopping after looking in the neutral culture. 
            </param><returns>
            The value of the resource localized for the specified culture. 
            If a best match is not possible, <see langword="null" /> is returned.
            </returns></member><member name="M:ActiproSoftware.Products.Resources.RemoveCustomString(System.String)"><summary>
            Removes the specified string from the custom string resources.
            </summary><param name="name">The name of the resource to remove.</param></member><member name="M:ActiproSoftware.Products.Resources.SetCustomString(System.String,System.String)"><summary>
            Sets a string value for a custom string resource.
            </summary><param name="name">The name of the resource to set.</param><param name="value">The value of the resource to set.</param></member><member name="M:ActiproSoftware.Products.Resources.#ctor"><summary>
            Initializes a new instance of the <c>Resources</c> class.
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.Products.Resources.StringResourcesName"><summary>
            Gets the name of the string resources file to load for the assembly.
            </summary><value>The name of the string resources file to load for the assembly.</value></member><member name="T:ActiproSoftware.Products.Shared.AssemblyInfo"><summary>
            Provides a class for retrieving information about the <c>ActiproSoftware.Shared</c> assembly.
            </summary></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.Components"><summary>
            Gets an array containing the components that must be licensed to be used in production applications.
            </summary><value>An array containing the components that must be licensed to be used in production applications.</value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.Instance"><summary>
            Gets the instance of the <see cref="T:ActiproSoftware.Products.AssemblyInfo" /> class for this assembly.
            </summary><value>The instance of the <see cref="T:ActiproSoftware.Products.AssemblyInfo" /> class for this assembly.</value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.LicenseType"><summary>
            Gets the type of license that is available for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyLicenseType" /> specifying the type of license that is available for the assembly.</value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.Platform"><summary>
            Gets the target platform for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyPlatform" /> specifying the target platform for the assembly.</value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.ProductCode"><summary>
            Gets the product code of the assembly.
            </summary><value>A three-letter product code of the assembly.</value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.RedistributableFiles"><summary>
            Gets an array containing the names of files that are permitted to be redistributed 
            with your projects after you have licensed the product.
            </summary><value>
            An array containing the names of files that are permitted to be redistributed 
            with your projects after you have licensed the product
            </value></member><member name="P:ActiproSoftware.Products.Shared.AssemblyInfo.Resources"><summary>
            Gets a <see cref="T:ActiproSoftware.Products.Shared.Resources" /> that provides access to the resources of the assembly.
            </summary><value>
            A <see cref="T:ActiproSoftware.Products.Shared.Resources" /> that provides access to the resources of the assembly.
            </value></member><member name="T:ActiproSoftware.Products.Shared.Resources"><summary>
            Provides a class for accessing the resources of an assembly.
            </summary></member><member name="T:ActiproSoftware.Security.Cryptography.CryptoHelper"><summary>
            Provides helpful methods for performing crypto routines.
            </summary></member><member name="M:ActiproSoftware.Security.Cryptography.CryptoHelper.DecryptString(System.String,System.Int32)"><summary>
            Decrypts a string.
            </summary><param name="source">The encrypted text to decrypt.</param><param name="key">The integer key.</param><returns>The decrypted string value.</returns></member><member name="M:ActiproSoftware.Security.Cryptography.CryptoHelper.EncryptString(System.String,System.Int32)"><summary>
            Encrypts a string.
            </summary><param name="source">The decrypted text to encrypt.</param><param name="key">The integer key.</param><returns>The encrypted string value.</returns></member><member name="M:ActiproSoftware.Security.Cryptography.CryptoHelper.#ctor"><summary>
            Initializes a new instance of the <c>CryptoHelper</c> class. 
            </summary></member><member name="T:ActiproSoftware.WebServices.UpgradeCheck"><remarks /></member><member name="M:ActiproSoftware.WebServices.UpgradeCheck.GetLatestVersionInfo(System.String)"><remarks /></member><member name="M:ActiproSoftware.WebServices.UpgradeCheck.BeginGetLatestVersionInfo(System.String,System.AsyncCallback,System.Object)"><remarks /></member><member name="M:ActiproSoftware.WebServices.UpgradeCheck.EndGetLatestVersionInfo(System.IAsyncResult)"><remarks /></member><member name="M:ActiproSoftware.WebServices.UpgradeCheck.GetLatestVersionInfoAsync(System.String)"><remarks /></member><member name="M:ActiproSoftware.WebServices.UpgradeCheck.GetLatestVersionInfoAsync(System.String,System.Object)"><remarks /></member><member name="M:ActiproSoftware.WebServices.UpgradeCheck.CancelAsync(System.Object)"><remarks /></member><member name="M:ActiproSoftware.WebServices.UpgradeCheck.#ctor"><remarks /></member><member name="E:ActiproSoftware.WebServices.UpgradeCheck.GetLatestVersionInfoCompleted"><remarks /></member><member name="T:ActiproSoftware.WebServices.GetLatestVersionInfoCompletedEventHandler"><remarks /></member><member name="T:ActiproSoftware.WebServices.GetLatestVersionInfoCompletedEventArgs"><remarks /></member><member name="P:ActiproSoftware.WebServices.GetLatestVersionInfoCompletedEventArgs.Result"><remarks /></member><member name="T:ActiproSoftware.WinUICore.OwnerDrawContextMenu"><summary>
            Represents an owner-draw <c>ContextMenu</c> with the new Windows menu appearance.
            </summary></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawContextMenu.#ctor"><summary>
            Initializes a new instance of the <c>OwnerDrawContextMenu</c> class. 
            </summary></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawContextMenu.#ctor(System.Windows.Forms.ImageList)"><summary>
            Initializes a new instance of the <c>OwnerDrawContextMenu</c> class. 
            </summary><param name="imageList">The <c>ImageList</c> to use for menu item images.</param></member><member name="P:ActiproSoftware.WinUICore.OwnerDrawContextMenu.ColorScheme"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> to use for drawing menu items.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> to use for drawing menu items.</value></member><member name="P:ActiproSoftware.WinUICore.OwnerDrawContextMenu.ImageList"><summary>
            Gets or sets the <c>ImageList</c> used for item images. 
            </summary><value>
            An <c>ImageList</c>.  The default value is a null reference. 
            </value></member><member name="T:ActiproSoftware.WinUICore.OwnerDrawMainMenu"><summary>
            Represents an owner-draw <c>MainMenu</c> with the new Windows menu appearance.
            </summary></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMainMenu.#ctor"><summary>
            Initializes a new instance of the <c>OwnerDrawMainMenu</c> class. 
            </summary></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMainMenu.#ctor(System.Windows.Forms.ImageList)"><summary>
            Initializes a new instance of the <c>OwnerDrawMainMenu</c> class. 
            </summary><param name="imageList">The <c>ImageList</c> to use for menu item images.</param></member><member name="P:ActiproSoftware.WinUICore.OwnerDrawMainMenu.ColorScheme"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> to use for drawing menu items.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> to use for drawing menu items.</value></member><member name="P:ActiproSoftware.WinUICore.OwnerDrawMainMenu.ImageList"><summary>
            Gets or sets the <c>ImageList</c> used for item images. 
            </summary><value>
            An <c>ImageList</c>.  The default value is a null reference. 
            </value></member><member name="T:ActiproSoftware.WinUICore.OwnerDrawMenuItem"><summary>
            Represents an owner-draw <c>MenuItem</c> with the new Windows menu appearance.
            </summary></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)"><summary>
            Occurs when the <c>OwnerDraw</c> property of a menu item is set to true and a request is made to draw the menu item.
            </summary><param name="e">Event arguments</param></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)"><summary>
            Occurs when the menu needs to know the size of a menu item before drawing it.
            </summary><param name="e">Event arguments</param></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMenuItem.#ctor"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMenuItem.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMenuItem.#ctor(System.String,System.Int32)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="imageIndex">The index of an image within the parent <see cref="P:ActiproSoftware.WinUICore.OwnerDrawContextMenu.ImageList" />.</param></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMenuItem.#ctor(System.String,System.Windows.Forms.Shortcut)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="shortcut">A <c>Shortcut</c> for the menu item.</param></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMenuItem.#ctor(System.String,System.EventHandler)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="onClick">The <c>EventHandler</c> that handles the <c>Click</c> event for the menu item.</param></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMenuItem.#ctor(System.String,System.Boolean,System.EventHandler,System.Windows.Forms.Shortcut,System.Object)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="isChecked">Whether the item is checked.</param><param name="onClick">The <c>EventHandler</c> that handles the <c>Click</c> event for the menu item.</param><param name="shortcut">A <c>Shortcut</c> for the menu item.</param><param name="tag">An object that provides context information.</param></member><member name="M:ActiproSoftware.WinUICore.OwnerDrawMenuItem.#ctor(System.String,System.Int32,System.EventHandler,System.Windows.Forms.Shortcut,System.Object)"><summary>
            Initializes a new instance of the <c>OwnerDrawMenuItem</c> class. 
            </summary><param name="text">The text displayed on the item.</param><param name="imageIndex">The index of an image within the parent <see cref="P:ActiproSoftware.WinUICore.OwnerDrawContextMenu.ImageList" />.</param><param name="onClick">The <c>EventHandler</c> that handles the <c>Click</c> event for the menu item.</param><param name="shortcut">A <c>Shortcut</c> for the menu item.</param><param name="tag">An object that provides context information.</param></member><member name="P:ActiproSoftware.WinUICore.OwnerDrawMenuItem.Image"><summary>
            Gets or sets the image to display on the menu item. 
            </summary><value>
            The image to display on the menu item.
            </value></member><member name="P:ActiproSoftware.WinUICore.OwnerDrawMenuItem.ImageIndex"><summary>
            Gets or sets the index of an image within the parent's <c>ImageList</c> to be displayed. 
            </summary><value>
            The index of an image within the <c>ImageList</c>. 
            </value><remarks>
            This property should be set to <c>-1</c> if no image is to be displayed on the item. 
            </remarks></member><member name="P:ActiproSoftware.WinUICore.OwnerDrawMenuItem.ShortcutText"><summary>
            Gets the proper display text of a shortcut.
            </summary><value>The proper display text of a shortcut.</value></member></members></doc>