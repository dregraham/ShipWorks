<?xml version="1.0"?><doc><assembly><name>ActiproSoftware.WinUICore.Net20</name></assembly><members><member name="T:ActiproSoftware.WinUICore.IUIElement"><summary>
            Represents a base requirements for an element that has a user interface.
            </summary></member><member name="M:ActiproSoftware.WinUICore.IUIElement.Arrange(System.Drawing.Rectangle)"><summary>
            Updates the <see cref="P:ActiproSoftware.WinUICore.IUIElement.Bounds" /> property and positions child elements.
            </summary><param name="newBounds">The final bounds of the element.</param><remarks>
            This method internally calls <c>ArrangeCore</c> override, giving the derived class opportunity to arrange 
            its children and/or content using the final computed bounds. 
            In <c>ArrangeCore</c> overrides, the derived class is supposed to create its visual structure and prepare itself for rendering. 
            <see cref="M:ActiproSoftware.WinUICore.IUIElement.Arrange(System.Drawing.Rectangle)" /> is called by parents from their implementation of <c>ArrangeCore</c> or by system when needed. 
            This method sets the <see cref="P:ActiproSoftware.WinUICore.IUIElement.Bounds" /> property to <c>newBounds</c> before calling <c>ArrangeCore</c>.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IUIElement.CreateGraphics"><summary>
            Creates the <see cref="T:System.Drawing.Graphics" /> object for the use with the object.
            </summary><returns>The <see cref="T:System.Drawing.Graphics" /> object for the object.</returns></member><member name="M:ActiproSoftware.WinUICore.IUIElement.GetDrawState"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> for the element.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> for the element.</value><remarks>The default implementation of this method returns <c>UIElementDrawState.None</c>.</remarks></member><member name="M:ActiproSoftware.WinUICore.IUIElement.HitTest(ActiproSoftware.WinUICore.PointHitTestParameters)"><summary>
            Hit tests to find the <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> that contains the specified coordinates.
            </summary><param name="hitTestParams">A <see cref="T:ActiproSoftware.WinUICore.PointHitTestParameters" /> containing hit test parameters.</param><returns>A <see cref="T:ActiproSoftware.WinUICore.PointHitTestResult" /> containing the hit test result.</returns></member><member name="M:ActiproSoftware.WinUICore.IUIElement.HitTestRecursive(ActiproSoftware.WinUICore.PointHitTestParameters)"><summary>
            Recursively hit tests to find the <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> that contains the specified coordinates.
            </summary><param name="hitTestParams">A <see cref="T:ActiproSoftware.WinUICore.PointHitTestParameters" /> containing hit test parameters.</param><returns>A <see cref="T:ActiproSoftware.WinUICore.PointHitTestResult" /> containing the hit test result.</returns></member><member name="M:ActiproSoftware.WinUICore.IUIElement.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)"><summary>
            Invalidates the specified states for the element or its related elements.
            </summary><param name="levels">The hierarchy levels at which to invalidate.</param><param name="types">The types of invalidation to perform.</param></member><member name="M:ActiproSoftware.WinUICore.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the element and updates the <see cref="P:ActiproSoftware.WinUICore.IUIElement.DesiredSize" /> property.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><remarks>
            The <see cref="M:ActiproSoftware.WinUICore.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> method should be called by parents on their children.
            Internally, <see cref="M:ActiproSoftware.WinUICore.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> calls the <c>MeasureCore</c> override on the same object,
            giving it opportunity to compute its <see cref="P:ActiproSoftware.WinUICore.IUIElement.DesiredSize" />. 
            This method will return immediately if the child's measurements are valid, previously measured and 
            <c>availableSize</c> is the same as cached. 
            This method also resets the <see cref="P:ActiproSoftware.WinUICore.IUIElement.IsMeasureValid" /> bit on the child. 
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IUIElement.NotifyMouseLeaveEvent"><summary>
            Notifies the object of a a mouse leave event.
            </summary><remarks>This enables the object to cancel hot state tracking.</remarks></member><member name="M:ActiproSoftware.WinUICore.IUIElement.Render(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="P:ActiproSoftware.WinUICore.IUIElement.Bounds"><summary>
            Gets or sets a <see cref="T:System.Drawing.Rectangle" /> specifying the bounds of the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the bounds of the element.</value></member><member name="P:ActiproSoftware.WinUICore.IUIElement.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.WinUICore.IUIElement.DesiredSize"><summary>
            Gets the desired size of the element as computed by <see cref="M:ActiproSoftware.WinUICore.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.
            </summary><value>The desired size of the element as computed by <see cref="M:ActiproSoftware.WinUICore.IUIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.</value><remarks>
            This is only valid if <see cref="P:ActiproSoftware.WinUICore.IUIElement.IsMeasureValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.WinUICore.IUIElement.IsArrangeValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.WinUICore.IUIElement.DesiredSize" /> property and position of child elements is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.WinUICore.IUIElement.DesiredSize" /> property and position of child elements is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.WinUICore.IUIElement.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)" />. 
            <see cref="P:ActiproSoftware.WinUICore.IUIElement.IsArrangeValid" /> and <see cref="P:ActiproSoftware.WinUICore.IUIElement.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.IUIElement.IsMeasureValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.WinUICore.IUIElement.DesiredSize" /> property is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.WinUICore.IUIElement.DesiredSize" /> property is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.WinUICore.IUIElement.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)" />. 
            <see cref="P:ActiproSoftware.WinUICore.IUIElement.IsArrangeValid" /> and <see cref="P:ActiproSoftware.WinUICore.IUIElement.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.IUIElement.Size"><summary>
            Gets or sets the actual size of the element.
            </summary><value>The actual size of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.WinUICore.IUIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.WinUICore.IUIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.WinUICore.IUIElement.Visibility"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.WinUICore.Visibility" /> of the element.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.Visibility" /> of the element.</value></member><member name="T:ActiproSoftware.WinUICore.IUIControl"><summary>
            Represents a base requirements for a WinUICore-based user interface control.
            </summary></member><member name="M:ActiproSoftware.WinUICore.IUIControl.AddPendingGraphicsInversion(System.Drawing.Rectangle)"><summary>
            Inverts the canvas using XOR at the end of the current or next drawing operation.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param><returns><c>true</c> if the inversion operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.IUIControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="orientation">The direction to scroll.</param><param name="amount">The amount to scroll.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.IUIControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Int32,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="xAmount">The amount to scroll horizontally.</param><param name="yAmount">The amount to scroll vertically.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.IUIControl.AddToInvalidatedRegion(System.Drawing.Rectangle)"><summary>
            Adds a <c>Rectangle</c> to the invalidated region.
            </summary><param name="rect">The <c>Rectangle</c> to add to the invalidated region.</param></member><member name="M:ActiproSoftware.WinUICore.IUIControl.ResetDoubleBufferCanvas(System.Boolean)"><summary>
            Resets the double-buffer canvas.
            </summary><param name="recurse">Whether to recurse down into the child control tree.</param></member><member name="P:ActiproSoftware.WinUICore.IUIControl.Capture"><summary>
            Gets or sets a value indicating whether the control has captured the mouse.
            </summary><value><c>true</c> if the control has captured the mouse; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.IUIControl.MouseCaptureElement"><summary>
            Indicates the <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> for which mouse capture is being performed.
            </summary><value>
            The <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> for which mouse capture is being performed.
            </value></member><member name="T:ActiproSoftware.WinUICore.UIControl"><summary>
            Provides base functionality for controls that wish to work with <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> objects.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIControl.AddPendingGraphicsInversion(System.Drawing.Rectangle)"><summary>
            Inverts the canvas using XOR at the end of the current or next drawing operation.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param><returns><c>true</c> if the inversion operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="orientation">The direction to scroll.</param><param name="amount">The amount to scroll.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Int32,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="xAmount">The amount to scroll horizontally.</param><param name="yAmount">The amount to scroll vertically.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIControl.AddToInvalidatedRegion"><summary>
            Adds the bounds of the control to the invalidated region.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIControl.AddToInvalidatedRegion(System.Drawing.Rectangle)"><summary>
            Adds a <c>Rectangle</c> to the invalidated region.
            </summary><param name="rect">The <c>Rectangle</c> to add to the invalidated region.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)"><summary>
            Updates the <see cref="P:System.Windows.Forms.Control.Bounds" /> property and positions child elements.
            </summary><param name="newBounds">The final bounds of the element.</param><remarks>
            This method internally calls <see cref="M:ActiproSoftware.WinUICore.UIControl.ArrangeCore" /> override, giving the derived class opportunity to arrange 
            its children and/or content using the final computed bounds. 
            In <see cref="M:ActiproSoftware.WinUICore.UIControl.ArrangeCore" /> overrides, the derived class is supposed to create its visual structure and prepare itself for rendering. 
            <see cref="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)" /> is called by parents from their implementation of <see cref="M:ActiproSoftware.WinUICore.UIControl.ArrangeCore" /> or by system when needed. 
            This method sets the <see cref="P:System.Windows.Forms.Control.Bounds" /> property to <c>newBounds</c> before calling <see cref="M:ActiproSoftware.WinUICore.UIControl.ArrangeCore" />.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIControl.ArrangeCore"><summary>
            Provides the place to perform arrange logic for the element.
            </summary><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIControl.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.ComponentModel.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.WinUICore.UIControl.Dispose(System.Boolean)"><summary>
            Disposes any resources used by the object.
            </summary><param name="disposing">Whether the object is being disposed.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.GetCursor(System.Drawing.Point)"><summary>
            Gets the <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.
            </summary><param name="point">The <see cref="T:System.Drawing.Point" /> to examine.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.</returns></member><member name="M:ActiproSoftware.WinUICore.UIControl.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)"><summary>
            Invalidates the specified states for the element or its related elements.
            </summary><param name="levels">The hierarchy levels at which to invalidate.</param><param name="types">The types of invalidation to perform.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the element and updates the <see cref="P:ActiproSoftware.WinUICore.UIControl.DesiredSize" /> property.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><remarks>
            The <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> method should be called by parents on their children.
            Internally, <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> calls the <see cref="M:ActiproSoftware.WinUICore.UIControl.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> override on the same object, 
            giving it opportunity to compute its <see cref="P:ActiproSoftware.WinUICore.UIControl.DesiredSize" />. 
            This method will return immediately if the child's measurements are valid, previously measured and 
            <c>availableSize</c> is the same as cached. 
            This method also resets the <see cref="P:ActiproSoftware.WinUICore.UIControl.IsMeasureValid" /> bit on the child. 
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIControl.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.WinUICore.UIControl.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnClick(System.EventArgs)"><summary>
            Raises the <c>Click</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnDoubleClick(System.EventArgs)"><summary>
            Raises the <c>DoubleClick</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnHandleCreated(System.EventArgs)"><summary>
            Raises the <c>HandleCreated</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnLayout(System.Windows.Forms.LayoutEventArgs)"><summary>
            Raises the <c>Layout</c> event.
            </summary><param name="e">An <c>LayoutEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseDown</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnMouseEnter(System.EventArgs)"><summary>
            Raises the <c>MouseEnter</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnMouseHover(System.EventArgs)"><summary>
            Raises the <c>MouseHover</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnMouseLeave(System.EventArgs)"><summary>
            Raises the <c>MouseLeave</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseMove</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseUp</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseWheel</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnPaint(System.Windows.Forms.PaintEventArgs)"><summary>
            Raises the <c>Paint</c> event.
            </summary><param name="e">An <c>PaintEventArgs</c> that contains the event data.</param><remarks>
            The default implementation of this event sets up a double-buffering canvas and simply
            calls the <see cref="M:ActiproSoftware.WinUICore.UIControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.  
            It is sealed to prevent implementors from implementing it.
            All drawing code should be placed in the <see cref="M:ActiproSoftware.WinUICore.UIControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)"><summary>
            Raises the <c>PaintBackground</c> event.
            </summary><param name="e">An <c>PaintEventArgs</c> that contains the event data.</param><remarks>
            The default implementation of this event does nothing.  
            It is sealed to prevent implementors from implementing it.
            All drawing code should be placed in the <see cref="M:ActiproSoftware.WinUICore.UIControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnParentChanged"><summary>
            Invoked when logical parent is changed. 
            This is invoked after the parent has changed, and the purpose is to allow elements to perform actions based on the changed parent.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnRenderChildElements(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the child elements.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><remarks>
            This method should not generally be overridden.
            The default implementation of this method calls the <see cref="M:ActiproSoftware.WinUICore.UIControl.Render(System.Windows.Forms.PaintEventArgs)" /> method on all child elements.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnResize(System.EventArgs)"><summary>
            Raises the <c>Resize</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.OnVisibleChanged(System.EventArgs)"><summary>
            Raises the <c>VisibleChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.Render(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.ResetDoubleBufferCanvas(System.Boolean)"><summary>
            Resets the double-buffer canvas.
            </summary><param name="recurse">Whether to recurse down into the child control tree.</param></member><member name="M:ActiproSoftware.WinUICore.UIControl.ResumePainting"><summary>
            Allows the control to paint itself by clearing the <see cref="P:ActiproSoftware.WinUICore.UIControl.PaintingSuspended" /> flag.
            </summary><seealso cref="P:ActiproSoftware.WinUICore.UIControl.PaintingSuspended" /></member><member name="M:ActiproSoftware.WinUICore.UIControl.SuspendPainting"><summary>
            Prevents the control from painting itself by setting the <see cref="P:ActiproSoftware.WinUICore.UIControl.PaintingSuspended" /> flag.
            </summary><seealso cref="P:ActiproSoftware.WinUICore.UIControl.PaintingSuspended" /></member><member name="M:ActiproSoftware.WinUICore.UIControl.UpdateLayout"><summary>
            Call this method to ensure that the whole subtree of elements that includes this <see cref="T:ActiproSoftware.WinUICore.UIElement" /> is properly updated.
            </summary><remarks>
            This ensures that <see cref="T:ActiproSoftware.WinUICore.UIElement" /> objects with invalid measure or arrange states will get a call to their 
            <see cref="M:ActiproSoftware.WinUICore.UIControl.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> and <see cref="M:ActiproSoftware.WinUICore.UIControl.ArrangeCore" /> methods, and all computed sizes will be validated. 
            This method does nothing if layout is clean but it does work if layout is not clean so avoid 
            calling it after each change in the element tree. 
            It makes sense to either never call it (system will do this in a deferred manner) or only 
            call it if you absolutely need updated sizes and positions after you do all changes.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIControl.#ctor"><summary>
            Initializes a new instance of the <c>UIControl</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIControl.BackColor"><summary>
            Gets or sets the background color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</value></member><member name="P:ActiproSoftware.WinUICore.UIControl.BackgroundImage"><summary>
            Gets or sets the background image displayed in the control.
            </summary><value>An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</value></member><member name="P:ActiproSoftware.WinUICore.UIControl.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.UIControl.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.WinUICore.UIControl.DesiredSize"><summary>
            Gets the desired size of the element as computed by <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.
            </summary><value>The desired size of the element as computed by <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.</value><remarks>
            This is only valid if <see cref="P:ActiproSoftware.WinUICore.UIControl.IsMeasureValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIControl.Font"><summary>
            Gets or sets the font of the text displayed by the control.
            </summary><value>The <see cref="T:System.Drawing.Font" /> object to apply to the text displayed by the control.</value></member><member name="P:ActiproSoftware.WinUICore.UIControl.ForeColor"><summary>
            Gets or sets the foreground color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control.</value></member><member name="P:ActiproSoftware.WinUICore.UIControl.IsArrangeValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.WinUICore.UIControl.DesiredSize" /> property and position of child elements is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.WinUICore.UIControl.DesiredSize" /> property and position of child elements is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.WinUICore.UIControl.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)" />. 
            <see cref="P:ActiproSoftware.WinUICore.UIControl.IsArrangeValid" /> and <see cref="P:ActiproSoftware.WinUICore.UIControl.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIControl.IsMeasureValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.WinUICore.UIControl.DesiredSize" /> property is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.WinUICore.UIControl.DesiredSize" /> property is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.WinUICore.UIControl.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)" />. 
            <see cref="P:ActiproSoftware.WinUICore.UIControl.IsArrangeValid" /> and <see cref="P:ActiproSoftware.WinUICore.UIControl.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIControl.LastMouseUpButton"><summary>
            Gets the <see cref="T:System.Windows.Forms.MouseButtons" /> indicating the last mouse button that was released.
            </summary><value>The <see cref="T:System.Windows.Forms.MouseButtons" /> indicating the last mouse button that was released.</value></member><member name="P:ActiproSoftware.WinUICore.UIControl.PaintingSuspended"><summary>
            Gets whether the control is painting itself.
            </summary><value><c>true</c> if the control is painting itself; otherwise, <c>false</c>.</value><remarks>
            If this flag is set, calls to the <c>OnPaint</c> method will be ignored.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIControl.UseControlGraphicsForMeasure"><summary>
            Gets or sets whether to use a call to the control's <c>CreateGraphics</c> method to obtain the <see cref="T:System.Drawing.Graphics" /> used for measure routines.
            </summary><value><c>true</c> if the control's <c>CreateGraphics</c> method should be called; otherwise, <c>false</c>.
            The default value is <c>true</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.UIControl.UseExtendedDoubleBuffering"><summary>
            Gets or sets whether to use extended double buffering for rendering.
            </summary><value><c>true</c> if extended double buffering should be used; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabel"><summary>
            Represents a label that is capable of formatting simple HTML tags.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabel.ArrangeCore"><summary>
            Provides the place to perform arrange logic for the element.
            </summary><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabel.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.ComponentModel.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabel.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabel.GetPreferredSize"><summary>
            Returns the preferred size of the control.
            </summary><returns>A <see cref="T:System.Drawing.Size" /> containing the perferred size of the control.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabel.OnDownloadImage(ActiproSoftware.MarkupLabel.MarkupLabelDownloadImageEventArgs)"><summary>
            Raises the <c>DownloadImage</c> event.
            </summary><param name="e">An <c>MarkupLabelDownloadImageEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabel.OnFontChanged(System.EventArgs)"><summary>
            Raises the <c>FontChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabel.OnLinkClick(ActiproSoftware.MarkupLabel.MarkupLabelLinkClickEventArgs)"><summary>
            Raises the <c>LinkClick</c> event.
            </summary><param name="e">An <c>MarkupLabelLinkClickEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabel.OnResize(System.EventArgs)"><summary>
            Raises the <c>Resize</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabel.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabel</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabel.BackColor"><summary>
            Gets or sets the background color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabel.BackgroundImage"><summary>
            Gets or sets the background image displayed in the control.
            </summary><value>An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabel.Font"><summary>
            Gets or sets the font of the text displayed by the control.
            </summary><value>The <see cref="T:System.Drawing.Font" /> object to apply to the text displayed by the control.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabel.ForeColor"><summary>
            Gets or sets the foreground color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabel.MaxWidth"><summary>
            Gets or sets the maximum width of the element.
            </summary><value>The maximum width of the element.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabel.RootElement"><summary>
            Gets the <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> that is the root element.
            </summary><value>The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> that is the root element.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabel.Text"><summary>
            Gets or sets the markup text to display in the label.
            </summary><value>The markup text to display in the label.</value></member><member name="E:ActiproSoftware.MarkupLabel.MarkupLabel.DownloadImage"><summary>
            Occurs when an image needs to be downloaded for a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelImageElement" />.
            </summary><eventdata>
            The event handler receives an argument of type <c>MarkupLabelDownloadImageEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.MarkupLabel.MarkupLabel.LinkClick"><summary>
            Occurs after a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement" /> is clicked.
            </summary><eventdata>
            The event handler receives an argument of type <c>MarkupLabelLinkClickEventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelElement"><summary>
            Provides the base class for a <see cref="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.MarkupLabel" /> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelElement.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.ComponentModel.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelElement.CreateUIElement(ActiproSoftware.WinUICore.IUIElement)"><summary>
            Creates the <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> tree from the element.
            </summary><param name="parentUIElement">The parent <see cref="T:ActiproSoftware.WinUICore.IUIElement" />.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelElement.GetBackColor(ActiproSoftware.WinUICore.UIElementDrawState)"><summary>
            Gets the background <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> indicating the draw state.</param><returns>The background <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelElement.GetForeColor(ActiproSoftware.WinUICore.UIElementDrawState)"><summary>
            Gets the foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> indicating the draw state.</param><returns>The foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelElement.GetFont(System.String,System.Single,ActiproSoftware.MarkupLabel.MarkupLabelFontWeight,ActiproSoftware.MarkupLabel.MarkupLabelFontStyle,ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration,ActiproSoftware.WinUICore.UIElementDrawState)"><summary>
            Gets the <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.
            </summary><param name="fontFamily">The font family.</param><param name="fontSize">The font size.</param><param name="fontWeight">A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelFontWeight" /> indicating the font weight.</param><param name="fontStyle">A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelFontStyle" /> indicating the font style.</param><param name="textDecoration">A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration" /> indicating the text decoration.</param><param name="drawState">A <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> indicating the draw state.</param><returns>The <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelElement.GetFont"><summary>
            Gets the <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.
            </summary><returns>The <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelElement.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelElement.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>MarkupLabelElement</c> class. 
            </summary><param name="elementName">The name of the element represented by this class.</param></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.Children"><summary>
            Gets the collection of child objects.
            </summary><value>The collection of child objects.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.ClassName"><summary>
            Gets or sets the class name of the element.
            </summary><value>The class name of the element.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.CssData"><summary>
            Gets the <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> specifying CSS data for the element.
            </summary><value>The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> specifying CSS data for the element.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.ElementName"><summary>
            Gets the name of the element represented by this class.
            </summary><value>The name of the element represented by this class.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.Id"><summary>
            Gets or sets the id of the element.
            </summary><value>The id of the element.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.MarkupLabel"><summary>
            Gets the <see cref="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.MarkupLabel" /> that owns the element.
            </summary><value>The <see cref="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.MarkupLabel" /> that owns the element.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.Parent"><summary>
            Gets or sets the object that is parent to this object.
            </summary><value>The object that is parent to this object.</value><remarks>
            The setter of this property is reserved for internal use only.
            </remarks></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.Style"><summary>
            Gets or sets the CSS style string for the element.
            </summary><value>The CSS style string for the element.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelElement.VerticalAlignment"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElementVerticalAlignment" /> indicating the vertical alignment.
            </summary><value>A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElementVerticalAlignment" /> indicating the vertical alignment.</value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for an <c>a</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement.GetForeColor(ActiproSoftware.WinUICore.UIElementDrawState)"><summary>
            Gets the foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> indicating the draw state.</param><returns>The foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelAnchorElement</c> class. 
            </summary></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement.HRef"><summary>
            Gets or sets the HREF to which the anchor is linked.
            </summary><value>The HREF to which the anchor is linked.</value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelBodyElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for a <c>body</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelBodyElement.GetBackColor(ActiproSoftware.WinUICore.UIElementDrawState)"><summary>
            Gets the background <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> indicating the draw state.</param><returns>The background <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelBodyElement.GetForeColor(ActiproSoftware.WinUICore.UIElementDrawState)"><summary>
            Gets the foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.
            </summary><param name="drawState">A <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> indicating the draw state.</param><returns>The foreground <see cref="T:System.Drawing.Color" /> to use for drawing the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelBodyElement.GetFont(System.String,System.Single,ActiproSoftware.MarkupLabel.MarkupLabelFontWeight,ActiproSoftware.MarkupLabel.MarkupLabelFontStyle,ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration,ActiproSoftware.WinUICore.UIElementDrawState)"><summary>
            Gets the <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.
            </summary><param name="fontFamily">The font family.</param><param name="fontSize">The font size.</param><param name="fontWeight">A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelFontWeight" /> indicating the font weight.</param><param name="fontStyle">A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelFontStyle" /> indicating the font style.</param><param name="textDecoration">A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration" /> indicating the text decoration.</param><param name="drawState">A <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> indicating the draw state.</param><returns>The <see cref="T:System.Drawing.Font" /> to use for drawing text in the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelBodyElement.#ctor(ActiproSoftware.MarkupLabel.MarkupLabel)"><summary>
            Initializes a new instance of the <c>MarkupLabelBodyElement</c> class. 
            </summary><param name="markupLabel">The <see cref="P:ActiproSoftware.MarkupLabel.MarkupLabelBodyElement.MarkupLabel" /> that owns the element.</param></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelBodyElement.MarkupLabel"><summary>
            Gets the <see cref="P:ActiproSoftware.MarkupLabel.MarkupLabelBodyElement.MarkupLabel" /> that owns the element.
            </summary><value>The <see cref="P:ActiproSoftware.MarkupLabel.MarkupLabelBodyElement.MarkupLabel" /> that owns the element.</value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelBoldElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for a <c>b</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelBoldElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelBoldElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelBoldElement</c> class. 
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData"><summary>
            Provides a store for CSS data.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelCssData.Parse(ActiproSoftware.MarkupLabel.MarkupLabelCssData,System.String)"><summary>
            Parses CSS data into a new <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> object.
            </summary><param name="cssData">A template <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" />.</param><param name="css">The css string of data.</param><returns>The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> that was created.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelCssData.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelCssData.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelCssData</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelCssData.BackgroundColor"><summary>
            Gets or sets the background <see cref="T:System.Drawing.Color" />.
            </summary><value>The background <see cref="T:System.Drawing.Color" />.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelCssData.Color"><summary>
            Gets or sets the foreground <see cref="T:System.Drawing.Color" />.
            </summary><value>The foreground <see cref="T:System.Drawing.Color" />.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelCssData.FontFamily"><summary>
            Gets or sets the name of the font family.
            </summary><value>The name of the font family.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelCssData.FontSize"><summary>
            Gets or sets the font size.
            </summary><value>The font size.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelCssData.FontStyle"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelFontStyle" /> indicating the font style.
            </summary><value>A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelFontStyle" /> indicating the font style.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelCssData.FontWeight"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelFontWeight" /> indicating the font weight.
            </summary><value>A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelFontWeight" /> indicating the font weight.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelCssData.TextDecoration"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration" /> indicating the text decoration.
            </summary><value>A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration" /> indicating the text decoration.</value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelDownloadImageEventArgs"><summary>
            Provides data for <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabel" /> download image events.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelDownloadImageEventArgs.#ctor(ActiproSoftware.MarkupLabel.MarkupLabelImageElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelDownloadImageEventArgs</c> class.
            </summary><param name="element">The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelImageElement" /> that is affected by this event.</param></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelDownloadImageEventArgs.Element"><summary>
            Gets the <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelImageElement" /> that is affected by this event.
            </summary><value>The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelImageElement" /> that is affected by this event.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelDownloadImageEventArgs.Image"><summary>
            Gets or sets the <see cref="T:System.Drawing.Image" /> to display in the element.
            </summary><value>The <see cref="T:System.Drawing.Image" /> to display in the element.</value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelDownloadImageEventHandler"><summary>
            Represents the method that will handle <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabel" /> download image events.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelDownloadImageEventArgs" /> containing event data.</param><remarks>
            When you create a <c>MarkupLabelDownloadImageEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelElementVerticalAlignment"><summary>
            Specifies how an object or text in a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabel" /> is vertically aligned.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelElementVerticalAlignment.Top"><summary>
            The object or text is aligned to the top.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelElementVerticalAlignment.Middle"><summary>
            The object or text is aligned in the middle.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelElementVerticalAlignment.Bottom"><summary>
            The object or text is aligned to the bottom.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelElementVerticalAlignment.Baseline"><summary>
            The object or text is aligned to the baseline.
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelEmphasisElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for an <c>em</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelEmphasisElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelEmphasisElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelEmphasisElement</c> class. 
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelFontStyle"><summary>
            Specifies the font style.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelFontStyle.Inherit"><summary>
            Inherits the font style.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelFontStyle.Normal"><summary>
            Normal font style.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelFontStyle.Italic"><summary>
            Italic font style.
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelFontWeight"><summary>
            Specifies the font weight.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelFontWeight.Inherit"><summary>
            Inherits the font weight.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelFontWeight.Normal"><summary>
            Normal font weight.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelFontWeight.Bold"><summary>
            Bold font weight.
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelImageElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for an <c>img</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelImageElement.CreateUIElement(ActiproSoftware.WinUICore.IUIElement)"><summary>
            Creates the <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> tree from the element.
            </summary><param name="parentUIElement">The parent <see cref="T:ActiproSoftware.WinUICore.IUIElement" />.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelImageElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelImageElement</c> class. 
            </summary></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelImageElement.Align"><summary>
            Gets or sets the alignment of the image.
            </summary><value>The alignment of the image.</value><remarks>Only the <c>baseline</c> and <c>absbottom</c> values are supported.</remarks></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelImageElement.Src"><summary>
            Gets or sets the HREF for the source of the image.
            </summary><value>The HREF for the source of the image.</value></member><member name="T:ActiproSoftware.WinUICore.IInputElement"><summary>
            Represents a base requirements for an element that can receive input.
            </summary></member><member name="M:ActiproSoftware.WinUICore.IInputElement.CaptureMouse"><summary>
            Attaches the mouse capture to the component.
            </summary></member><member name="M:ActiproSoftware.WinUICore.IInputElement.RaiseClickEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>Click</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>Click</c> event.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IInputElement.RaiseDoubleClickEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>DoubleClick</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>DoubleClick</c> event.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IInputElement.RaiseMouseDownEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseDown</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseDown</c> event.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IInputElement.RaiseMouseEnterEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseEnter</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseEnter</c> event.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IInputElement.RaiseMouseHoverEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseHover</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseHover</c> event.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IInputElement.RaiseMouseLeaveEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseLeave</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseLeave</c> event.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IInputElement.RaiseMouseMoveEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseMove</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseMove</c> event.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IInputElement.RaiseMouseUpEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseUp</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseUp</c> event.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IInputElement.RaiseMouseWheelEvent(System.Windows.Forms.MouseEventArgs)"><summary>
            Generates a <c>MouseWheel</c> event for the object.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param><remarks>
            This method can be called to raise the <c>MouseWheel</c> event.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.IInputElement.ReleaseMouseCapture"><summary>
            Releases the mouse capture, if any.
            </summary></member><member name="P:ActiproSoftware.WinUICore.IInputElement.IsMouseCaptured"><summary>
            Gets whether the element is currently capturing the mouse.
            </summary><value><c>true</c> if the element is currently capturing the mouse; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.IInputElement.IsMouseDirectlyOver"><summary>
            Gets whether the mouse is directly over the element.
            </summary><value><c>true</c> if the mouse is directly over the element; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.WinUICore.UIElement"><summary>
            Represents a base <see cref="T:System.Object" /> that has a user interface and implements <see cref="T:ActiproSoftware.WinUICore.IUIElement" />.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIElement.AddPendingGraphicsInversion(System.Drawing.Rectangle)"><summary>
            Inverts the canvas using XOR at the end of the current or next drawing operation.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param><returns><c>true</c> if the inversion operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIElement.AddPendingScrollOperation(System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="orientation">The direction to scroll.</param><param name="amount">The amount to scroll.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIElement.AddPendingScrollOperation(System.Drawing.Rectangle,System.Int32,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="xAmount">The amount to scroll horizontally.</param><param name="yAmount">The amount to scroll vertically.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIElement.Arrange(System.Drawing.Rectangle)"><summary>
            Updates the <see cref="P:ActiproSoftware.WinUICore.UIElement.Bounds" /> property and positions child elements.
            </summary><param name="newBounds">The final bounds of the element.</param><remarks>
            This method internally calls <see cref="M:ActiproSoftware.WinUICore.UIElement.ArrangeCore" /> override, giving the derived class opportunity to arrange 
            its children and/or content using the final computed bounds. 
            In <see cref="M:ActiproSoftware.WinUICore.UIElement.ArrangeCore" /> overrides, the derived class is supposed to create its visual structure and prepare itself for rendering. 
            <see cref="M:ActiproSoftware.WinUICore.UIElement.Arrange(System.Drawing.Rectangle)" /> is called by parents from their implementation of <see cref="M:ActiproSoftware.WinUICore.UIElement.ArrangeCore" /> or by system when needed. 
            This method sets the <see cref="P:ActiproSoftware.WinUICore.UIElement.Bounds" /> property to <c>newBounds</c> before calling <see cref="M:ActiproSoftware.WinUICore.UIElement.ArrangeCore" />.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIElement.ArrangeCore"><summary>
            Provides the place to perform arrange logic for the element.
            </summary><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIElement.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIElement.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIElement.CaptureMouse"><summary>
            Attaches the mouse capture to the element.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIElement.CreateGraphics"><summary>
            Creates the <see cref="T:System.Drawing.Graphics" /> object for the use with the object.
            </summary><returns>The <see cref="T:System.Drawing.Graphics" /> object for the object.</returns></member><member name="M:ActiproSoftware.WinUICore.UIElement.Dispose(System.Boolean)"><summary>
            Disposes any resources used by the object.
            </summary><param name="disposing">Whether the object is being disposed.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.GetCursor(System.Drawing.Point)"><summary>
            Gets the <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.
            </summary><param name="point">The <see cref="T:System.Drawing.Point" /> to examine.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.</returns></member><member name="M:ActiproSoftware.WinUICore.UIElement.Invalidate"><summary>
            Invalidates the area of the object and causes it to be repainted.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIElement.Invalidate(System.Drawing.Rectangle)"><summary>
            Invalidates an area in the object and causes it to be repainted.
            </summary><param name="rect">The bounds of the rectangle to invalidate.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)"><summary>
            Invalidates the specified states for the element or its related elements.
            </summary><param name="levels">The hierarchy levels at which to invalidate.</param><param name="types">The types of invalidation to perform.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.InvalidateArrange"><summary>
            Invalidates the layout of the element.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIElement.InvalidateMeasure"><summary>
            Invalidates the measurement of the element.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the element and updates the <see cref="P:ActiproSoftware.WinUICore.UIElement.DesiredSize" /> property.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><remarks>
            The <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> method should be called by parents on their children.
            Internally, <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> calls the <see cref="M:ActiproSoftware.WinUICore.UIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> override on the same object, 
            giving it opportunity to compute its <see cref="P:ActiproSoftware.WinUICore.UIElement.DesiredSize" />. 
            This method will return immediately if the child's measurements are valid, previously measured and 
            <c>availableSize</c> is the same as cached. 
            This method also resets the <see cref="P:ActiproSoftware.WinUICore.UIElement.IsMeasureValid" /> bit on the child. 
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.WinUICore.UIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnClick(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.Click" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnDoubleClick(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.DoubleClick" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseDown" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnMouseEnter(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseEnter" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnMouseHover(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseHover" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnMouseLeave(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseLeave" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseMove" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnMouseWheel(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseWheel" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnRenderChildElements(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the child elements.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><remarks>
            This method should not generally be overridden.
            The default implementation of this method calls the <see cref="M:ActiproSoftware.WinUICore.UIElement.Render(System.Windows.Forms.PaintEventArgs)" /> method on all child elements.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIElement.OnResize(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.Resize" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.ReleaseMouseCapture"><summary>
            Releases the mouse capture, if any.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIElement.Render(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIElement.UpdateLayout"><summary>
            Call this method to ensure that the whole subtree of elements that includes this <see cref="T:ActiproSoftware.WinUICore.UIElement" /> is properly updated.
            </summary><remarks>
            This ensures that <see cref="T:ActiproSoftware.WinUICore.UIElement" /> objects with invalid measure or arrange states will get a call to their 
            <see cref="M:ActiproSoftware.WinUICore.UIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> and <see cref="M:ActiproSoftware.WinUICore.UIElement.ArrangeCore" /> methods, and all computed sizes will be validated. 
            This method does nothing if layout is clean but it does work if layout is not clean so avoid 
            calling it after each change in the element tree. 
            It makes sense to either never call it (system will do this in a deferred manner) or only 
            call it if you absolutely need updated sizes and positions after you do all changes.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIElement.#ctor"><summary>
            Initializes a new instance of the <c>UIElement</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIElement.Bounds"><summary>
            Gets or sets a <see cref="T:System.Drawing.Rectangle" /> specifying the bounds of the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the bounds of the element.</value></member><member name="P:ActiproSoftware.WinUICore.UIElement.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.UIElement.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.WinUICore.UIElement.DesiredSize"><summary>
            Gets the desired size of the element as computed by <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.
            </summary><value>The desired size of the element as computed by <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.</value><remarks>
            This is only valid if <see cref="P:ActiproSoftware.WinUICore.UIElement.IsMeasureValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIElement.InvalidateOnMouseEvents"><summary>
            Gets whether to invalidate the element when mouse events occur.
            </summary><value><c>true</c> if the element should be invalidated when mouse events occur.
            </value></member><member name="P:ActiproSoftware.WinUICore.UIElement.IsArrangeValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.WinUICore.UIElement.DesiredSize" /> property and position of child elements is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.WinUICore.UIElement.DesiredSize" /> property and position of child elements is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.WinUICore.UIElement.Invalidate" />. 
            <see cref="P:ActiproSoftware.WinUICore.UIElement.IsArrangeValid" /> and <see cref="P:ActiproSoftware.WinUICore.UIElement.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIElement.IsMeasureValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.WinUICore.UIElement.DesiredSize" /> property is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.WinUICore.UIElement.DesiredSize" /> property is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.WinUICore.UIElement.Invalidate" />. 
            <see cref="P:ActiproSoftware.WinUICore.UIElement.IsArrangeValid" /> and <see cref="P:ActiproSoftware.WinUICore.UIElement.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIElement.IsMouseCaptured"><summary>
            Gets whether the element is currently capturing the mouse.
            </summary><value><c>true</c> if the element is currently capturing the mouse; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.UIElement.Size"><summary>
            Gets or sets the actual size of the element.
            </summary><value>The actual size of the element.</value><remarks>
            This is determined by the layout system after <see cref="M:ActiproSoftware.WinUICore.UIElement.Arrange(System.Drawing.Rectangle)" /> has completed. 
            This is only valid if <see cref="P:ActiproSoftware.WinUICore.UIElement.IsArrangeValid" /> is <see langword="true" />. 
            </remarks></member><member name="E:ActiproSoftware.WinUICore.UIElement.Click"><summary>
            Occurs when the object is clicked.
            </summary></member><member name="E:ActiproSoftware.WinUICore.UIElement.DoubleClick"><summary>
            Occurs when the object is double-clicked.
            </summary></member><member name="E:ActiproSoftware.WinUICore.UIElement.MouseDown"><summary>
            Occurs when the mouse pointer is over the object and a mouse button is pressed.
            </summary></member><member name="E:ActiproSoftware.WinUICore.UIElement.MouseEnter"><summary>
            Occurs when the mouse pointer enters the object.
            </summary></member><member name="E:ActiproSoftware.WinUICore.UIElement.MouseHover"><summary>
            Occurs when the mouse pointer hovers over the object.
            </summary></member><member name="E:ActiproSoftware.WinUICore.UIElement.MouseLeave"><summary>
            Occurs when the mouse pointer leaves the object.
            </summary></member><member name="E:ActiproSoftware.WinUICore.UIElement.MouseMove"><summary>
            Occurs when the mouse pointer is moved over the object.
            </summary></member><member name="E:ActiproSoftware.WinUICore.UIElement.MouseUp"><summary>
            Occurs when the mouse pointer is over the object and a mouse button is released.
            </summary></member><member name="E:ActiproSoftware.WinUICore.UIElement.MouseWheel"><summary>
            Occurs when the mouse wheel moves while the object has focus.
            </summary></member><member name="E:ActiproSoftware.WinUICore.UIElement.Resize"><summary>
            Occurs when the object is resized.
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelUIElement"><summary>
            Provides the base class for a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabel" /><see cref="T:ActiproSoftware.WinUICore.UIElement" />.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.GetCursor(System.Drawing.Point)"><summary>
            Gets the <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.
            </summary><value>The <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.</value></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.GetDrawState"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> for the element.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> for the element.</value></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.#ctor(ActiproSoftware.MarkupLabel.MarkupLabelElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> that owns this element.</param></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.Descent"><summary>
            Gets the descent from the baseline that the element has.
            </summary><value>The descent from the baseline that the element has.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.Element"><summary>
            Gets the <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> that owns this element.
            </summary><value>The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> that owns this element.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.InvalidateOnMouseEvents"><summary>
            Gets whether to invalidate the element when mouse events occur.
            </summary><value><c>true</c> if the element should be invalidated when mouse events occur.
            </value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelUIElement.HardLineBreakBefore"><summary>
            Gets whether a hard line break should occur before the element.
            </summary><value><c>true</c> if a hard line break should occur before the element; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelImageUIElement"><summary>
            Provides a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelUIElement" /> for an image.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelImageUIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.MarkupLabel.MarkupLabelImageUIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelImageUIElement.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelImageUIElement.#ctor(ActiproSoftware.MarkupLabel.MarkupLabelElement,System.Drawing.Image)"><summary>
            Initializes a new instance of the <c>MarkupLabelImageUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> that owns this element.</param><param name="image">The image of the element.</param></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelImageUIElement.Descent"><summary>
            Gets the descent from the baseline that the element has.
            </summary><value>The descent from the baseline that the element has.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelImageUIElement.Image"><summary>
            Gets the <see cref="T:System.Drawing.Image" /> represented by this element.
            </summary><value>The <see cref="T:System.Drawing.Image" /> represented by this element.</value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelItalicElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for an <c>i</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelItalicElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelItalicElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelItalicElement</c> class. 
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelLineBreakElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for a <c>br</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelLineBreakElement.CreateUIElement(ActiproSoftware.WinUICore.IUIElement)"><summary>
            Creates the <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> tree from the element.
            </summary><param name="parentUIElement">The parent <see cref="T:ActiproSoftware.WinUICore.IUIElement" />.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelLineBreakElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelLineBreakElement</c> class. 
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelLineBreakUIElement"><summary>
            Provides a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelUIElement" /> for line break.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelLineBreakUIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.MarkupLabel.MarkupLabelLineBreakUIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelLineBreakUIElement.#ctor(ActiproSoftware.MarkupLabel.MarkupLabelElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelLineBreakUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> that owns this element.</param></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelLineBreakUIElement.Descent"><summary>
            Gets the descent from the baseline that the element has.
            </summary><value>The descent from the baseline that the element has.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelLineBreakUIElement.HardLineBreakBefore"><summary>
            Gets whether a hard line break should occur before the element.
            </summary><value><c>true</c> if a hard line break should occur before the element; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelLinkClickEventArgs"><summary>
            Provides data for <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabel" /> link click events.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelLinkClickEventArgs.#ctor(ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelLinkClickEventArgs</c> class.
            </summary><param name="element">The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement" /> that is affected by this event.</param></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelLinkClickEventArgs.Element"><summary>
            Gets the <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement" /> that is affected by this event.
            </summary><value>The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelAnchorElement" /> that is affected by this event.</value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelLinkClickEventHandler"><summary>
            Represents the method that will handle <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabel" /> link click events.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelLinkClickEventArgs" /> containing event data.</param><remarks>
            When you create a <c>MarkupLabelLinkClickEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelSpanElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for a <c>span</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelSpanElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelSpanElement</c> class. 
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelStrongElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for a <c>strong</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelStrongElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelStrongElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelStrongElement</c> class. 
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration"><summary>
            Specifies the text decoration.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration.Inherit"><summary>
            Inherits the text decoration.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration.None"><summary>
            Produces no text decoration.
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration.Underline"><summary>
            Each line of text is underlined. 
            </summary></member><member name="F:ActiproSoftware.MarkupLabel.MarkupLabelTextDecoration.LineThrough"><summary>
            Each line of text has a line through the middle. 
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelTextElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for raw text.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelTextElement.CreateUIElement(ActiproSoftware.WinUICore.IUIElement)"><summary>
            Creates the <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> tree from the element.
            </summary><param name="parentUIElement">The parent <see cref="T:ActiproSoftware.WinUICore.IUIElement" />.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelTextElement.ToString"><summary>
            Returns a <c>String</c> that represents the current <c>Object</c>.
            </summary><returns>A <c>String</c> that represents the current <c>Object</c>.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelTextElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelTextElement</c> class. 
            </summary></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelTextElement.Text"><summary>
            Gets or sets the text represented by the element.
            </summary><value>The text represented by the element.</value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelTextUIElement"><summary>
            Provides a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelUIElement" /> for text.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelTextUIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.MarkupLabel.MarkupLabelTextUIElement.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelTextUIElement.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelTextUIElement.#ctor(ActiproSoftware.MarkupLabel.MarkupLabelElement,System.String)"><summary>
            Initializes a new instance of the <c>MarkupLabelTextUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> that owns this element.</param><param name="text">The text of the element.</param></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelTextUIElement.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelTextUIElement.Descent"><summary>
            Gets the descent from the baseline that the element has.
            </summary><value>The descent from the baseline that the element has.</value></member><member name="P:ActiproSoftware.MarkupLabel.MarkupLabelTextUIElement.Text"><summary>
            Gets the text of the element.
            </summary><value>The text of the element.</value></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelUnderlineElement"><summary>
            Represents a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> for a <c>u</c> element.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelUnderlineElement.GetDefaultCssData"><summary>
            Gets the default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.
            </summary><returns>The default <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelCssData" /> for the element.</returns></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelUnderlineElement.#ctor"><summary>
            Initializes a new instance of the <c>MarkupLabelUnderlineElement</c> class. 
            </summary></member><member name="T:ActiproSoftware.MarkupLabel.MarkupLabelWhitespaceUIElement"><summary>
            Provides a <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelUIElement" /> for whitespace.
            </summary></member><member name="M:ActiproSoftware.MarkupLabel.MarkupLabelWhitespaceUIElement.#ctor(ActiproSoftware.MarkupLabel.MarkupLabelElement)"><summary>
            Initializes a new instance of the <c>MarkupLabelWhitespaceUIElement</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.MarkupLabel.MarkupLabelElement" /> that owns this element.</param></member><member name="T:ActiproSoftware.Products.WinUICore.AssemblyInfo"><summary>
            Provides a class for retrieving information about the <c>ActiproSoftware.WinUICore</c> assembly.
            </summary></member><member name="P:ActiproSoftware.Products.WinUICore.AssemblyInfo.Components"><summary>
            Gets an array containing the components that must be licensed to be used in production applications.
            </summary><value>An array containing the components that must be licensed to be used in production applications.</value></member><member name="P:ActiproSoftware.Products.WinUICore.AssemblyInfo.Instance"><summary>
            Gets the instance of the <see cref="T:ActiproSoftware.Products.AssemblyInfo" /> class for this assembly.
            </summary><value>The instance of the <see cref="T:ActiproSoftware.Products.AssemblyInfo" /> class for this assembly.</value></member><member name="P:ActiproSoftware.Products.WinUICore.AssemblyInfo.LicenseType"><summary>
            Gets the type of license that is available for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyLicenseType" /> specifying the type of license that is available for the assembly.</value></member><member name="P:ActiproSoftware.Products.WinUICore.AssemblyInfo.Platform"><summary>
            Gets the target platform for the assembly.
            </summary><value>A <see cref="T:ActiproSoftware.Products.AssemblyPlatform" /> specifying the target platform for the assembly.</value></member><member name="P:ActiproSoftware.Products.WinUICore.AssemblyInfo.ProductCode"><summary>
            Gets the product code of the assembly.
            </summary><value>A three-letter product code of the assembly.</value></member><member name="P:ActiproSoftware.Products.WinUICore.AssemblyInfo.RedistributableFiles"><summary>
            Gets an array containing the names of files that are permitted to be redistributed 
            with your projects after you have licensed the product.
            </summary><value>
            An array containing the names of files that are permitted to be redistributed 
            with your projects after you have licensed the product
            </value></member><member name="P:ActiproSoftware.Products.WinUICore.AssemblyInfo.Resources"><summary>
            Gets a <see cref="T:ActiproSoftware.Products.WinUICore.Resources" /> that provides access to the resources of the assembly.
            </summary><value>
            A <see cref="T:ActiproSoftware.Products.WinUICore.Resources" /> that provides access to the resources of the assembly.
            </value></member><member name="T:ActiproSoftware.Products.WinUICore.CursorResource"><summary>
            Specifies the type of cursor resource that may be retrieved.
            </summary></member><member name="F:ActiproSoftware.Products.WinUICore.CursorResource.BarItemDragCopy"><summary>
            A bar item copy operation.
            </summary></member><member name="F:ActiproSoftware.Products.WinUICore.CursorResource.BarItemDragDelete"><summary>
            A bar item delete operation.
            </summary></member><member name="F:ActiproSoftware.Products.WinUICore.CursorResource.BarItemDragMove"><summary>
            A bar item move operation.
            </summary></member><member name="F:ActiproSoftware.Products.WinUICore.CursorResource.DragCopy"><summary>
            A generic drag copy operation.
            </summary></member><member name="F:ActiproSoftware.Products.WinUICore.CursorResource.DragMove"><summary>
            A generic drag move operation.
            </summary></member><member name="F:ActiproSoftware.Products.WinUICore.CursorResource.DocumentDragMove"><summary>
            A document drag operation.
            </summary></member><member name="F:ActiproSoftware.Products.WinUICore.CursorResource.DocumentDragNone"><summary>
            A document drag operation that cannot be completed.
            </summary></member><member name="F:ActiproSoftware.Products.WinUICore.CursorResource.ReverseArrow"><summary>
            A reverse arrow.
            </summary></member><member name="T:ActiproSoftware.Products.WinUICore.Resources"><summary>
            Provides a class for accessing the resources of an assembly.
            </summary></member><member name="M:ActiproSoftware.Products.WinUICore.Resources.GetCursor(ActiproSoftware.Products.WinUICore.CursorResource)"><summary>
            Gets a <see cref="T:System.Windows.Forms.Cursor" /> from the resources.
            </summary><param name="cursor">The type of the cursor resource to get.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> resource that was retrieved.</returns></member><member name="T:ActiproSoftware.Win32.HookBase"><summary>
            Provides a base class for a Win32 hook.
            </summary></member><member name="M:ActiproSoftware.Win32.HookBase.Dispose"><summary>
            Disposes any resources used by the object.
            </summary></member><member name="M:ActiproSoftware.Win32.HookBase.OnHookCallback(System.Int32,System.IntPtr,System.IntPtr)"><summary>
            Called when the hook receives a callback.
            </summary><param name="code">The hook code.</param><param name="wParam">The first parameter.</param><param name="lParam">The second parameter.</param><returns>Whether the hook has been handled.</returns></member><member name="T:ActiproSoftware.Win32.IMouseHookCallback"><summary>
            Provides the requirements for an object that may receive mouse hook callbacks.
            </summary></member><member name="M:ActiproSoftware.Win32.IMouseHookCallback.OnMouseHookEvent(ActiproSoftware.Win32.MouseHookEventArgs)"><summary>
            Called when a mouse hook receives a mouse message.
            </summary><param name="e">A <c>MouseHookEventArgs</c> that contains the event data.</param></member><member name="T:ActiproSoftware.Win32.MouseHook"><summary>
            Provides an implementation of a mouse hook.
            </summary></member><member name="M:ActiproSoftware.Win32.MouseHook.OnHookCallback(System.Int32,System.IntPtr,System.IntPtr)"><summary>
            Called when the hook receives a callback.
            </summary><param name="code">The hook code.</param><param name="wParam">The first parameter.</param><param name="lParam">The second parameter.</param><returns>Whether the hook has been handled.</returns></member><member name="M:ActiproSoftware.Win32.MouseHook.#ctor(ActiproSoftware.Win32.IMouseHookCallback)"><summary>
            Initializes a new instance of the <c>MouseHook</c> class. 
            </summary><param name="hookOwner">The owner of the hook.</param></member><member name="T:ActiproSoftware.Win32.MouseHookEventArgs"><summary>
            Provides data for a mouse hook callback.
            </summary></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.Handle"><summary>
            Gets the handle of the window that will receive the message.
            </summary><value>The handle of the window that will receive the message.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.Handled"><summary>
            Gets or sets whether the event has been handled.
            </summary><value><c>true</c> if the event has been handled; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.HitTestCodeHiWord"><summary>
            Gets the type of area that the mouse is over.
            </summary><value>The type of area that the mouse is over.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.HitTestCodeLoWord"><summary>
            Gets the type of area that the mouse is over.
            </summary><value>The type of area that the mouse is over.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.Message"><summary>
            Gets the mouse message that is being sent.
            </summary><value>The mouse message that is being sent.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.MouseDataHiWord"><summary>
            Gets extra mouse data that was sent with the message.
            </summary><value>Extra mouse data that was sent with the message.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.MouseDataLoWord"><summary>
            Gets extra mouse data that was sent with the message.
            </summary><value>Extra mouse data that was sent with the message.</value></member><member name="P:ActiproSoftware.Win32.MouseHookEventArgs.Position"><summary>
            Gets the position of the mouse.
            </summary><value>A <c>Point</c> containing the position of the mouse.</value></member><member name="T:ActiproSoftware.Win32.MouseHookEventHandler"><summary>
            Represents the method that will handle a mouse hook callback.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.Win32.MouseHookEventArgs" /> containing event data.</param><remarks>
            When you create a <c>MouseHookEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.Win32.ThemeHelper"><summary>
            Provides the primary interface for performing Windows XP themed drawing operations.
            This class is only meant for internal use and may eventually be removed upon support for .NET 2.0.
            </summary></member><member name="M:ActiproSoftware.Win32.ThemeHelper.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.Win32.ThemeHelper.CloseThemeHandle"><summary>
            Closes the current Windows XP theme handle, if any.
            </summary><returns><c>true</c> if a theme handle was closed; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Win32.ThemeHelper.DrawBackground(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle)"><summary>
            Draws a Windows XP theme background.
            </summary><param name="g">The <c>Graphics</c> object to use for drawing.</param><param name="part">An id specifying the part of the control.</param><param name="state">An id specifying the state of the control.</param><param name="bounds">The bounds of the area to paint.</param><param name="clipRect">A <c>Rectangle</c> indicating the area in which to paint.</param></member><member name="M:ActiproSoftware.Win32.ThemeHelper.GetColor(System.Int32,System.Int32,System.Int32)"><summary>
            Returns the <see cref="T:System.Drawing.Color" /> for the specified theme property.
            </summary><param name="part">An id specifying the part of the control.</param><param name="state">An id specifying the state of the control.</param><param name="prop">An id specifying the property of the control.</param><returns>The <see cref="T:System.Drawing.Color" /> for the specified theme property.</returns></member><member name="M:ActiproSoftware.Win32.ThemeHelper.GetPartSize(System.Drawing.Graphics,System.Int32,System.Int32)"><summary>
            Return the <see cref="T:System.Drawing.Size" /> of a part.
            </summary><param name="g">The <c>Graphics</c> object to use for measuring.</param><param name="part">An id specifying the part of the control.</param><param name="state">An id specifying the state of the control.</param><returns>The <see cref="T:System.Drawing.Size" /> of the part.</returns></member><member name="M:ActiproSoftware.Win32.ThemeHelper.OpenThemeHandle(System.String)"><summary>
            Opens a Windows XP theme handle.
            </summary><param name="classList">The theme class list of the component.</param><returns><c>true</c> if a theme handle was created; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.Win32.ThemeHelper.#ctor(System.Windows.Forms.Control,System.Boolean)"><summary>
            Initializes a new instance of the <c>ThemeHelper</c> class. 
            </summary><param name="control">The owner of the collection.</param><param name="attachToEvents">Whether to attach to events.</param></member><member name="P:ActiproSoftware.Win32.ThemeHelper.HasOpenThemeHandle"><summary>
            Returns whether a theme handle is open for use.
            </summary><value><c>true</c> if a theme handle is open for use; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Win32.ThemeHelper.IsAppThemed"><summary>
            Gets whether the application is themed.
            </summary><value><c>true</c> if the application is themed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.Win32.ThemeHelper.IsThemeActive"><summary>
            Gets whether the theming is active.
            </summary><value><c>true</c> if theming is active; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.WinUICore.ColorListBox"><summary>
            Provides a <see cref="T:System.Windows.Forms.ListBox" /> that shows <see cref="T:System.Drawing.Color" /> objects.
            </summary></member><member name="M:ActiproSoftware.WinUICore.ColorListBox.InitializeColors(System.Drawing.Color[])"><summary>
            Initializes the list using the specified array of <see cref="T:System.Drawing.Color" /> objects.
            </summary><param name="colors">An array of <see cref="T:System.Drawing.Color" /> objects with which to initialize the list.</param></member><member name="M:ActiproSoftware.WinUICore.ColorListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)"><summary>
            Occurs when an item needs to be drawn.
            </summary><param name="e">A <c>DrawItemEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ColorListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)"><summary>
            Occurs when an item needs to be measured.
            </summary><param name="e">A <c>DrawItemEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ColorListBox.WndProc(System.Windows.Forms.Message@)"><summary>
            Occurs when a message is sent to the control.
            </summary><param name="m">Information about the message.</param></member><member name="M:ActiproSoftware.WinUICore.ColorListBox.#ctor"><summary>
            Initializes a new instance of the <c>ColorListBox</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.ColorListBox.ColorSet"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.ColorListBoxColorSet" /> that indicates the color set that is loaded.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.ColorListBoxColorSet" /> that indicates the color set that is loaded.</value></member><member name="P:ActiproSoftware.WinUICore.ColorListBox.SelectedColor"><summary>
            Gets or sets the selected color in the list.
            </summary><value>The selected <see cref="T:System.Drawing.Color" /> in the list.</value></member><member name="T:ActiproSoftware.WinUICore.ColorListBoxColorSet"><summary>
            Specifies a pre-defined color set for a <see cref="T:ActiproSoftware.WinUICore.ColorListBox" /> control.
            </summary></member><member name="F:ActiproSoftware.WinUICore.ColorListBoxColorSet.SystemColors"><summary>
            The system colors.
            </summary></member><member name="F:ActiproSoftware.WinUICore.ColorListBoxColorSet.WebColors"><summary>
            The web colors.
            </summary></member><member name="F:ActiproSoftware.WinUICore.ColorListBoxColorSet.Custom"><summary>
            Custom colors.
            </summary></member><member name="T:ActiproSoftware.WinUICore.ColorPalettePicker"><summary>
            Represents a control for selecting a <see cref="T:System.Drawing.Color" /> from a palette.
            </summary></member><member name="M:ActiproSoftware.WinUICore.ColorPalettePicker.ArrangeCore"><summary>
            Provides the place to perform arrange logic for the element.
            </summary><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.ColorPalettePicker.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.ComponentModel.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.WinUICore.ColorPalettePicker.InitializeColors(System.Drawing.Color[])"><summary>
            Initializes the list using the specified array of <see cref="T:System.Drawing.Color" /> objects.
            </summary><param name="colors">An array of <see cref="T:System.Drawing.Color" /> objects with which to initialize the list.</param></member><member name="M:ActiproSoftware.WinUICore.ColorPalettePicker.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.WinUICore.ColorPalettePicker.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.WinUICore.ColorPalettePicker.OnSelectedColorChanged(System.EventArgs)"><summary>
            Raises the <c>SelectedColorChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ColorPalettePicker.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)"><summary>
            Processes a command key.
            </summary><param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</param><param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param><returns><c>true</c> if the key was processed by the control; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.ColorPalettePicker.#ctor"><summary>
            Initializes a new instance of the <c>ColorPalettePicker</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.ColorPalettePicker.DefaultSize"><summary>
            Gets the default size of the control.
            </summary><value>The default <see cref="T:System.Drawing.Size" /> of the control.</value></member><member name="P:ActiproSoftware.WinUICore.ColorPalettePicker.SelectedColor"><summary>
            Gets or sets the selected color in the list.
            </summary><value>The selected <see cref="T:System.Drawing.Color" /> in the list.</value></member><member name="E:ActiproSoftware.WinUICore.ColorPalettePicker.SelectedColorChanged"><summary>
            Occurs after the value of the <see cref="P:ActiproSoftware.WinUICore.ColorPalettePicker.SelectedColor" /> property changes.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata><remarks>
            Use this event to perform any processing that should occur after the selection changes.
            </remarks></member><member name="T:ActiproSoftware.WinUICore.Commands.Command"><summary>
            Represents a command.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Commands.Command.#ctor"><summary>
            Initializes a new instance of the <c>Command</c> class. 
            </summary></member><member name="M:ActiproSoftware.WinUICore.Commands.Command.#ctor(System.String)"><summary>
            Initializes a new instance of the <c>Command</c> class. 
            </summary><param name="name">The name of the command.</param></member><member name="P:ActiproSoftware.WinUICore.Commands.Command.Name"><summary>
            Gets the name of the command.
            </summary><value>The name of the command.</value></member><member name="T:ActiproSoftware.WinUICore.Commands.CommandEventArgs"><summary>
            Provides data for <see cref="P:ActiproSoftware.WinUICore.Commands.CommandEventArgs.Command" /> events.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandEventArgs.#ctor(ActiproSoftware.WinUICore.Commands.Command)"><summary>
            Initializes a new instance of the <c>CommandEventArgs</c> class.
            </summary><param name="command">The <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> that is affected by this event.</param></member><member name="P:ActiproSoftware.WinUICore.Commands.CommandEventArgs.Command"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> that is affected by this event.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> that is affected by this event.</value></member><member name="T:ActiproSoftware.WinUICore.Commands.CommandEventHandler"><summary>
            Represents the method that will handle <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> events.
            </summary><param name="sender">Sender of the event.</param><param name="e">A <see cref="T:ActiproSoftware.WinUICore.Commands.CommandEventArgs" /> containing event data.</param><remarks>
            When you create a <c>CommandEventHandler</c> delegate, you identify the method that will handle the event. 
            To associate the event with your event handler, add an instance of the delegate to the event. 
            The event handler is called whenever the event occurs, unless you remove the delegate.
            </remarks></member><member name="T:ActiproSoftware.WinUICore.Commands.CommandLink"><summary>
            Represents a command link.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLink.#ctor"><summary>
            Initializes a new instance of the <c>CommandLink</c> class. 
            </summary></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLink.#ctor(ActiproSoftware.WinUICore.Commands.Command)"><summary>
            Initializes a new instance of the <c>CommandLink</c> class. 
            </summary><param name="command">The <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> being linked.</param></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLink.#ctor(ActiproSoftware.WinUICore.Commands.Command,ActiproSoftware.WinUICore.Commands.KeyBinding)"><summary>
            Initializes a new instance of the <c>CommandLink</c> class. 
            </summary><param name="command">The <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> being linked.</param><param name="keyBinding">The <see cref="T:ActiproSoftware.WinUICore.Commands.KeyBinding" /> to use for the command link.</param></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLink.#ctor(ActiproSoftware.WinUICore.Commands.Command,ActiproSoftware.WinUICore.Commands.KeyBinding,ActiproSoftware.WinUICore.Commands.MouseBinding)"><summary>
            Initializes a new instance of the <c>CommandLink</c> class. 
            </summary><param name="command">The <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> being linked.</param><param name="keyBinding">The <see cref="T:ActiproSoftware.WinUICore.Commands.KeyBinding" /> to use for the command link.</param><param name="mouseBinding">The <see cref="T:ActiproSoftware.WinUICore.Commands.MouseBinding" /> to use for the command link.</param></member><member name="P:ActiproSoftware.WinUICore.Commands.CommandLink.Checked"><summary>
            Gets or sets whether the command link is in a checked state.
            </summary><value><c>true</c> if the command link is in a checked state; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.Commands.CommandLink.Command"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> being linked.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> being linked.</value></member><member name="P:ActiproSoftware.WinUICore.Commands.CommandLink.Enabled"><summary>
            Gets or sets whether the command link is in an enabled state.
            </summary><value><c>true</c> if the command link is in an enabled state; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.Commands.CommandLink.KeyBinding"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.WinUICore.Commands.KeyBinding" /> to use for the command link.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.Commands.KeyBinding" /> to use for the command link.</value></member><member name="P:ActiproSoftware.WinUICore.Commands.CommandLink.MouseBinding"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.WinUICore.Commands.MouseBinding" /> to use for the command link.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.Commands.MouseBinding" /> to use for the command link.</value></member><member name="T:ActiproSoftware.WinUICore.Commands.CommandLinkCollection"><summary>
            Encapsulates a collection of <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> items.
            </summary><remarks>
            This class is a zero-based indexed collection. 
            </remarks><seealso cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.Add(ActiproSoftware.WinUICore.Commands.CommandLink)"><summary>
            Adds the specified <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> to the collection. 
            </summary><param name="commandLink">The <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> to add to the collection.</param><returns>
            The position into which the new item was inserted.
            </returns></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.AddRange(ActiproSoftware.WinUICore.Commands.CommandLink[])"><summary>
            Adds an array of <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> objects to the collection. 
            </summary><param name="commandLinks">The array of <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> objects to add to the collection.</param></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.Contains(ActiproSoftware.WinUICore.Commands.CommandLink)"><summary>
            Returns whether the collection contains the specified <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" />.
            </summary><param name="commandLink">The <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> to look for in the collection.</param><returns><c>true</c> if the collection contains the specified <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" />; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.FilterModifierKeys(System.Windows.Forms.Keys)"><summary>
            Filters out the CTRL, SHIFT, and ALT modifier keys from a <c>Keys</c> specification.
            </summary><param name="keyCode">The <c>Keys</c> to filter.</param><returns>The filtered <c>Keys</c>.</returns></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.GetApplicableCommandLinks(System.Windows.Forms.Keys)"><summary>
            Returns an array of the applicable <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> objects for the specified criteria.
            </summary><param name="keyCode">The keyboard code of the key that is pressed.</param><returns>
            An array of the applicable <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> objects for the specified criteria.
            </returns></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.GetCurrentModifierKeys"><summary>
            Returns the currently-pressed modifier keys.
            </summary><returns>
            A <see cref="T:ActiproSoftware.WinUICore.Input.ModifierKeys" /> containing the currently-pressed modifier keys.
            </returns></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.GetModifierKeys(System.Windows.Forms.Keys)"><summary>
            Returns the modifier keys.
            </summary><param name="keyCode">The keyboard code of the key that is pressed.</param><returns>
            A <see cref="T:ActiproSoftware.WinUICore.Input.ModifierKeys" /> containing the modifier keys.
            </returns></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.IndexOf(ActiproSoftware.WinUICore.Commands.CommandLink)"><summary>
            Returns the index of the specified <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> in the collection.
            </summary><param name="commandLink">The <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> to look for.</param><returns>
            If found, the index where the <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> is in the collection; otherwise, <c>-1</c>. 
            </returns></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.IndexOf(ActiproSoftware.WinUICore.Commands.Command)"><summary>
            Searches for a <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> for the specified <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> and returns 
            the zero-based index of the first occurrence within the entire collection.
            </summary><param name="command">The <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> to locate in the collection.</param><returns>
            The zero-based index of the first occurrence of a <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> for the specified <see cref="T:ActiproSoftware.WinUICore.Commands.Command" />
            within the entire collection, if found; otherwise, <c>-1</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.Insert(System.Int32,ActiproSoftware.WinUICore.Commands.CommandLink)"><summary>
            Inserts a <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> into the collection at the specified index.
            </summary><param name="index">The zero-based index at which the <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> should be inserted.</param><param name="commandLink">The <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> to insert into the collection.</param></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.Remove(ActiproSoftware.WinUICore.Commands.CommandLink)"><summary>
            Removes the specified <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> from the collection.
            </summary><param name="commandLink">The <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> to remove from the collection.</param></member><member name="M:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.#ctor"><summary>
            Initializes a new instance of the <c>CommandLinkCollection</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.Commands.CommandLinkCollection.Item(System.Int32)"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> at the specified index. 
            <para>
            [C#] In C#, this property is the indexer for the <c>CommandLinkCollection</c> class. 
            </para></summary><param name="index">The index of the <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> to return.</param><value>
            The <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLink" /> at the specified index. 
            </value></member><member name="T:ActiproSoftware.WinUICore.Commands.ICommandTarget"><summary>
            Provides the base requirements for a command target.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Commands.ICommandTarget.RaiseCommand(ActiproSoftware.WinUICore.Commands.Command)"><summary>
            Raises the specified <see cref="T:ActiproSoftware.WinUICore.Commands.Command" />.
            </summary><param name="command">The <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> to raise.</param><returns><c>true</c> if the <see cref="T:ActiproSoftware.WinUICore.Commands.Command" /> was handled; otherwise, <c>false</c>.
            </returns></member><member name="P:ActiproSoftware.WinUICore.Commands.ICommandTarget.CommandLinks"><summary>
            Gets a <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLinkCollection" /> containing the command links associated with the object.
            </summary><value>A <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLinkCollection" /> containing the command links associated with the object.</value></member><member name="P:ActiproSoftware.WinUICore.Commands.ICommandTarget.ForwardCommandsTo"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.Commands.ICommandTarget" /> to forward commands to.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.Commands.ICommandTarget" /> to forward commands to.</value></member><member name="T:ActiproSoftware.WinUICore.Commands.KeyBinding"><summary>
            Represents a key binding.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Commands.KeyBinding.#ctor(ActiproSoftware.WinUICore.Input.ModifierKeys,System.Windows.Forms.Keys)"><summary>
            Initializes a new instance of the <c>KeyBinding</c> class. 
            </summary><param name="modifiers">The modifier keys.</param><param name="key">The key.</param></member><member name="P:ActiproSoftware.WinUICore.Commands.KeyBinding.Modifiers"><summary>
            Gets the modifier keys.
            </summary><value>The modifier keys.</value></member><member name="P:ActiproSoftware.WinUICore.Commands.KeyBinding.Key"><summary>
            Gets the key.
            </summary><value>The key.</value></member><member name="T:ActiproSoftware.WinUICore.Commands.MouseBinding"><summary>
            Represents a mouse binding.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Commands.MouseBinding.#ctor(ActiproSoftware.WinUICore.Input.ModifierKeys,ActiproSoftware.WinUICore.Input.MouseAction)"><summary>
            Initializes a new instance of the <c>MouseBinding</c> class. 
            </summary><param name="modifiers">The modifier keys.</param><param name="action">The mouse action.</param></member><member name="P:ActiproSoftware.WinUICore.Commands.MouseBinding.Action"><summary>
            Gets the mouse action.
            </summary><value>The mouse action.</value></member><member name="P:ActiproSoftware.WinUICore.Commands.MouseBinding.Modifiers"><summary>
            Gets the modifier keys.
            </summary><value>The modifier keys.</value></member><member name="T:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase"><summary>
            Extends design-time behavior for a <see cref="T:System.Windows.Forms.Control" />.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.CreateComponent(System.Type)"><summary>
            Creates a <c>IComponent</c> of the specified type.
            </summary><param name="componentClass">The <c>Type</c> of the <c>IComponent</c> to create.</param><returns>The <c>IComponent</c> that was created.</returns></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.EnsureSingleInstance"><summary>
            Ensures that there is only one instance of the component in the host container.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.InitializeVerbs"><summary>
            Implemented by inheritors to initialize the <see cref="P:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.Verbs" /> property.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.SetSelection(System.Object)"><summary>
            Replaces the current selection with a single <see cref="T:System.Object" />.
            </summary><param name="component">The <see cref="T:System.Object" /> to select.</param></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.ComponentChangeService"><summary>
            Gets the <c>IComponentChangeService</c> in use by the designer.
            </summary><value>The <c>IComponentChangeService</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.DesignerHost"><summary>
            Gets the <c>IDesignerHost</c> in use by the designer.
            </summary><value>The <c>IDesignerHost</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.IsSelected"><summary>
            Gets whether the component is selected.
            </summary><value><c>true</c> if the component is selected; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.MenuCommandService"><summary>
            Gets the <c>IMenuCommandService</c> in use by the designer.
            </summary><value>The <c>IMenuCommandService</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.SelectionService"><summary>
            Gets the <c>ISelectionService</c> in use by the designer.
            </summary><value>The <c>ISelectionService</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.Verbs"><summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary><value>
            A <c>DesignerVerbCollection</c> of <c>DesignerVerb</c> objects, or <see langword="null" /> 
            if no designer verbs are available. 
            </value><remarks>
            If the verbs collection is set to <see langword="null" />, the <see cref="M:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.InitializeVerbs" /> method is called.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproControlDesignerBase.VerbsCore"><summary>
            Gets or sets the design-time verbs supported by the component that is associated with the designer.
            </summary><value>
            A <c>DesignerVerbCollection</c> of <c>DesignerVerb</c> objects, or <see langword="null" /> 
            if no designer verbs are available. 
            </value></member><member name="T:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase"><summary>
            Extends design-time behavior for a parent <see cref="T:System.Windows.Forms.Control" />.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.CreateComponent(System.Type)"><summary>
            Creates a <c>IComponent</c> of the specified type.
            </summary><param name="componentClass">The <c>Type</c> of the <c>IComponent</c> to create.</param><returns>The <c>IComponent</c> that was created.</returns></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.EnsureSingleInstance"><summary>
            Ensures that there is only one instance of the component in the host container.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.InitializeVerbs"><summary>
            Implemented by inheritors to initialize the <see cref="P:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.Verbs" /> property.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.SetSelection(System.Object)"><summary>
            Replaces the current selection with a single <see cref="T:System.Object" />.
            </summary><param name="component">The <see cref="T:System.Object" /> to select.</param></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.ComponentChangeService"><summary>
            Gets the <c>IComponentChangeService</c> in use by the designer.
            </summary><value>The <c>IComponentChangeService</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.DesignerHost"><summary>
            Gets the <c>IDesignerHost</c> in use by the designer.
            </summary><value>The <c>IDesignerHost</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.IsSelected"><summary>
            Gets whether the component is selected.
            </summary><value><c>true</c> if the component is selected; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.MenuCommandService"><summary>
            Gets the <c>IMenuCommandService</c> in use by the designer.
            </summary><value>The <c>IMenuCommandService</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.SelectionService"><summary>
            Gets the <c>ISelectionService</c> in use by the designer.
            </summary><value>The <c>ISelectionService</c> in use by the designer.</value></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.Verbs"><summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary><value>
            A <c>DesignerVerbCollection</c> of <c>DesignerVerb</c> objects, or <see langword="null" /> 
            if no designer verbs are available. 
            </value><remarks>
            If the verbs collection is set to <see langword="null" />, the <see cref="M:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.InitializeVerbs" /> method is called.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.Design.ActiproParentControlDesignerBase.VerbsCore"><summary>
            Gets or sets the design-time verbs supported by the component that is associated with the designer.
            </summary><value>
            A <c>DesignerVerbCollection</c> of <c>DesignerVerb</c> objects, or <see langword="null" /> 
            if no designer verbs are available. 
            </value></member><member name="T:ActiproSoftware.WinUICore.Design.IImageListProvider"><summary>
            Provides the base requirements for an object that can return an <see cref="T:System.Windows.Forms.ImageList" /> for an object.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.IImageListProvider.GetImageList(System.Object,System.Object)"><summary>
            Returns an <c>ImageList</c> for the specified element and context.
            </summary><param name="requestor">The object that is requesting the <c>ImageList</c>.</param><param name="context">An object that provides context information.</param><returns>The <c>ImageList</c> that should be used.</returns></member><member name="T:ActiproSoftware.WinUICore.Design.ImageIndexAttribute"><summary>
            Specifies the priority that a property has when performing self-describing reflection.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ImageIndexAttribute.#ctor"><summary>
            Initializes a new instance of the <c>ImageIndexAttribute</c> class.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ImageIndexAttribute.#ctor(System.Object)"><summary>
            Initializes a new instance of the <c>ImageIndexAttribute</c> class.
            </summary><param name="context">An object that provides context information.</param></member><member name="P:ActiproSoftware.WinUICore.Design.ImageIndexAttribute.Context"><summary>
            Gets or sets the object that provides context information.
            </summary><value>
            The object that provides context information.
            </value></member><member name="T:ActiproSoftware.WinUICore.Design.ImageIndexEditor"><summary>
            Provides a user interface for selecting images from an <c>ImageList</c> in a Properties window.
            </summary></member><member name="M:ActiproSoftware.WinUICore.Design.ImageIndexEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"><summary>
            Edits the specified object's value using the editor style indicated by <see cref="M:ActiproSoftware.WinUICore.Design.ImageIndexEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that can be used to gain additional context information.</param><param name="provider">An <c>IServiceProvider</c> that this editor can use to obtain services.</param><param name="value">The object to edit.</param><returns>The new value of the object.</returns></member><member name="M:ActiproSoftware.WinUICore.Design.ImageIndexEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"><summary>
            Gets the editor style used by the <see cref="M:ActiproSoftware.WinUICore.Design.ImageIndexEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that can be used to gain additional context information.</param><returns>
            A <c>UITypeEditorEditStyle</c> value that indicates the style of editor used by <see cref="M:ActiproSoftware.WinUICore.Design.ImageIndexEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />. 
            If the <c>UITypeEditor</c> does not support this method, then <c>GetEditStyle</c> will return <c>None</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.Design.ImageIndexEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)"><summary>
            Gets a value indicating whether this editor supports painting a representation of an object's value.
            </summary><param name="context">
            An <c>ITypeDescriptorContext</c> that can be used to gain additional context information. 
            </param><returns><c>true</c> if <see cref="M:ActiproSoftware.WinUICore.Design.ImageIndexEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> is implemented; otherwise, <c>false</c>.</returns></member><member name="M:ActiproSoftware.WinUICore.Design.ImageIndexEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)"><summary>
            Paints a value indicated by the specified <c>PaintValueEventArgs</c>.
            </summary><param name="pe">
            A <c>PaintValueEventArgs</c> indicating what to paint and where to paint it. 
            </param></member><member name="T:ActiproSoftware.WinUICore.HitTestParameters"><summary>
            Represents the base class for hit test parameters.
            </summary></member><member name="M:ActiproSoftware.WinUICore.HitTestParameters.#ctor"><summary>
            Initializes a new instance of the <c>HitTestParameters</c> class. 
            </summary></member><member name="T:ActiproSoftware.WinUICore.HitTestResult"><summary>
            Represents base class for the result of a hit test operation.
            </summary></member><member name="M:ActiproSoftware.WinUICore.HitTestResult.#ctor(ActiproSoftware.WinUICore.IUIElement)"><summary>
            Initializes a new instance of the <c>HitTestResult</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> that was hit.</param></member><member name="P:ActiproSoftware.WinUICore.HitTestResult.Element"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> that was hit.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> that was hit.</value></member><member name="T:ActiproSoftware.WinUICore.Input.ModifierKeys"><summary>
            Specifies one or more modifier keys.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.Control"><summary>
            The CTRL modifier key.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.Shift"><summary>
            The SHIFT modifier key.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.Alt"><summary>
            The ALT modifier key.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.ControlShift"><summary>
            The CTRL and SHIFT modifier keys.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.ControlAlt"><summary>
            The CTRL and ALT modifier keys.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.ShiftAlt"><summary>
            The SHIFT and ALT modifier keys.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.ControlShiftAlt"><summary>
            The CTRL, SHIFT, and ALT modifier keys.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.None"><summary>
            No key pressed.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.AnyControl"><summary>
            Any combination that uses the CTRL modifier key.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.AnyShift"><summary>
            Any combination that uses the SHIFT modifier key.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.AnyAlt"><summary>
            Any combination that uses the ALT modifier key.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.AnyControlShift"><summary>
            Any combination that uses the CTRL and SHIFT modifier keys.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.AnyControlAlt"><summary>
            Any combination that uses the CTRL and SHIFT modifier keys.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.AnyShiftAlt"><summary>
            Any combination that uses the SHIFT and ALT modifier keys.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.ModifierKeys.Any"><summary>
            Any key combination pressed.
            </summary></member><member name="T:ActiproSoftware.WinUICore.Input.MouseAction"><summary>
            Specifies a mouse action.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.MouseAction.None"><summary>
            No action.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.MouseAction.LeftClick"><summary>
            A left click.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.MouseAction.RightClick"><summary>
            A right click.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.MouseAction.MiddleClick"><summary>
            A middle click.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.MouseAction.WheelClick"><summary>
            A wheel click.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.MouseAction.LeftDoubleClick"><summary>
            A left double-click.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.MouseAction.RightDoubleClick"><summary>
            A right double-click.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.MouseAction.MiddleDoubleClick"><summary>
            A middle double-click.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Input.MouseAction.WheelDoubleClick"><summary>
            A wheel double-click.
            </summary></member><member name="T:ActiproSoftware.WinUICore.InvalidationLevels"><summary>
            Specifies the levels of invalidation to be performed on a <see cref="T:ActiproSoftware.WinUICore.IUIElement" />.
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationLevels.All"><summary>
            Invalidates the entire control hierarchy.
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationLevels.TopLevelParent"><summary>
            Invalidates up to the top-level parent.
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationLevels.Parent"><summary>
            Invalidates the parent.
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationLevels.Element"><summary>
            Invalidates the element.
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationLevels.Children"><summary>
            Invalidates the children.
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationLevels.ElementAndChildren"><summary>
            Invalidates the element and its children.
            </summary></member><member name="T:ActiproSoftware.WinUICore.InvalidationTypes"><summary>
            Specifies the types of invalidation that can be performed on a <see cref="T:ActiproSoftware.WinUICore.IUIElement" />.
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationTypes.Arrange"><summary>
            Invalidates the arrange state for the element. 
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationTypes.Measure"><summary>
            Invalidates the measure state for the element. 
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationTypes.Layout"><summary>
            Requests that the layout is updated after the arrange and measure states are invalidated.
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationTypes.Paint"><summary>
            Requests that the element is repainted after the states are invalidated.
            </summary></member><member name="F:ActiproSoftware.WinUICore.InvalidationTypes.All"><summary>
            Requests that all states are invalidated, a layout is performed, and repainting occurs.
            </summary></member><member name="T:ActiproSoftware.WinUICore.IUIRenderer"><summary>
            Provides the base requirements for a renderer class that renders an Actipro control.
            </summary></member><member name="E:ActiproSoftware.WinUICore.IUIRenderer.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.WinUICore.IScrollBarRenderer"><summary>
            Provides the base requirements for a <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> control renderer.
            </summary></member><member name="M:ActiproSoftware.WinUICore.IScrollBarRenderer.DrawScrollBarBackground(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.WinUICore.ScrollBar)"><summary>
            Draws the background of a <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> control.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="scrollBar">The <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> being painted.</param></member><member name="M:ActiproSoftware.WinUICore.IScrollBarRenderer.DrawScrollBarButton(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.WinUICore.ScrollBarButton)"><summary>
            Draws a <see cref="T:ActiproSoftware.WinUICore.ScrollBarButton" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="button">The <see cref="T:ActiproSoftware.WinUICore.ScrollBarButton" /> that is being painted.</param></member><member name="M:ActiproSoftware.WinUICore.IScrollBarRenderer.DrawScrollBarThumb(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.WinUICore.ScrollBarThumb)"><summary>
            Draws a <see cref="T:ActiproSoftware.WinUICore.ScrollBarThumb" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="thumb">The <see cref="T:ActiproSoftware.WinUICore.ScrollBarThumb" /> that is being painted.</param></member><member name="T:ActiproSoftware.WinUICore.IUIRendererFactory"><summary>
            Provides the base requirements for a factory class that creates renderers for an Actipro control.
            </summary></member><member name="M:ActiproSoftware.WinUICore.IUIRendererFactory.CreateRenderer"><summary>
            Creates a renderer.
            </summary><returns>The <see cref="T:ActiproSoftware.WinUICore.IUIRenderer" /> that was created.</returns></member><member name="T:ActiproSoftware.WinUICore.NoActivateForm"><summary>
            Represents a base form that does not activate when displayed.
            </summary></member><member name="M:ActiproSoftware.WinUICore.NoActivateForm.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.NoActivateForm.SetVisibleCore(System.Boolean)"><summary>
            Sets the control to the specified visible state.
            </summary><param name="visible"><c>true</c> to make the control visible; otherwise, <c>false</c>.
            </param></member><member name="M:ActiproSoftware.WinUICore.NoActivateForm.WndProc(System.Windows.Forms.Message@)"><summary>
            Processes Windows messages.
            </summary><param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param></member><member name="M:ActiproSoftware.WinUICore.NoActivateForm.#ctor"><summary>
            Initializes a new instance of the <c>NoActivateForm</c> class. 
            </summary></member><member name="T:ActiproSoftware.WinUICore.PointHitTestParameters"><summary>
            Represents a class for hit test parameters that use a <see cref="T:System.Drawing.Point" />.
            </summary></member><member name="M:ActiproSoftware.WinUICore.PointHitTestParameters.#ctor(System.Drawing.Point)"><summary>
            Initializes a new instance of the <c>PointHitTestParameters</c> class. 
            </summary><param name="point">The <see cref="T:System.Drawing.Point" /> to test.</param></member><member name="P:ActiproSoftware.WinUICore.PointHitTestParameters.Point"><summary>
            Gets the <see cref="T:System.Drawing.Point" /> to test.
            </summary><value>The <see cref="T:System.Drawing.Point" /> to test.</value></member><member name="T:ActiproSoftware.WinUICore.PointHitTestResult"><summary>
            Represents a class for a hit test result from a hit test that uses a <see cref="T:System.Drawing.Point" />.
            </summary></member><member name="M:ActiproSoftware.WinUICore.PointHitTestResult.#ctor(ActiproSoftware.WinUICore.IUIElement,System.Drawing.Point)"><summary>
            Initializes a new instance of the <c>PointHitTestResult</c> class. 
            </summary><param name="element">The <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> that was hit.</param><param name="point">The <see cref="T:System.Drawing.Point" /> that was hit.</param></member><member name="P:ActiproSoftware.WinUICore.PointHitTestResult.Point"><summary>
            Gets the <see cref="T:System.Drawing.Point" /> that was hit.
            </summary><value>The <see cref="T:System.Drawing.Point" /> that was hit.</value></member><member name="T:ActiproSoftware.WinUICore.PopupControl"><summary>
            Represents the base class for a <c>Form</c> that may be used as a popup.
            </summary></member><member name="M:ActiproSoftware.WinUICore.PopupControl.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.PopupControl.HidePopup"><summary>
            Hides the popup.
            </summary></member><member name="M:ActiproSoftware.WinUICore.PopupControl.NegotiateLocation(System.Drawing.Rectangle,System.Int32)"><summary>
            Negotiates the location of the popup based on excluded bounds.
            </summary><param name="exclusionBounds">The bounds over which the object may not be displayed.</param><remarks>This method defaults to extending the popup vertically from the lower left corner.</remarks><param name="offset">The amount to offset from the exclusion bounds.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.NegotiateLocation(System.Drawing.Rectangle,ActiproSoftware.Drawing.Corner,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Negotiates the location of the popup based on excluded bounds and the desired corner.
            </summary><param name="exclusionBounds">The bounds over which the object may not be displayed.</param><param name="exclusionCorner">The corner of the exclusion bounds at which to place the popup.</param><param name="orientation">Whether the popup should extend horizontally or vertically from the corner.</param><param name="offset">The amount to offset from the exclusion bounds.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.OnDisplayed(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.PopupControl.Displayed" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.OnDisplaying(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.PopupControl.Displaying" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.OnHandleCreated(System.EventArgs)"><summary>
            Raises the <c>HandleCreated</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.OnHidden(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.PopupControl.Hidden" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.OnHiding(System.EventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.PopupControl.Hiding" /> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.OnVisibleChanged(System.EventArgs)"><summary>
            Raises the <c>VisibleChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)"><summary>
            Processes a command key.
            </summary><param name="m">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</param><param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param><returns><c>true</c> if the character was processed by the control; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.PopupControl.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)"><summary>
            Performs the work of setting the specified bounds of this control.
            </summary><param name="x">The new <c>Left</c> property value of the control.</param><param name="y">The new <c>Top</c> property value of the control.</param><param name="width">The new <c>Width</c> property value of the control.</param><param name="height">The new <c>Height</c> property value of the control.</param><param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.SetVisibleCore(System.Boolean)"><summary>
            Sets the control to the specified visible state.
            </summary><param name="visible"><c>true</c> to make the control visible; otherwise, <c>false</c>.
            </param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.ShowPopup(System.Windows.Forms.Control,System.Boolean)"><summary>
            Shows the popup.
            </summary><param name="owner">The <see cref="T:System.Windows.Forms.Control" /> that is the owner of the popup.</param><param name="activate">Whether the form should be activated after being displayed.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.WndProc(System.Windows.Forms.Message@)"><summary>
            Processes Windows messages.
            </summary><param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param></member><member name="M:ActiproSoftware.WinUICore.PopupControl.#ctor"><summary>
            Initializes a new instance of the <c>PopupControl</c> class.
            </summary></member><member name="P:ActiproSoftware.WinUICore.PopupControl.AutoClose"><summary>
            Gets whether to automatically close when system events occur.
            </summary><value><c>true</c> if the popup should be closed when system events occur; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.PopupControl.CreateParams"><summary>
            Gets the required creation parameters when the control handle is created.
            </summary><value>
            A <see cref="P:ActiproSoftware.WinUICore.PopupControl.CreateParams" /> object that contains the required creation parameters when the handle to the control is created.
            </value></member><member name="P:ActiproSoftware.WinUICore.PopupControl.DropShadowEnabled"><summary>
            Gets or sets whether a drop-shadow is enabled.
            </summary><value><c>true</c> if a drop-shadow is enabled; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.PopupControl.ExclusionBounds"><summary>
            Gets the bounds over which the object may not be displayed.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the bounds over which the object may not be displayed.</value></member><member name="P:ActiproSoftware.WinUICore.PopupControl.ExclusionCorner"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.Corner" /> of the exclusion bounds at which the popup is displayed.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.Corner" /> of the exclusion bounds at which the popup is displayed.</value></member><member name="P:ActiproSoftware.WinUICore.PopupControl.ExclusionSide"><summary>
            Gets the side of the exclusion bounds upon which the popup is displayed.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.Sides" /> specifying the side of the exclusion bounds upon which the popup is displayed.</value></member><member name="E:ActiproSoftware.WinUICore.PopupControl.Displayed"><summary>
            Occurs after the popup is displayed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.WinUICore.PopupControl.Displaying"><summary>
            Occurs before the popup is displayed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.WinUICore.PopupControl.Hidden"><summary>
            Occurs after the popup is closed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.WinUICore.PopupControl.Hiding"><summary>
            Occurs before the popup is closed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.WinUICore.ScrollBar"><summary>
            Represents a scrollbar control.
            </summary></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.ArrangeCore"><summary>
            Provides the place to perform arrange logic for the element.
            </summary><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIControl.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.ComponentModel.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.GetSidesFromOrientation(System.Windows.Forms.Orientation)"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.Sides" /> value that corresponds to the specified <see cref="T:System.Windows.Forms.Orientation" />.
            </summary><param name="orientation">The <see cref="T:System.Windows.Forms.Orientation" /> to examine.</param><returns>The <see cref="T:ActiproSoftware.Drawing.Sides" /> value that corresponds to the specified <see cref="T:System.Windows.Forms.Orientation" />.</returns></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.WinUICore.ScrollBar.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.OnCommand(ActiproSoftware.WinUICore.Commands.CommandEventArgs)"><summary>
            Raises the <c>Command</c> event.
            </summary><param name="e">A <c>CommandEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseDown" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.OnThumbScrolled(System.EventArgs)"><summary>
            Raises the <c>ThumbScrolled</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.OnThumbScrolling(System.EventArgs)"><summary>
            Raises the <c>ThumbScrolling</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.OnValueChanged(System.EventArgs)"><summary>
            Raises the <c>ValueChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.RaiseCommand(ActiproSoftware.WinUICore.Commands.Command)"><summary>
            Raises the specified <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" />.
            </summary><param name="command">The <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> to raise.</param><returns><c>true</c> if the <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> was handled; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.SetData(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)"><summary>
            Sets all the data in one consolidated method.
            </summary><param name="minimum">The minimum.</param><param name="maximum">The maximum.</param><param name="smallChange">The small change.</param><param name="largeChange">The large change.</param><param name="enabled">Whether the control is enabled.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBar.#ctor"><summary>
            Initializes a new instance of the <c>ScrollBar</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.BarrelBeforeThumbBounds"><summary>
            Gets the bounds of the barrel before the thumb.
            </summary><value>A <c>Rectangle</c> specifying the bounds of the barrel before the thumb.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.BarrelAfterThumbBounds"><summary>
            Gets the bounds of the barrel after the thumb.
            </summary><value>A <c>Rectangle</c> specifying the bounds of the barrel after the thumb.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.CommandLinks"><summary>
            Gets a <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLinkCollection" /> containing the command links associated with the object.
            </summary><value>A <see cref="T:ActiproSoftware.WinUICore.Commands.CommandLinkCollection" /> containing the command links associated with the object.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.CurrentScrollCommand"><summary>
            Gets the current scroll <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is executing.
            </summary><value>The current scroll <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is executing.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.DecreaseLargeCommand"><summary>
            Gets the <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is used for a large decrease button click.
            </summary><value>The <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is used for a large decrease button click.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.DecreaseSmallCommand"><summary>
            Gets the <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is used for a small decrease button click.
            </summary><value>The <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is used for a small decrease button click.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.DefaultSize"><summary>
            Gets the default size of the control.
            </summary><value>The default <see cref="T:System.Drawing.Size" /> of the control.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.ForwardCommandsTo"><summary>
            Gets or sets the <see cref="T:ActiproSoftware.WinUICore.Commands.ICommandTarget" /> to forward commands to.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.Commands.ICommandTarget" /> to forward commands to.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.IncreaseLargeCommand"><summary>
            Gets the <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is used for a large increase button click.
            </summary><value>The <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is used for a large increase button click.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.IncreaseSmallCommand"><summary>
            Gets the <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is used for a small increase button click.
            </summary><value>The <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> that is used for a small increase button click.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.LargeChange"><summary>
            Gets or sets the value to be added to or subtracted from to the <see cref="P:ActiproSoftware.WinUICore.ScrollBar.Value" /> property when the scroll box is moved a large distance.
            </summary><value>A numeric value. The default value is <c>10</c>.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.Maximum"><summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary><value>A numeric value. The default value is <c>100</c>.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.Minimum"><summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary><value>A numeric value. The default value is <c>0</c>.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.Orientation"><summary>
            Gets or sets the orientation of the scrollbar.
            </summary><value>A <see cref="T:System.Windows.Forms.Orientation" /> that specifies the orientation.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.Renderer"><summary>
            Gets or sets the control-specific <see cref="T:ActiproSoftware.WinUICore.IScrollBarRenderer" /> used to render the control.
            </summary><value>The control-specific <see cref="T:ActiproSoftware.WinUICore.IScrollBarRenderer" /> used to render the control.</value><remarks>
            If this value is <see langword="null" />, then the global renderer will be used instead.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.RendererResolved"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.IScrollBarRenderer" /> used to render the control.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.IScrollBarRenderer" /> used to render the control.</value><remarks>
            This property will return a global renderer if there is no control instance renderer override.
            The registered renderer type with the <c>UIRendererManager</c> for this property is <see cref="T:ActiproSoftware.WinUICore.IScrollBarRenderer" />.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.SmallChange"><summary>
            Gets or sets the value to be added to or subtracted from to the <see cref="P:ActiproSoftware.WinUICore.ScrollBar.Value" /> property when the scroll box is moved a small distance.
            </summary><value>A numeric value. The default value is <c>1</c>.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBar.Value"><summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary><value>A numeric value that is within the <see cref="P:ActiproSoftware.WinUICore.ScrollBar.Minimum" /> and <see cref="P:ActiproSoftware.WinUICore.ScrollBar.Maximum" /> range. The default value is <c>0</c>.</value></member><member name="E:ActiproSoftware.WinUICore.ScrollBar.Command"><summary>
            Occurs when a <see cref="E:ActiproSoftware.WinUICore.ScrollBar.Command" /> is executed.
            </summary><eventdata>
            The event handler receives an argument of type <c>CommandEventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.WinUICore.ScrollBar.ThumbScrolled"><summary>
            Occurs after thumb scrolling ends.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.WinUICore.ScrollBar.ThumbScrolling"><summary>
            Occurs before thumb scrolling starts.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="E:ActiproSoftware.WinUICore.ScrollBar.ValueChanged"><summary>
            Occurs after the value of the <see cref="P:ActiproSoftware.WinUICore.ScrollBar.Value" /> property changes.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.WinUICore.ScrollBarButton"><summary>
            Represents a button for a <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> control.
            </summary></member><member name="M:ActiproSoftware.WinUICore.ScrollBarButton.GetDrawState"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> for the element.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> for the element.</value><remarks>The default implementation of this method returns <c>UIElementDrawState.None</c>.</remarks></member><member name="M:ActiproSoftware.WinUICore.ScrollBarButton.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.WinUICore.ScrollBarButton.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.WinUICore.ScrollBarButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseDown" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarButton.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarButton.#ctor(ActiproSoftware.WinUICore.Commands.CommandLink)"><summary>
            Initializes a new instance of the <c>ScrollBarButton</c> class. 
            </summary><param name="commandLink">The <see cref="P:ActiproSoftware.WinUICore.ScrollBarButton.CommandLink" /> for the button.</param></member><member name="P:ActiproSoftware.WinUICore.ScrollBarButton.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.ScrollBarButton.CommandLink"><summary>
            Gets the <see cref="P:ActiproSoftware.WinUICore.ScrollBarButton.CommandLink" /> for the button.
            </summary><value>The <see cref="P:ActiproSoftware.WinUICore.ScrollBarButton.CommandLink" /> for the button.</value></member><member name="P:ActiproSoftware.WinUICore.ScrollBarButton.InvalidateOnMouseEvents"><summary>
            Gets whether to invalidate the element when mouse events occur.
            </summary><value><c>true</c> if the element should be invalidated when mouse events occur.
            </value></member><member name="P:ActiproSoftware.WinUICore.ScrollBarButton.ScrollBar"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> that contains the element.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> that contains the element.</value></member><member name="T:ActiproSoftware.WinUICore.ScrollBarRenderer"><summary>
            Provides a base renderer for the <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> control.
            </summary></member><member name="M:ActiproSoftware.WinUICore.ScrollBarRenderer.DrawScrollBarBackground(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.WinUICore.ScrollBar)"><summary>
            Draws the background of a <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> control.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="scrollBar">The <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> being painted.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarRenderer.DrawScrollBarButton(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.WinUICore.ScrollBarButton)"><summary>
            Draws a <see cref="T:ActiproSoftware.WinUICore.ScrollBarButton" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="button">The <see cref="T:ActiproSoftware.WinUICore.ScrollBarButton" /> that is being painted.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarRenderer.DrawScrollBarThumb(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.WinUICore.ScrollBarThumb)"><summary>
            Draws a <see cref="T:ActiproSoftware.WinUICore.ScrollBarThumb" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="thumb">The <see cref="T:ActiproSoftware.WinUICore.ScrollBarThumb" /> that is being painted.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarRenderer.Equals(System.Object)"><summary>
            Determines whether the specified <c>Object</c> is equal to the current <c>Object</c>. 
            </summary><param name="obj">The <c>Object</c> to compare to the current <c>Object</c>.</param><returns><c>true</c> if the specified <c>Object</c> is equal to the current <c>Object</c>; 
            otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.WinUICore.ScrollBarRenderer.GetHashCode"><summary>
            Returns a hash code for this object.
            </summary><returns>An integer value that specifies a hash value for this object.</returns></member><member name="M:ActiproSoftware.WinUICore.ScrollBarRenderer.OnPropertyChanged(System.EventArgs)"><summary>
            Raises the <c>PropertyChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarRenderer.#ctor"><summary>
            Initializes a new instance of the <c>ScrollBarRenderer</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="E:ActiproSoftware.WinUICore.ScrollBarRenderer.PropertyChanged"><summary>
            Occurs after a property is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.WinUICore.ScrollBarThumb"><summary>
            Represents a thumb for a <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> control.
            </summary></member><member name="M:ActiproSoftware.WinUICore.ScrollBarThumb.GetDrawState"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> for the element.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.UIElementDrawState" /> for the element.</value><remarks>The default implementation of this method returns <c>UIElementDrawState.None</c>.</remarks></member><member name="M:ActiproSoftware.WinUICore.ScrollBarThumb.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.WinUICore.ScrollBarThumb.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIElement.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.WinUICore.ScrollBarThumb.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseDown" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarThumb.OnMouseMove(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseMove" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarThumb.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <see cref="E:ActiproSoftware.WinUICore.UIElement.MouseUp" /> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarThumb.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.ScrollBarThumb.#ctor"><summary>
            Initializes a new instance of the <c>ScrollBarThumb</c> class. 
            </summary></member><member name="P:ActiproSoftware.WinUICore.ScrollBarThumb.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.ScrollBarThumb.InvalidateOnMouseEvents"><summary>
            Gets whether to invalidate the element when mouse events occur.
            </summary><value><c>true</c> if the element should be invalidated when mouse events occur.
            </value></member><member name="P:ActiproSoftware.WinUICore.ScrollBarThumb.ScrollBar"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> that contains the element.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> that contains the element.</value></member><member name="T:ActiproSoftware.WinUICore.StandardColorPicker"><summary>
            Provides a standard color picker that can be used in a drop-down.
            </summary></member><member name="M:ActiproSoftware.WinUICore.StandardColorPicker.OnSelectedColorChanged(System.EventArgs)"><summary>
            Raises the <c>SelectedColorChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.StandardColorPicker.#ctor"><summary>
            Initializes a new instance of the <c>StandardColorPicker</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.StandardColorPicker.DefaultSize"><summary>
            Gets the default size of the control.
            </summary><value>The default <see cref="T:System.Drawing.Size" /> of the control.</value></member><member name="P:ActiproSoftware.WinUICore.StandardColorPicker.SelectedColor"><summary>
            Gets the selected color in the popup.
            </summary><value>The selected <see cref="T:System.Drawing.Color" /> in the popup.</value></member><member name="E:ActiproSoftware.WinUICore.StandardColorPicker.SelectedColorChanged"><summary>
            Occurs after the value of the <see cref="P:ActiproSoftware.WinUICore.StandardColorPicker.SelectedColor" /> property changes.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata><remarks>
            Use this event to perform any processing that should occur after the selection changes.
            </remarks></member><member name="T:ActiproSoftware.WinUICore.StandardColorPickerPopup"><summary>
            Provides a standard color picker popup.
            </summary></member><member name="M:ActiproSoftware.WinUICore.StandardColorPickerPopup.OnSelectedColorChanged(System.EventArgs)"><summary>
            Raises the <c>SelectedColorChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.StandardColorPickerPopup.#ctor"><summary>
            Initializes a new instance of the <c>StandardColorPickerPopup</c> class. 
            </summary></member><member name="P:ActiproSoftware.WinUICore.StandardColorPickerPopup.SelectedColor"><summary>
            Gets the selected color in the popup.
            </summary><value>The selected <see cref="T:System.Drawing.Color" /> in the popup.</value></member><member name="E:ActiproSoftware.WinUICore.StandardColorPickerPopup.SelectedColorChanged"><summary>
            Occurs after the value of the <see cref="P:ActiproSoftware.WinUICore.StandardColorPickerPopup.SelectedColor" /> property changes.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata><remarks>
            Use this event to perform any processing that should occur after the selection changes.
            </remarks></member><member name="T:ActiproSoftware.WinUICore.UIContainerControl"><summary>
            Provides base functionality for controls that wish to work with <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> objects.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.AddPendingGraphicsInversion(System.Drawing.Rectangle)"><summary>
            Inverts the canvas using XOR at the end of the current or next drawing operation.
            </summary><param name="bounds">A <c>Rectangle</c> specifying the bounds to invert.</param><returns><c>true</c> if the inversion operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Windows.Forms.Orientation,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="orientation">The direction to scroll.</param><param name="amount">The amount to scroll.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.AddPendingScrollOperation(System.Drawing.Rectangle,System.Int32,System.Int32)"><summary>
            Scrolls the canvas the specified amount at the beginning of the next drawing operation.
            </summary><param name="bounds">The bounds to scroll.</param><param name="xAmount">The amount to scroll horizontally.</param><param name="yAmount">The amount to scroll vertically.</param><returns><c>true</c> if the scroll operation was added successfully; otherwise, <c>false</c>.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.AddToInvalidatedRegion"><summary>
            Adds the bounds of the control to the invalidated region.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.AddToInvalidatedRegion(System.Drawing.Rectangle)"><summary>
            Adds a <c>Rectangle</c> to the invalidated region.
            </summary><param name="rect">The <c>Rectangle</c> to add to the invalidated region.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.Arrange(System.Drawing.Rectangle)"><summary>
            Updates the <see cref="P:System.Windows.Forms.Control.Bounds" /> property and positions child elements.
            </summary><param name="newBounds">The final bounds of the element.</param><remarks>
            This method internally calls <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.ArrangeCore" /> override, giving the derived class opportunity to arrange 
            its children and/or content using the final computed bounds. 
            In <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.ArrangeCore" /> overrides, the derived class is supposed to create its visual structure and prepare itself for rendering. 
            <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Arrange(System.Drawing.Rectangle)" /> is called by parents from their implementation of <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.ArrangeCore" /> or by system when needed. 
            This method sets the <see cref="P:System.Windows.Forms.Control.Bounds" /> property to <c>newBounds</c> before calling <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.ArrangeCore" />.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.ArrangeCore"><summary>
            Provides the place to perform arrange logic for the element.
            </summary><remarks>
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Arrange(System.Drawing.Rectangle)" /> on each visible child element and position each child element.
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Arrange(System.Drawing.Rectangle)" /> on each child or they won't be rendered.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.CreateChildren"><summary>
            Invoked when the collection of child elements is to be created.
            </summary><returns>The <see cref="T:System.Collections.IList" /> that should be assigned to the <see cref="P:ActiproSoftware.ComponentModel.ILogicalTreeNode.Children" /> property.</returns><remarks>By default no child collection is created.</remarks></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.Dispose(System.Boolean)"><summary>
            Disposes any resources used by the object.
            </summary><param name="disposing">Whether the object is being disposed.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.GetCursor(System.Drawing.Point)"><summary>
            Gets the <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.
            </summary><param name="point">The <see cref="T:System.Drawing.Point" /> to examine.</param><returns>The <see cref="T:System.Windows.Forms.Cursor" /> that should be used when the mouse is over the element at the specified <see cref="T:System.Drawing.Point" />.</returns></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)"><summary>
            Invalidates the specified states for the element or its related elements.
            </summary><param name="levels">The hierarchy levels at which to invalidate.</param><param name="types">The types of invalidation to perform.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Measures the element and updates the <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.DesiredSize" /> property.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><remarks>
            The <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> method should be called by parents on their children.
            Internally, <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> calls the <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> override on the same object, 
            giving it opportunity to compute its <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.DesiredSize" />. 
            This method will return immediately if the child's measurements are valid, previously measured and 
            <c>availableSize</c> is the same as cached. 
            This method also resets the <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.IsMeasureValid" /> bit on the child. 
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)"><summary>
            Provides the place to perform measurement logic for the element.
            </summary><param name="g">The <see cref="T:System.Drawing.Graphics" /> object to use for measurement.</param><param name="availableSize">
            The available size that parent can give to the child.
            The child can return bigger in hopes that the parent will become scrollable.
            The value may also be infinity to indicate that the desired measurements of the element are wanted.
            </param><returns><see cref="M:ActiproSoftware.WinUICore.UIContainerControl.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> is designed to be the main customizability point for size control of layout. 
            Element authors should override this method, call <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child element, 
            and compute their desired size based upon the measurement of the children. 
            The return value should be the desired size. 
            It is required that a parent element calls <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" /> on each child or they won't be sized/arranged.
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnClick(System.EventArgs)"><summary>
            Raises the <c>Click</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnDoubleClick(System.EventArgs)"><summary>
            Raises the <c>DoubleClick</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnHandleCreated(System.EventArgs)"><summary>
            Raises the <c>HandleCreated</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnLayout(System.Windows.Forms.LayoutEventArgs)"><summary>
            Raises the <c>Layout</c> event.
            </summary><param name="e">An <c>LayoutEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseDown</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnMouseEnter(System.EventArgs)"><summary>
            Raises the <c>MouseEnter</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnMouseHover(System.EventArgs)"><summary>
            Raises the <c>MouseHover</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnMouseLeave(System.EventArgs)"><summary>
            Raises the <c>MouseLeave</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseMove</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseUp</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)"><summary>
            Raises the <c>MouseWheel</c> event.
            </summary><param name="e">A <c>MouseEventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnPaint(System.Windows.Forms.PaintEventArgs)"><summary>
            Raises the <c>Paint</c> event.
            </summary><param name="e">An <c>PaintEventArgs</c> that contains the event data.</param><remarks>
            The default implementation of this event sets up a double-buffering canvas and simply
            calls the <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.  
            It is sealed to prevent implementors from implementing it.
            All drawing code should be placed in the <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)"><summary>
            Raises the <c>PaintBackground</c> event.
            </summary><param name="e">An <c>PaintEventArgs</c> that contains the event data.</param><remarks>
            The default implementation of this event does nothing.  
            It is sealed to prevent implementors from implementing it.
            All drawing code should be placed in the <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.OnRender(System.Windows.Forms.PaintEventArgs)" /> method.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnParentChanged"><summary>
            Invoked when logical parent is changed. 
            This is invoked after the parent has changed, and the purpose is to allow elements to perform actions based on the changed parent.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnRender(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnRenderChildElements(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the child elements.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><remarks>
            This method should not generally be overridden.
            The default implementation of this method calls the <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Render(System.Windows.Forms.PaintEventArgs)" /> method on all child elements.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnResize(System.EventArgs)"><summary>
            Raises the <c>Resize</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.OnVisibleChanged(System.EventArgs)"><summary>
            Raises the <c>VisibleChanged</c> event.
            </summary><param name="e">An <c>EventArgs</c> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.Render(System.Windows.Forms.PaintEventArgs)"><summary>
            Renders the element.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.ResetDoubleBufferCanvas(System.Boolean)"><summary>
            Resets the double-buffer canvas.
            </summary><param name="recurse">Whether to recurse down into the child control tree.</param></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.ResumePainting"><summary>
            Allows the control to paint itself by clearing the <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.PaintingSuspended" /> flag.
            </summary><seealso cref="P:ActiproSoftware.WinUICore.UIContainerControl.PaintingSuspended" /></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.SuspendPainting"><summary>
            Prevents the control from painting itself by setting the <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.PaintingSuspended" /> flag.
            </summary><seealso cref="P:ActiproSoftware.WinUICore.UIContainerControl.PaintingSuspended" /></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.UpdateLayout"><summary>
            Call this method to ensure that the whole subtree of elements that includes this <see cref="T:ActiproSoftware.WinUICore.UIElement" /> is properly updated.
            </summary><remarks>
            This ensures that <see cref="T:ActiproSoftware.WinUICore.UIElement" /> objects with invalid measure or arrange states will get a call to their 
            <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.MeasureCore(System.Drawing.Graphics,System.Drawing.Size)" /> and <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.ArrangeCore" /> methods, and all computed sizes will be validated. 
            This method does nothing if layout is clean but it does work if layout is not clean so avoid 
            calling it after each change in the element tree. 
            It makes sense to either never call it (system will do this in a deferred manner) or only 
            call it if you absolutely need updated sizes and positions after you do all changes.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIContainerControl.#ctor"><summary>
            Initializes a new instance of the <c>UIContainerControl</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.BackColor"><summary>
            Gets or sets the background color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</value></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.BackgroundImage"><summary>
            Gets or sets the background image displayed in the control.
            </summary><value>An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</value></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.CaptureMouseWhenPressed"><summary>
            Indicates whether to automatically capture the mouse when the element is pressed.
            </summary><value><c>true</c> if the mouse should automatically be captured when the element is pressed; otherwise, <c>false</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.ClipBounds"><summary>
            Gets a <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.
            </summary><value>A <see cref="T:System.Drawing.Rectangle" /> specifying the clip bounds when drawing the element.</value></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.DesiredSize"><summary>
            Gets the desired size of the element as computed by <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.
            </summary><value>The desired size of the element as computed by <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Measure(System.Drawing.Graphics,System.Drawing.Size)" />.</value><remarks>
            This is only valid if <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.IsMeasureValid" /> is <see langword="true" />. 
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.Font"><summary>
            Gets or sets the font of the text displayed by the control.
            </summary><value>The <see cref="T:System.Drawing.Font" /> object to apply to the text displayed by the control.</value></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.ForeColor"><summary>
            Gets or sets the foreground color for the control.
            </summary><value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control.</value></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.IsArrangeValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.DesiredSize" /> property and position of child elements is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.DesiredSize" /> property and position of child elements is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)" />. 
            <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.IsArrangeValid" /> and <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.IsMeasureValid"><summary>
            Gets whether the value of the <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.DesiredSize" /> property is valid.
            </summary><value><c>true</c> if the value of the <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.DesiredSize" /> property is valid; otherwise, <c>false</c>.
            </value><remarks>
            A developer can force arrangement to be invalidated by calling <see cref="M:ActiproSoftware.WinUICore.UIContainerControl.Invalidate(ActiproSoftware.WinUICore.InvalidationLevels,ActiproSoftware.WinUICore.InvalidationTypes)" />. 
            <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.IsArrangeValid" /> and <see cref="P:ActiproSoftware.WinUICore.UIContainerControl.IsMeasureValid" /> are related, 
            in that arrangement cannot be valid without measurement first being valid.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.LastMouseUpButton"><summary>
            Gets the <see cref="T:System.Windows.Forms.MouseButtons" /> indicating the last mouse button that was released.
            </summary><value>The <see cref="T:System.Windows.Forms.MouseButtons" /> indicating the last mouse button that was released.</value></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.PaintingSuspended"><summary>
            Gets whether the control is painting itself.
            </summary><value><c>true</c> if the control is painting itself; otherwise, <c>false</c>.</value><remarks>
            If this flag is set, calls to the <c>OnPaint</c> method will be ignored.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.UseControlGraphicsForMeasure"><summary>
            Gets or sets whether to use a call to the control's <c>CreateGraphics</c> method to obtain the <see cref="T:System.Drawing.Graphics" /> used for measure routines.
            </summary><value><c>true</c> if the control's <c>CreateGraphics</c> method should be called; otherwise, <c>false</c>.
            The default value is <c>true</c>.
            </value></member><member name="P:ActiproSoftware.WinUICore.UIContainerControl.UseExtendedDoubleBuffering"><summary>
            Gets or sets whether to use extended double buffering for rendering.
            </summary><value><c>true</c> if extended double buffering should be used; otherwise, <c>false</c>.
            </value></member><member name="T:ActiproSoftware.WinUICore.UIElementCollection"><summary>
            Encapsulates a collection of <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> items.
            </summary><remarks>
            This class is a zero-based indexed collection. 
            </remarks><seealso cref="T:ActiproSoftware.WinUICore.IUIElement" /></member><member name="M:ActiproSoftware.WinUICore.UIElementCollection.Contains(ActiproSoftware.WinUICore.IUIElement)"><summary>
            Determines whether the specified element is in the collection. 
            </summary><param name="value">The <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> to look for.</param><returns><c>true</c> if the collection contains the element; otherwise, <c>false</c>. 
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIElementCollection.Dispose(System.Boolean)"><summary>
            Releases the unmanaged resources used by the object and optionally releases the managed resources.
            </summary><param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources. 
            </param><remarks>
            This method is called by the public <c>Dispose</c> method and the <c>Finalize</c> method. 
            <c>Dispose</c> invokes this method with the <paramref name="disposing" /> parameter set to <c>true</c>. 
            <c>Finalize</c> invokes this method with <paramref name="disposing" /> set to <c>false</c>.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIElementCollection.IndexOf(ActiproSoftware.WinUICore.IUIElement)"><summary>
            Returns the index of the specified element in the collection.
            </summary><param name="value">The <see cref="T:ActiproSoftware.WinUICore.IUIElement" /> to look for.</param><returns>
            If found, the index where the element is in the collection; otherwise, <c>-1</c>. 
            </returns></member><member name="M:ActiproSoftware.WinUICore.UIElementCollection.OnObjectRemoving(System.Int32,ActiproSoftware.ComponentModel.ILogicalTreeNode)"><summary>
            Performs additional custom processes before an object is removed from the collection.
            </summary><param name="index">The zero-based index from which the object was removed.</param><param name="value">The object that was removed.</param><remarks>
            The default implementation of this method is intended to be overridden by a derived class to 
            perform some action before the specified object is removed.
            </remarks></member><member name="M:ActiproSoftware.WinUICore.UIElementCollection.#ctor(ActiproSoftware.WinUICore.IUIElement)"><summary>
            Initializes a new instance of the <c>UIElementCollection</c> class. 
            </summary><param name="owner">The owner of the collection.</param></member><member name="P:ActiproSoftware.WinUICore.UIElementCollection.PluralElementName"><summary>
            Gets the short, plural name of the type of child elements in the collection.
            </summary><value>The short, plural name of the type of child elements in the collection.</value><remarks>This value is used within the design-time environment when indicating the count of elements in the collection.</remarks><seealso cref="P:ActiproSoftware.WinUICore.UIElementCollection.SingularElementName" /></member><member name="P:ActiproSoftware.WinUICore.UIElementCollection.SingularElementName"><summary>
            Gets the short, singular name of the type of child elements in the collection.
            </summary><value>The short, singular name of the type of child elements in the collection.</value><remarks>This value is used within the design-time environment when indicating the count of elements in the collection.</remarks><seealso cref="P:ActiproSoftware.WinUICore.UIElementCollection.PluralElementName" /></member><member name="T:ActiproSoftware.WinUICore.UIElementCollectionConverter"><summary>
            Provides a <c>TypeConverter</c> to convert <see cref="T:ActiproSoftware.WinUICore.UIElementCollection" /> objects to and from other representations.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIElementCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"><summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="destType">A <c>Type</c> that represents the type you want to convert to.</param><returns><c>true</c> if this converter can perform the conversion; otherwise, <c>false</c>.</returns></member><member name="M:ActiproSoftware.WinUICore.UIElementCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"><summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary><param name="context">An <c>ITypeDescriptorContext</c> that provides a format context.</param><param name="culture">A <c>CultureInfo</c> object. If <see langword="null" /> is passed, the current culture is assumed. </param><param name="value">The <c>Object</c> to convert.</param><param name="destType">The <c>Type</c> to convert the value parameter to.</param><returns>An <c>Object</c> that represents the converted value.</returns></member><member name="T:ActiproSoftware.WinUICore.UIElementComponent"><summary>
            Represents a <see cref="T:ActiproSoftware.WinUICore.UIElement" /> that implements <see cref="T:System.ComponentModel.IComponent" />.
            </summary></member><member name="T:ActiproSoftware.WinUICore.UIElementDrawState"><summary>
            Specifies the draw state of a <see cref="T:ActiproSoftware.WinUICore.IUIElement" />.
            </summary></member><member name="F:ActiproSoftware.WinUICore.UIElementDrawState.None"><summary>
            The element is in its default state.
            </summary></member><member name="F:ActiproSoftware.WinUICore.UIElementDrawState.Hot"><summary>
            The mouse is over the element.
            </summary></member><member name="F:ActiproSoftware.WinUICore.UIElementDrawState.Pressed"><summary>
            The mouse is pressing the element.
            </summary></member><member name="F:ActiproSoftware.WinUICore.UIElementDrawState.Checked"><summary>
            The element is checked.
            </summary></member><member name="F:ActiproSoftware.WinUICore.UIElementDrawState.Selected"><summary>
            The element is selected.
            </summary></member><member name="F:ActiproSoftware.WinUICore.UIElementDrawState.Disabled"><summary>
            The element is disabled.
            </summary></member><member name="T:ActiproSoftware.WinUICore.UIRendererManager"><summary>
            Managers the renderers used to render Actipro control products and controls the global theme for those products.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIRendererManager.DecrementUsageCount(System.Type)"><summary>
            Flags that a renderer instance is no longer required for the specified renderer <see cref="T:System.Type" />.
            </summary><param name="rendererType">The <see cref="T:System.Type" /> of renderer that is no longer needed.</param></member><member name="M:ActiproSoftware.WinUICore.UIRendererManager.GetRendererData(System.Type)"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.UIRendererManager.RendererData" /> for the specified renderer <see cref="T:System.Type" />, if there is data available.
            </summary><param name="rendererType">The <see cref="T:System.Type" /> of renderer to look for.</param><returns>The <see cref="T:ActiproSoftware.WinUICore.UIRendererManager.RendererData" /> for the specified renderer <see cref="T:System.Type" />, if there is data available.</returns></member><member name="M:ActiproSoftware.WinUICore.UIRendererManager.IncrementUsageCount(System.Type,ActiproSoftware.WinUICore.IUIRendererFactory)"><summary>
            Flags that a new renderer instance is requested for the specified renderer <see cref="T:System.Type" />.
            </summary><param name="rendererType">The <see cref="T:System.Type" /> of renderer that is needed.</param><param name="rendererFactory">The <see cref="T:ActiproSoftware.WinUICore.IUIRendererFactory" /> that will be used to create renderers.</param></member><member name="M:ActiproSoftware.WinUICore.UIRendererManager.RegisterRendererFactory(System.Type,ActiproSoftware.WinUICore.IUIRendererFactory,System.Boolean)"><summary>
            Flags that a new renderer instance is requested for the specified renderer <see cref="T:System.Type" />.
            </summary><param name="rendererType">The <see cref="T:System.Type" /> of renderer that is needed.</param><param name="rendererFactory">The <see cref="T:ActiproSoftware.WinUICore.IUIRendererFactory" /> that will be used to create renderers.</param><param name="overwrite">Whether to overwrite any existing record.</param></member><member name="P:ActiproSoftware.WinUICore.UIRendererManager.ColorScheme"><summary>
            Gets the <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> currently in use by the renderer manager.
            </summary><value>The <see cref="T:ActiproSoftware.Drawing.WindowsColorScheme" /> currently in use by the renderer manager.</value></member><member name="P:ActiproSoftware.WinUICore.UIRendererManager.ColorSchemeType"><summary>
            Gets or sets a <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> that indicates the color scheme type to use for the renderers.
            </summary><value>A <see cref="T:ActiproSoftware.Drawing.WindowsColorSchemeType" /> that indicates the color scheme type to use for the renderers.</value></member><member name="T:ActiproSoftware.WinUICore.UIRendererManager.RendererData"><summary>
            Provides information about a <see cref="T:ActiproSoftware.WinUICore.UIRendererManager" /> record.
            </summary></member><member name="M:ActiproSoftware.WinUICore.UIRendererManager.RendererData.AddRendererPropertyChangedListener(ActiproSoftware.ComponentModel.IWeakEventListener)"><summary>
            Adds a listener to a weak <see cref="E:ActiproSoftware.WinUICore.UIRendererManager.RendererData.RendererPropertyChanged" /> event.
            </summary><param name="listener">The listener to add.</param></member><member name="M:ActiproSoftware.WinUICore.UIRendererManager.RendererData.RemoveRendererPropertyChangedListener(ActiproSoftware.ComponentModel.IWeakEventListener)"><summary>
            Removes a listener from a weak <see cref="E:ActiproSoftware.WinUICore.UIRendererManager.RendererData.RendererPropertyChanged" /> event.
            </summary><param name="listener">The listener to remove.</param></member><member name="P:ActiproSoftware.WinUICore.UIRendererManager.RendererData.Renderer"><summary>
            Gets the <see cref="T:ActiproSoftware.WinUICore.IUIRenderer" /> currently in use.
            </summary><value>The <see cref="T:ActiproSoftware.WinUICore.IUIRenderer" /> currently in use.</value></member><member name="E:ActiproSoftware.WinUICore.UIRendererManager.RendererData.RendererPropertyChanged"><summary>
            Occurs when a property on the renderer is changed.
            </summary><eventdata>
            The event handler receives an argument of type <c>EventArgs</c> containing data related to this event.
            </eventdata></member><member name="T:ActiproSoftware.WinUICore.Visibility"><summary>
            Specifies the display state of an object.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Visibility.Visible"><summary>
            Normally visible.
            </summary></member><member name="F:ActiproSoftware.WinUICore.Visibility.Hidden"><summary>
            Occupies space in the layout, but is not visible (completely transparent).
            </summary></member><member name="F:ActiproSoftware.WinUICore.Visibility.Collapsed"><summary>
            Not visible and does not occupy any space in layout, as if it doesn't exist.
            </summary></member><member name="T:ActiproSoftware.WinUICore.WindowsXPScrollBarRenderer"><summary>
            Provides a renderer for the <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> control that has a Windows XP color scheme.
            </summary></member><member name="M:ActiproSoftware.WinUICore.WindowsXPScrollBarRenderer.DrawScrollBarBackground(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.WinUICore.ScrollBar)"><summary>
            Draws the background of a <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> control.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="scrollBar">The <see cref="T:ActiproSoftware.WinUICore.ScrollBar" /> being painted.</param></member><member name="M:ActiproSoftware.WinUICore.WindowsXPScrollBarRenderer.DrawScrollBarButton(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.WinUICore.ScrollBarButton)"><summary>
            Draws a <see cref="T:ActiproSoftware.WinUICore.ScrollBarButton" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="button">The <see cref="T:ActiproSoftware.WinUICore.ScrollBarButton" /> that is being painted.</param></member><member name="M:ActiproSoftware.WinUICore.WindowsXPScrollBarRenderer.DrawScrollBarThumb(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,ActiproSoftware.WinUICore.ScrollBarThumb)"><summary>
            Draws a <see cref="T:ActiproSoftware.WinUICore.ScrollBarThumb" />.
            </summary><param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param><param name="bounds">The bounds in which to draw.</param><param name="thumb">The <see cref="T:ActiproSoftware.WinUICore.ScrollBarThumb" /> that is being painted.</param></member><member name="M:ActiproSoftware.WinUICore.WindowsXPScrollBarRenderer.#ctor"><summary>
            Initializes a new instance of the <c>WindowsXPScrollBarRenderer</c> class. 
            </summary><remarks>
            The default constructor initializes all fields to their default values.
            </remarks></member><member name="P:ActiproSoftware.WinUICore.WindowsXPScrollBarRenderer.UseThemes"><summary>
            Gets whether themes should be used when drawing the control.
            </summary><value><c>true</c> if themes should be used when drawing the control; otherwise, <c>false</c>.
            </value></member></members></doc>