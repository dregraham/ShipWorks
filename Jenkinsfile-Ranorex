def BUILD_FOLDER = env.BRANCH_NAME.replaceAll('/', '-').replaceAll(' ', '-')
def WORKSPACE = 'd:/jenkins-builds/SR_' + BUILD_FOLDER
def WORKSPACE_RANOREX = 'c:/jenkins-builds/SR_' + BUILD_FOLDER
def TIMESTAMP = new Date().format("YYYY-MM-dd-HHmmss")

pipeline {
	agent {
		node {
			label 'windows'
			customWorkspace "${WORKSPACE}"
		}
	}
	parameters {
		choice(
			name: 'Environment',
			choices:"Staging\nProduction",
			description: "Run against which Stamps environment?")
	}
	options {
		disableConcurrentBuilds()
	}
	stages {
		stage('Build') {
			agent {
				node {
					label 'windows'
					customWorkspace "${WORKSPACE}"
				}
			}
			steps {
				echo "Build on ${NODE_NAME}"
				bat 'cake build:public_installer[0.0.0]'
				bat 'dotnet publish Code/ShipWorks.Installer/ShipWorks.Installer.csproj -p:PublishSingleFile=true --self-contained false --runtime win-x64 --framework netcoreapp3.1 --output Artifacts/Installer'
				bat 'powershell -command "mkdir -f Artifacts/Distribute"'
				bat 'powershell "echo "Foo" > Artifacts/Distribute/test.txt"'
				stash includes: '/Artifacts/Distribute/*.*,.build-label', name: 'installer'
			}
		}
		stage('Copy Artifacts') {
			agent {
				node {
					label 'ranorex'
					customWorkspace "${WORKSPACE_RANOREX}"
				}
			}
			steps {
				unstash 'installer'
			}
		}
		stage('Test Preparation') {
			environment {
				BUILT_VERSION = readFile('.build-label').replaceAll("\\.", '_').trim()
			}
			agent {
				node {
					label 'ranorex'
					customWorkspace "${WORKSPACE_RANOREX}"
				}
			}
			steps {
				bat '(Taskkill -im Shipworks* -f 2>NUL) || type NUL>NUL'
				bat "copy /Y ${WORKSPACE_RANOREX.replaceAll('/', '\\\\')}\\Artifacts\\Distribute\\ShipWorksSetup_${BUILT_VERSION}.exe ${WORKSPACE_RANOREX.replaceAll('/', '\\\\')}\\Artifacts\\Distribute\\ShipWorksSetup_test.exe"
				bat 'powershell "mkdir -f ranorex"'
				dir('Code/ShipWorks.Ranorex.Tests/SmokeTest') {
					bat '"C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin/MSBuild.exe" SmokeTest.sln'
				}
				dir('Code/ShipWorks.Ranorex.Tests/ProcessDHL') {
					bat '"C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin/MSBuild.exe" ProcessDHL.sln'
				}
			}
		}
		stage('Smoke Test') {
			environment {
				BUILT_VERSION = readFile('.build-label').replaceAll("\\.", '_').trim()
			}
			agent {
				node {
					label 'ranorex'
					customWorkspace "${WORKSPACE_RANOREX}"
				}
			}
			steps {
				dir('Code/ShipWorks.Ranorex.Tests/SmokeTest/SmokeTest/bin/Debug') {
					bat "copy /Y \"\\\\intfs01\\Development\\Tango\\ChromiumArtifacts\\renderer_63_x64.zip\" renderer_63_x64.zip"
					bat """
					SmokeTest.exe ^
					/runconfig:Complete ^
					/param:InstallDir=${WORKSPACE_RANOREX}\\Artifacts\\Distribute\\ShipWorksSetup_test.exe ^
					/param:Environment=${params.Environment} ^
					/param:SQLServ=localhost\\ranorex ^
					/reportlevel:Debug ^
					/zr ^
					/zrf:"\\\\intfs01\\Development\\Testing\\Automated Smoketest Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}" ^
					/rf:"\\\\intfs01\\Development\\Testing\\Automated Smoketest Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}" ^
					/ju
					"""
				}
			}
			post {
				always {
					bat "copy /Y \"\\\\intfs01\\Development\\Testing\\Automated Smoketest Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}.rxlog.junit.xml\" ${WORKSPACE_RANOREX.replaceAll('/', '\\\\')}\\smoketest.results.junit.xml"
					junit "smoketest.results.junit.xml"
				}
			}
		}
		stage('Process OnTrac') {
			environment {
				BUILT_VERSION = readFile('.build-label').replaceAll("\\.", '_').trim()
			}
			agent {
				node {
					label 'ranorex'
					customWorkspace "${WORKSPACE_RANOREX}"
				}
			}
			steps {
				dir('Code/ShipWorks.Ranorex.Tests/ProcessOnTrac/ProcessOnTrac/bin/Debug') {
					bat "copy /Y \"\\\\intfs01\\Development\\Tango\\ChromiumArtifacts\\renderer_63_x64.zip\" renderer_63_x64.zip"
					bat """
					ProcessOnTrac.exe ^
					/runconfig:CompleteOnTrac ^
					/param:InstallDir=${WORKSPACE_RANOREX}\\Artifacts\\Distribute\\ShipWorksSetup_test.exe ^
					/param:Environment=${params.Environment} ^
					/param:SQLServ=localhost\\ranorex ^
					/reportlevel:Debug ^
					/zr ^
					/zrf:"\\\\intfs01\\Development\\Testing\\Automated ProcessOnTrac Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}" ^
					/rf:"\\\\intfs01\\Development\\Testing\\Automated ProcessOnTrac Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}" ^
					/ju
					"""
				}
			}
			post {
				always {
					bat "copy /Y \"\\\\intfs01\\Development\\Testing\\Automated ProcessOnTrac Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}.rxlog.junit.xml\" ${WORKSPACE_RANOREX.replaceAll('/', '\\\\')}\\processontrac.results.junit.xml"
					junit "processontrac.results.junit.xml"
				}
			}
		}
		stage('Process Other') {
			environment {
				BUILT_VERSION = readFile('.build-label').replaceAll("\\.", '_').trim()
			}
			agent {
				node {
					label 'ranorex'
					customWorkspace "${WORKSPACE_RANOREX}"
				}
			}
			steps {
				dir('Code/ShipWorks.Ranorex.Tests/ProcessOther/ProcessOther/bin/Debug') {
					bat "copy /Y \"\\\\intfs01\\Development\\Tango\\ChromiumArtifacts\\renderer_63_x64.zip\" renderer_63_x64.zip"
					bat """
					ProcessOther.exe ^
					/runconfig:CompleteOther ^
					/param:InstallDir=${WORKSPACE_RANOREX}\\Artifacts\\Distribute\\ShipWorksSetup_test.exe ^
					/param:Environment=${params.Environment} ^
					/param:SQLServ=localhost\\ranorex ^
					/reportlevel:Debug ^
					/zr ^
					/zrf:"\\\\intfs01\\Development\\Testing\\Automated ProcessOther Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}" ^
					/rf:"\\\\intfs01\\Development\\Testing\\Automated ProcessOther Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}" ^
					/ju
					"""
				}
			}
			post {
				always {
					bat "copy /Y \"\\\\intfs01\\Development\\Testing\\Automated ProcessOther Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}.rxlog.junit.xml\" ${WORKSPACE_RANOREX.replaceAll('/', '\\\\')}\\processother.results.junit.xml"
					junit "processother.results.junit.xml"
				}
			}
		}
		stage('Process DHL') {
			environment {
				BUILT_VERSION = readFile('.build-label').replaceAll("\\.", '_').trim()
			}
			agent {
				node {
					label 'ranorex'
					customWorkspace "${WORKSPACE_RANOREX}"
				}
			}
			steps {
				dir('Code/ShipWorks.Ranorex.Tests/ProcessDHL/ProcessDHL/bin/Debug') {
					bat "copy /Y \"\\\\intfs01\\Development\\Tango\\ChromiumArtifacts\\renderer_63_x64.zip\" renderer_63_x64.zip"
					bat """
					ProcessDHL.exe ^
					/runconfig:CompleteDHL ^
					/param:InstallDir=${WORKSPACE_RANOREX}\\Artifacts\\Distribute\\ShipWorksSetup_test.exe ^
					/param:Environment=${params.Environment} ^
					/param:SQLServ=localhost\\ranorex ^
					/reportlevel:Debug ^
					/zr ^
					/zrf:"\\\\intfs01\\Development\\Testing\\Automated ProcessDHL Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}" ^
					/rf:"\\\\intfs01\\Development\\Testing\\Automated ProcessDHL Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}" ^
					/ju
					"""
				}
			}
			post {
				always {
					bat "copy /Y \"\\\\intfs01\\Development\\Testing\\Automated ProcessDHL Results\\${env.BRANCH_NAME}\\obfuscated\\${TIMESTAMP}.rxlog.junit.xml\" ${WORKSPACE_RANOREX.replaceAll('/', '\\\\')}\\processdhl.results.junit.xml"
					junit "processdhl.results.junit.xml"
				}
			}
		}
	}
}