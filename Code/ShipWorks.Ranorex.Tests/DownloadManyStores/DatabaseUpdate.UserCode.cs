///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;
using System.Windows.Forms;

using System.Data;
using System.Data.SqlClient;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace DownloadManyStores
{
    public partial class DatabaseUpdate
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void DBUpdate1()
        {
            // TODO: Replace the following line with your code implementation.
            //throw new NotImplementedException();
            
			String strServerAndInstanceName = repo.ShipWorks.LabelSqlInstance.Element.GetAttributeValueText("Text");
			String strDatabaseName = repo.ShipWorks.LabelDatabase.Element.GetAttributeValueText("Text");
			String strPW = "ShipW@rks1";
		
			String strConnectionString ="Data Source=" + strServerAndInstanceName + ";Initial Catalog=" + strDatabaseName + ";Integrated Security=False;User ID=sa;Password=" + strPW + ";Connect Timeout=10;Application Name=TEST;"; 
			String strSQL = ""; 
			
			
			
			
                    using (SqlConnection con = new SqlConnection(strConnectionString))
                    {
                        con.Open();

                        // the below sql is creating a trigger so that stores are not set to auto-download when the store is added
						strSQL = "CREATE TRIGGER dbo.MakeNotAutoDownload ON dbo.Store AFTER INSERT,UPDATE AS BEGIN SET NOCOUNT ON; update Store set AutoDownload = 0 END";
                        using (SqlCommand cmd = new SqlCommand(strSQL, con))
                        {
                            cmd.ExecuteNonQuery();
                        }
                        
                        // the below sql is updating the [Store] table IntitialDownloadDays to be 999 for any store where the StoreName is like '%Amazon%','%Bigcommerce%'
            			strSQL = @"update [store] set InitialDownloadDays = 999 where StoreID in (select storeid from [store] where storename like '%Amazon%' or storename like '%Bigcommerce%')";            
                        using (SqlCommand cmd = new SqlCommand(strSQL, con))
                        {
                            cmd.ExecuteNonQuery();
                        }
                        
                        
                        con.Close();

                    }
                            	
                            	
            
        }

    }
}
