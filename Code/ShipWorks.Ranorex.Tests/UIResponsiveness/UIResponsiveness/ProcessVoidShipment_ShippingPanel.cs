///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace UIResponsiveness
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ProcessVoidShipment_ShippingPanel recording.
    /// </summary>
    [TestModule("99367737-2f69-428f-95f7-b640c021ce2c", ModuleType.Recording, 1)]
    public partial class ProcessVoidShipment_ShippingPanel : ITestModule
    {
        /// <summary>
        /// Holds an instance of the UIResponsivenessRepository repository.
        /// </summary>
        public static UIResponsivenessRepository repo = UIResponsivenessRepository.Instance;

        static ProcessVoidShipment_ShippingPanel instance = new ProcessVoidShipment_ShippingPanel();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ProcessVoidShipment_ShippingPanel()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ProcessVoidShipment_ShippingPanel Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.5")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "5.4.5")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;

            Init();

            // Give Focus: Create Label
            Report.Log(ReportLevel.Info, "Invoke Action", "Give Focus: Create Label\r\nInvoking Focus() on item 'ShipWorksSa.PanelDockingArea.CreateLabel'.", repo.ShipWorksSa.PanelDockingArea.CreateLabelInfo, new RecordItemIndex(0));
            repo.ShipWorksSa.PanelDockingArea.CreateLabel.Focus();
            Delay.Milliseconds(0);
            
            // Click: Create Label
            Report.Log(ReportLevel.Info, "Mouse", "Click: Create Label\r\nMouse Left Click item 'ShipWorksSa.PanelDockingArea.CreateLabel' at Center.", repo.ShipWorksSa.PanelDockingArea.CreateLabelInfo, new RecordItemIndex(1));
            repo.ShipWorksSa.PanelDockingArea.CreateLabel.Click();
            Delay.Milliseconds(200);
            
            // Wait for the "Processing" modal to disappear (for up to 1 minute)
            Report.Log(ReportLevel.Info, "Wait", "Wait for the \"Processing\" modal to disappear (for up to 1 minute)\r\nWaiting 1m for item 'ProcessingShipments.ProcessingShipments' to not exist.", repo.ProcessingShipments.ProcessingShipmentsInfo, new ActionTimeout(60000), new RecordItemIndex(2));
            repo.ProcessingShipments.ProcessingShipmentsInfo.WaitForNotExists(60000);
            
            // Click: Shipping Tools ribbon
            Report.Log(ReportLevel.Info, "Mouse", "Click: Shipping Tools ribbon\r\nMouse Left Click item 'ShipWorks2.ShippingTools' at Center.", repo.ShipWorks2.ShippingToolsInfo, new RecordItemIndex(3));
            repo.ShipWorks2.ShippingTools.Click();
            Delay.Milliseconds(200);
            
            // Give Focus: Void
            Report.Log(ReportLevel.Info, "Invoke Action", "Give Focus: Void\r\nInvoking Focus() on item 'ShipWorksSa.Void'.", repo.ShipWorksSa.VoidInfo, new RecordItemIndex(4));
            repo.ShipWorksSa.Void.Focus();
            Delay.Milliseconds(0);
            
            // Click: Void
            Report.Log(ReportLevel.Info, "Mouse", "Click: Void\r\nMouse Left Click item 'ShipWorksSa.Void' at Center.", repo.ShipWorksSa.VoidInfo, new RecordItemIndex(5));
            repo.ShipWorksSa.Void.Click();
            Delay.Milliseconds(200);
            
            // Click "Yes" on the "Void all of the selected shipments" message
            Report.Log(ReportLevel.Info, "Mouse", "Click \"Yes\" on the \"Void all of the selected shipments\" message\r\nMouse Left Click item 'ShipmentVoidConfirmDlg.ButtonOk' at Center.", repo.ShipmentVoidConfirmDlg.ButtonOkInfo, new RecordItemIndex(6));
            repo.ShipmentVoidConfirmDlg.ButtonOk.Click();
            Delay.Milliseconds(200);
            
            // Wait for the "Voiding" modal to disappear (for up to 1 minute)
            Report.Log(ReportLevel.Info, "Wait", "Wait for the \"Voiding\" modal to disappear (for up to 1 minute)\r\nWaiting 1m for item 'ProcessingShipments.VoidingShipments' to not exist.", repo.ProcessingShipments.VoidingShipmentsInfo, new ActionTimeout(60000), new RecordItemIndex(7));
            repo.ProcessingShipments.VoidingShipmentsInfo.WaitForNotExists(60000);
            
            // Delay 500ms
            Report.Log(ReportLevel.Info, "Delay", "Delay 500ms\r\nWaiting for 500ms.", new RecordItemIndex(8));
            Delay.Duration(500, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
