///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PerformanceTesting
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Load1000Shipments recording.
    /// </summary>
    [TestModule("0753815c-33c8-45a3-ba80-d43599dd28b5", ModuleType.Recording, 1)]
    public partial class Load1000Shipments : ITestModule
    {
        /// <summary>
        /// Holds an instance of the PerformanceTestingRepository repository.
        /// </summary>
        public static PerformanceTestingRepository repo = PerformanceTestingRepository.Instance;

        static Load1000Shipments instance = new Load1000Shipments();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Load1000Shipments()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Load1000Shipments Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 1000;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Cursor Moves to the 1st row in the Orders All Section
            Report.Log(ReportLevel.Info, "Mouse", "Cursor Moves to the 1st row in the Orders All Section\r\nMouse Left Move item 'MainForm.RawText917670981' at Center.", repo.MainForm.RawText917670981Info, new RecordItemIndex(0));
            repo.MainForm.RawText917670981.MoveTo();
            Delay.Milliseconds(0);
            
            // Click on the 1st Order # listed
            Report.Log(ReportLevel.Info, "Mouse", "Click on the 1st Order # listed\r\nMouse Left Click item 'MainForm.RawText917670981' at Center.", repo.MainForm.RawText917670981Info, new RecordItemIndex(1));
            repo.MainForm.RawText917670981.Click();
            Delay.Milliseconds(0);
            
            // Ctrl + A  to select All Orders
            Report.Log(ReportLevel.Info, "Keyboard", "Ctrl + A  to select All Orders\r\nKey 'Ctrl+A' Press with focus on 'MainForm.RawText917670981'.", repo.MainForm.RawText917670981Info, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.MainForm.RawText917670981);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Cursor slightly moves - All Orders are Hightlighted
            Report.Log(ReportLevel.Info, "Mouse", "Cursor slightly moves - All Orders are Hightlighted\r\nMouse Left Move item 'MainForm.RawText917670981' at Center.", repo.MainForm.RawText917670981Info, new RecordItemIndex(3));
            repo.MainForm.RawText917670981.MoveTo();
            Delay.Milliseconds(0);
            
            // Right Click
            Report.Log(ReportLevel.Info, "Mouse", "Right Click\r\nMouse Right Click item 'MainForm.RawText917670981' at Center.", repo.MainForm.RawText917670981Info, new RecordItemIndex(4));
            repo.MainForm.RawText917670981.Click(System.Windows.Forms.MouseButtons.Right);
            Delay.Milliseconds(0);
            
            // Menu Appears
            Report.Log(ReportLevel.Info, "Mouse", "Menu Appears\r\nMouse Left Move item 'ContextMenuOrderGrid.ShipOrders' at Center.", repo.ContextMenuOrderGrid.ShipOrdersInfo, new RecordItemIndex(5));
            repo.ContextMenuOrderGrid.ShipOrders.MoveTo();
            Delay.Milliseconds(0);
            
            // Click on Ship Orders
            Report.Log(ReportLevel.Info, "Mouse", "Click on Ship Orders\r\nMouse Left Click item 'ContextMenuOrderGrid.ShipOrders' at Center.", repo.ContextMenuOrderGrid.ShipOrdersInfo, new RecordItemIndex(6));
            repo.ContextMenuOrderGrid.ShipOrders.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "Start 2", new RecordItemIndex(7));
            
            getStartTime();
            Delay.Milliseconds(0);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 5m to exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(300000), new RecordItemIndex(9));
            repo.ProgressDlg.SelfInfo.WaitForExists(300000);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 15m to not exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(900000), new RecordItemIndex(10));
            repo.ProgressDlg.SelfInfo.WaitForNotExists(900000);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 10m to exist. Associated repository item: 'ShippingDlg'", repo.ShippingDlg.SelfInfo, new ActionTimeout(600000), new RecordItemIndex(11));
            repo.ShippingDlg.SelfInfo.WaitForExists(600000);
            
            Report.Log(ReportLevel.Info, "User", "End 2", new RecordItemIndex(12));
            
            getEndTime();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
