///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace PerformanceTesting
{
    public partial class Void1000Shipments
    {
    	string starttime;
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

 		public void getStartTime()  
              
        {     
            Report.Log(ReportLevel.Info,"Start");  
            System.DateTime start = System.DateTime.Now;                
            starttime = start.ToString();  
             
        }  
        
    	public void getEndTime()  
    		
        {  
            System.DateTime end = System.DateTime.Now;    
              
            System.DateTime start = Convert.ToDateTime(starttime);  
              
            TimeSpan duration = end - start;  
            DurationResults.AddDuration(duration);
          //  string s = "Step 9: " + duration.Minutes.ToString()+":"+duration.Seconds.ToString()+"."+duration.Milliseconds.ToString() + "\r\n";  
          //  Report.Log(ReportLevel.Info,duration.Minutes.ToString()+":"+duration.Seconds.ToString()+"."+duration.Milliseconds.ToString());  
              
          //  System.IO.File.AppendAllText(@"C:\Users\jeman.INTERAPPTIVE\Documents\test.txt", s);

    	}
    	
    	public void getStartTime2()  
              
        {     
            Report.Log(ReportLevel.Info,"Start");  
            System.DateTime start = System.DateTime.Now;                
            starttime = start.ToString();  
             
        }  
        
    	public void getEndTime2()  
    		
        {  
            System.DateTime end = System.DateTime.Now;    
              
            System.DateTime start = Convert.ToDateTime(starttime);  
              
            TimeSpan duration = end - start;  
            DurationResults.AddDuration(duration);
          //  string s = "Step 10: " + duration.Minutes.ToString()+":"+duration.Seconds.ToString()+"."+duration.Milliseconds.ToString() + "\r\n\r\n\r\n";  
          //  Report.Log(ReportLevel.Info,duration.Minutes.ToString()+":"+duration.Seconds.ToString()+"."+duration.Milliseconds.ToString());  
              
          //  System.IO.File.AppendAllText(@"C:\Users\jeman.INTERAPPTIVE\Documents\test.txt", s);

    	}
    	

    }
}