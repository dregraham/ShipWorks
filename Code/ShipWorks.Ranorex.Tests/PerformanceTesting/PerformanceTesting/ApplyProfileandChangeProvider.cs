///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PerformanceTesting
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ApplyProfileandChangeProvider recording.
    /// </summary>
    [TestModule("ff8e6197-6e9a-4418-95f4-69464970539d", ModuleType.Recording, 1)]
    public partial class ApplyProfileandChangeProvider : ITestModule
    {
        /// <summary>
        /// Holds an instance of the PerformanceTestingRepository repository.
        /// </summary>
        public static PerformanceTestingRepository repo = PerformanceTestingRepository.Instance;

        static ApplyProfileandChangeProvider instance = new ApplyProfileandChangeProvider();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ApplyProfileandChangeProvider()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ApplyProfileandChangeProvider Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 1000;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Cursor moves to the Shipments Panel
            Report.Log(ReportLevel.Info, "Mouse", "Cursor moves to the Shipments Panel\r\nMouse Left Move item 'ShippingDlg.SplitContainer.RawText1Of1' at Center.", repo.ShippingDlg.SplitContainer.RawText1Of1Info, new RecordItemIndex(0));
            repo.ShippingDlg.SplitContainer.RawText1Of1.MoveTo();
            Delay.Milliseconds(0);
            
            // Click inside the Shipment Grid
            Report.Log(ReportLevel.Info, "Mouse", "Click inside the Shipment Grid\r\nMouse Left Click item 'ShippingDlg.SplitContainer.RawText1Of1' at Center.", repo.ShippingDlg.SplitContainer.RawText1Of1Info, new RecordItemIndex(1));
            repo.ShippingDlg.SplitContainer.RawText1Of1.Click();
            Delay.Milliseconds(0);
            
            // Ctrl+A - All orders are selected
            Report.Log(ReportLevel.Info, "Keyboard", "Ctrl+A - All orders are selected\r\nKey 'Ctrl+A' Press with focus on 'ShippingDlg.SplitContainer.EntityGrid'.", repo.ShippingDlg.SplitContainer.EntityGridInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.ShippingDlg.SplitContainer.EntityGrid);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 5s to exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(3));
            repo.ProgressDlg.SelfInfo.WaitForExists(5000);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 15m to not exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(900000), new RecordItemIndex(4));
            repo.ProgressDlg.SelfInfo.WaitForNotExists(900000);
            
            // Check for Text in the Carrier Name field
            Report.Log(ReportLevel.Info, "Validation", "Check for Text in the Carrier Name field\r\nValidating AttributeEqual (Text='') on item 'ShippingDlg.SplitContainer.CarrierName'.", repo.ShippingDlg.SplitContainer.CarrierNameInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ShippingDlg.SplitContainer.CarrierNameInfo, "Text", "");
            Delay.Milliseconds(100);
            
            // Cursor moves right to the Apply Profile Button
            Report.Log(ReportLevel.Info, "Mouse", "Cursor moves right to the Apply Profile Button\r\nMouse Left Move item 'ShippingDlg.ApplyProfile' at Center.", repo.ShippingDlg.ApplyProfileInfo, new RecordItemIndex(6));
            repo.ShippingDlg.ApplyProfile.MoveTo();
            Delay.Milliseconds(0);
            
            // Click the Apply Profile Button
            Report.Log(ReportLevel.Info, "Mouse", "Click the Apply Profile Button\r\nMouse Left Click item 'ShippingDlg.ApplyProfile' at Center.", repo.ShippingDlg.ApplyProfileInfo, new RecordItemIndex(7));
            repo.ShippingDlg.ApplyProfile.Click();
            Delay.Milliseconds(0);
            
            // Cursor moves to Default - Other from the Menu
            Report.Log(ReportLevel.Info, "Mouse", "Cursor moves to Default - Other from the Menu\r\nMouse Left Move item 'ContextMenuPrint.DefaultsOther' at Center.", repo.ContextMenuPrint.DefaultsOtherInfo, new RecordItemIndex(8));
            repo.ContextMenuPrint.DefaultsOther.MoveTo();
            Delay.Milliseconds(0);
            
            // Click on Default - Other from the Menu
            Report.Log(ReportLevel.Info, "Mouse", "Click on Default - Other from the Menu\r\nMouse Left Click item 'ContextMenuPrint.DefaultsOther' at Center.", repo.ContextMenuPrint.DefaultsOtherInfo, new RecordItemIndex(9));
            repo.ContextMenuPrint.DefaultsOther.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "Start 5", new RecordItemIndex(10));
            
            getStartTime();
            Delay.Milliseconds(0);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 5s to exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(12));
            repo.ProgressDlg.SelfInfo.WaitForExists(5000);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 15m to not exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(900000), new RecordItemIndex(13));
            repo.ProgressDlg.SelfInfo.WaitForNotExists(900000);
            
            // Validate Text in the Carrier Name field for Provider Other
            Report.Log(ReportLevel.Info, "Validation", "Validate Text in the Carrier Name field for Provider Other\r\nValidating AttributeEqual (Text='') on item 'ShippingDlg.SplitContainer.Carrier'.", repo.ShippingDlg.SplitContainer.CarrierInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.ShippingDlg.SplitContainer.CarrierInfo, "Text", "");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", "End 5", new RecordItemIndex(15));
            
            getEndTime();
            Delay.Milliseconds(0);
            
            // Cursor moves to the Provider Dropdown Menu
            Report.Log(ReportLevel.Info, "Mouse", "Cursor moves to the Provider Dropdown Menu\r\nMouse Left Move item 'ShippingDlg.SplitContainer.ComboShipmentType' at Center.", repo.ShippingDlg.SplitContainer.ComboShipmentTypeInfo, new RecordItemIndex(17));
            repo.ShippingDlg.SplitContainer.ComboShipmentType.MoveTo();
            Delay.Milliseconds(0);
            
            // Click on the Provider Dropdown Menu
            Report.Log(ReportLevel.Info, "Mouse", "Click on the Provider Dropdown Menu\r\nMouse Left Click item 'ShippingDlg.SplitContainer.ComboShipmentType' at Center.", repo.ShippingDlg.SplitContainer.ComboShipmentTypeInfo, new RecordItemIndex(18));
            repo.ShippingDlg.SplitContainer.ComboShipmentType.Click();
            Delay.Milliseconds(0);
            
            // Cursor moves to USPS
            Report.Log(ReportLevel.Info, "Mouse", "Cursor moves to USPS\r\nMouse Left Move item 'List1000.USPS' at Center.", repo.List1000.USPSInfo, new RecordItemIndex(19));
            repo.List1000.USPS.MoveTo();
            Delay.Milliseconds(0);
            
            // Click on USPS
            Report.Log(ReportLevel.Info, "Mouse", "Click on USPS\r\nMouse Left Click item 'List1000.USPS' at Center.", repo.List1000.USPSInfo, new RecordItemIndex(20));
            repo.List1000.USPS.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "Start 6", new RecordItemIndex(21));
            
            getStartTime2();
            Delay.Milliseconds(0);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 5s to exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(23));
            repo.ProgressDlg.SelfInfo.WaitForExists(5000);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 15m to not exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(900000), new RecordItemIndex(24));
            repo.ProgressDlg.SelfInfo.WaitForNotExists(900000);
            
            // Validate Packaging (dropdown menu) = Package
            Report.Log(ReportLevel.Info, "Validation", "Validate Packaging (dropdown menu) = Package\r\nValidating AttributeEqual (Text='Package') on item 'ShippingDlg.SplitContainer.PackagingType'.", repo.ShippingDlg.SplitContainer.PackagingTypeInfo, new RecordItemIndex(25));
            Validate.AttributeEqual(repo.ShippingDlg.SplitContainer.PackagingTypeInfo, "Text", "Package");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", "End 6", new RecordItemIndex(26));
            
            getEndTime2();
            Delay.Milliseconds(0);
            
            // Cursor moves the Provider dropdown menu
            Report.Log(ReportLevel.Info, "Mouse", "Cursor moves the Provider dropdown menu\r\nMouse Left Move item 'ShippingDlg.SplitContainer.ComboShipmentType' at Center.", repo.ShippingDlg.SplitContainer.ComboShipmentTypeInfo, new RecordItemIndex(28));
            repo.ShippingDlg.SplitContainer.ComboShipmentType.MoveTo();
            Delay.Milliseconds(0);
            
            // Click on the Dropdown Menu
            Report.Log(ReportLevel.Info, "Mouse", "Click on the Dropdown Menu\r\nMouse Left Click item 'ShippingDlg.SplitContainer.ComboShipmentType' at Center.", repo.ShippingDlg.SplitContainer.ComboShipmentTypeInfo, new RecordItemIndex(29));
            repo.ShippingDlg.SplitContainer.ComboShipmentType.Click();
            Delay.Milliseconds(0);
            
            // Select Other
            Report.Log(ReportLevel.Info, "Mouse", "Select Other\r\nMouse Left Click item 'List1000.Other' at Center.", repo.List1000.OtherInfo, new RecordItemIndex(30));
            repo.List1000.Other.Click();
            Delay.Milliseconds(0);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 5s to exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(31));
            repo.ProgressDlg.SelfInfo.WaitForExists(5000);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 15m to not exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(900000), new RecordItemIndex(32));
            repo.ProgressDlg.SelfInfo.WaitForNotExists(900000);
            
            // Validate Carrier Name
            Report.Log(ReportLevel.Info, "Validation", "Validate Carrier Name\r\nValidating AttributeEqual (Text='') on item 'ShippingDlg.SplitContainer.Carrier'.", repo.ShippingDlg.SplitContainer.CarrierInfo, new RecordItemIndex(33));
            Validate.AttributeEqual(repo.ShippingDlg.SplitContainer.CarrierInfo, "Text", "");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
