///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ShippingCarrierRegression
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ProcessVoidShipment_Validate_CloseShipOrders2 recording.
    /// </summary>
    [TestModule("950edd48-ef04-4963-a4d0-2cfd48457248", ModuleType.Recording, 1)]
    public partial class ProcessVoidShipment_Validate_CloseShipOrders2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SmokeTest.SmokeTestRepository repository.
        /// </summary>
        public static SmokeTest.SmokeTestRepository repo = SmokeTest.SmokeTestRepository.Instance;

        static ProcessVoidShipment_Validate_CloseShipOrders2 instance = new ProcessVoidShipment_Validate_CloseShipOrders2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ProcessVoidShipment_Validate_CloseShipOrders2()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ProcessVoidShipment_Validate_CloseShipOrders2 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Move fix
            Report.Log(ReportLevel.Info, "Mouse", "Move fix\r\nMouse Left Move item 'ShippingDlg.CreateLabel' at Center.", repo.ShippingDlg.CreateLabelInfo, new RecordItemIndex(0));
            repo.ShippingDlg.CreateLabel.MoveTo(1000);
            Delay.Milliseconds(0);
            
            // Click "Create Label"
            Report.Log(ReportLevel.Info, "Mouse", "Click \"Create Label\"\r\nMouse Left Click item 'ShippingDlg.CreateLabel' at Center.", repo.ShippingDlg.CreateLabelInfo, new RecordItemIndex(1));
            repo.ShippingDlg.CreateLabel.Click();
            Delay.Milliseconds(200);
            
            // Move fix
            Report.Log(ReportLevel.Info, "Mouse", "Move fix\r\nMouse Left Move item 'ProcessingShipments.ProcessingShipments' at Center.", repo.ProcessingShipments.ProcessingShipmentsInfo, new RecordItemIndex(2));
            repo.ProcessingShipments.ProcessingShipments.MoveTo(1000);
            Delay.Milliseconds(0);
            
            // Wait for the "Processing" modal to disappear (for up to 1 minute)
            Report.Log(ReportLevel.Info, "Wait", "Wait for the \"Processing\" modal to disappear (for up to 1 minute)\r\nWaiting 1m for item 'ProcessingShipments.ProcessingShipments' to not exist.", repo.ProcessingShipments.ProcessingShipmentsInfo, new ActionTimeout(60000), new RecordItemIndex(3));
            repo.ProcessingShipments.ProcessingShipmentsInfo.WaitForNotExists(60000);
            
            // Move fix
            Report.Log(ReportLevel.Info, "Mouse", "Move fix\r\nMouse Left Move item 'ShippingDlg.VoidSelected' at Center.", repo.ShippingDlg.VoidSelectedInfo, new RecordItemIndex(4));
            repo.ShippingDlg.VoidSelected.MoveTo(1000);
            Delay.Milliseconds(0);
            
            // Click "Void"
            Report.Log(ReportLevel.Info, "Mouse", "Click \"Void\"\r\nMouse Left Click item 'ShippingDlg.VoidSelected' at Center.", repo.ShippingDlg.VoidSelectedInfo, new RecordItemIndex(5));
            repo.ShippingDlg.VoidSelected.Click();
            Delay.Milliseconds(200);
            
            // Move fix
            Report.Log(ReportLevel.Info, "Mouse", "Move fix\r\nMouse Left Move item 'ShipmentVoidConfirmDlg.ButtonOk' at Center.", repo.ShipmentVoidConfirmDlg.ButtonOkInfo, new RecordItemIndex(6));
            repo.ShipmentVoidConfirmDlg.ButtonOk.MoveTo(1000);
            Delay.Milliseconds(0);
            
            // Click "Yes" on the "Void all of the selected shipments" message
            Report.Log(ReportLevel.Info, "Mouse", "Click \"Yes\" on the \"Void all of the selected shipments\" message\r\nMouse Left Click item 'ShipmentVoidConfirmDlg.ButtonOk' at Center.", repo.ShipmentVoidConfirmDlg.ButtonOkInfo, new RecordItemIndex(7));
            repo.ShipmentVoidConfirmDlg.ButtonOk.Click();
            Delay.Milliseconds(200);
            
            // Wait for the "Voiding" modal to disappear (for up to 1 minute)
            Report.Log(ReportLevel.Info, "Wait", "Wait for the \"Voiding\" modal to disappear (for up to 1 minute)\r\nWaiting 1m for item 'ProcessingShipments.VoidingShipments' to not exist.", repo.ProcessingShipments.VoidingShipmentsInfo, new ActionTimeout(60000), new RecordItemIndex(8));
            repo.ProcessingShipments.VoidingShipmentsInfo.WaitForNotExists(60000);
            
            // Move fix
            Report.Log(ReportLevel.Info, "Mouse", "Move fix\r\nMouse Left Move item 'ShippingDlg.Close' at Center.", repo.ShippingDlg.CloseInfo, new RecordItemIndex(9));
            repo.ShippingDlg.Close.MoveTo(1000);
            Delay.Milliseconds(0);
            
            // Close out of the Ship Orders UI
            Report.Log(ReportLevel.Info, "Mouse", "Close out of the Ship Orders UI\r\nMouse Left Click item 'ShippingDlg.Close' at Center.", repo.ShippingDlg.CloseInfo, new RecordItemIndex(10));
            repo.ShippingDlg.Close.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
