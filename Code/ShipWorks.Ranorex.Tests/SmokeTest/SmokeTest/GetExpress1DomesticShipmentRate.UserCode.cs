///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace SmokeTest
{
    public partial class GetExpress1DomesticShipmentRate
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        private void CheckPostageBalance()
        {        	
        	float ExpOneShipmentRateFloat = float.Parse(ExpOneShipmentRate.Remove(0,1));
        	float ExpOneAvailablePostageFloat = float.Parse(ExpOneAvailablePostage.Remove(0,1));
        	
        	if (ExpOneShipmentRateFloat>ExpOneAvailablePostageFloat)
        	{        		  
	            repo.ShippingDlg.Close.MoveTo();
	            Delay.Milliseconds(200);	            
	            
	            repo.ShippingDlg.Close.Click();
	            Delay.Milliseconds(200);
	            
	            TestSuite.Current.GetTestContainer("ProcessVoidExpress1DomesticShipment").Checked = false;
        	}
        }

        public void Get_value_Express1PostageBalance50(RepoItemInfo rawtextInfo)
        {
            Report.Log(ReportLevel.Info, "Get Value", "Get the postage value and store it in a variable\r\nGetting attribute 'RawText' from item 'rawtextInfo' and assigning its value to variable 'ExpOnePostage'.", rawtextInfo);
            ExpOneShipmentRate = rawtextInfo.FindAdapter<RawText>().Element.GetAttributeValueText("RawText");
        }

        public void Get_value_Express1PostageBalance501(RepoItemInfo rawtextInfo)
        {
            Report.Log(ReportLevel.Info, "Get Value", "Get the postage value and store it in a variable\r\nGetting attribute 'RawText' from item 'rawtextInfo' and assigning its value to variable 'ExpOnePostage'.", rawtextInfo);
            ExpOneShipmentRate = rawtextInfo.FindAdapter<RawText>().Element.GetAttributeValueText("RawText");
        }
    }
}
