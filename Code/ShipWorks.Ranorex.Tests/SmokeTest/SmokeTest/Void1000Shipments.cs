///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SmokeTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Void1000Shipments recording.
    /// </summary>
    [TestModule("d26f30cc-af7e-49f3-a2e4-4d4810071c7d", ModuleType.Recording, 1)]
    public partial class Void1000Shipments : ITestModule
    {
        /// <summary>
        /// Holds an instance of the PerformanceTestingRepository repository.
        /// </summary>
        public static PerformanceTestingRepository repo = PerformanceTestingRepository.Instance;

        static Void1000Shipments instance = new Void1000Shipments();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Void1000Shipments()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Void1000Shipments Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Cursor moves to the Shipments Panel
            Report.Log(ReportLevel.Info, "Mouse", "Cursor moves to the Shipments Panel\r\nMouse Left Move item 'ShippingDlg.SplitContainer.AduroRot' at Center.", repo.ShippingDlg.SplitContainer.AduroRotInfo, new RecordItemIndex(0));
            repo.ShippingDlg.SplitContainer.AduroRot.MoveTo(1000);
            Delay.Milliseconds(0);
            
            // Click inside the Shipments Grid
            Report.Log(ReportLevel.Info, "Mouse", "Click inside the Shipments Grid\r\nMouse Left Click item 'ShippingDlg.SplitContainer.AduroRot' at Center.", repo.ShippingDlg.SplitContainer.AduroRotInfo, new RecordItemIndex(1));
            repo.ShippingDlg.SplitContainer.AduroRot.Click(1000);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ShippingDlg.SplitContainer.EntityGrid' at Center.", repo.ShippingDlg.SplitContainer.EntityGridInfo, new RecordItemIndex(2));
            repo.ShippingDlg.SplitContainer.EntityGrid.MoveTo(1000);
            Delay.Milliseconds(0);
            
            // Ctrl+A  to select All inside the Grid
            Report.Log(ReportLevel.Info, "Keyboard", "Ctrl+A  to select All inside the Grid\r\nKey 'Ctrl+A' Press with focus on 'ShippingDlg.SplitContainer.EntityGrid'.", repo.ShippingDlg.SplitContainer.EntityGridInfo, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.ShippingDlg.SplitContainer.EntityGrid);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Preparing Shipments
            //Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 5s to exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(4));
            //repo.ProgressDlg.SelfInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            // Preparing Shipments
            Report.Log(ReportLevel.Info, "Wait", "Preparing Shipments\r\nWaiting 15m to not exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(900000), new RecordItemIndex(6));
            repo.ProgressDlg.SelfInfo.WaitForNotExists(900000);
            
            // Cursor moves to the Void Labels Button
            Report.Log(ReportLevel.Info, "Mouse", "Cursor moves to the Void Labels Button\r\nMouse Left Move item 'ShippingDlg.VoidLabels' at Center.", repo.ShippingDlg.VoidLabelsInfo, new RecordItemIndex(7));
            repo.ShippingDlg.VoidLabels.MoveTo(1000);
            Delay.Milliseconds(0);
            
            // Click Void Labels
            Report.Log(ReportLevel.Info, "Mouse", "Click Void Labels\r\nMouse Left Click item 'ShippingDlg.VoidLabels' at Center.", repo.ShippingDlg.VoidLabelsInfo, new RecordItemIndex(8));
            repo.ShippingDlg.VoidLabels.Click(1000);
            Delay.Milliseconds(0);
            
            // Delay 1 sec
            Report.Log(ReportLevel.Info, "Delay", "Delay 1 sec\r\nWaiting for 1s.", new RecordItemIndex(9));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Space}'.", new RecordItemIndex(10));
            Keyboard.Press("{Space}");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'SomeForm.RawTextOK' at Center.", repo.SomeForm.RawTextOKInfo, new RecordItemIndex(11));
            //repo.SomeForm.RawTextOK.MoveTo(1000);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SomeForm.RawTextOK' at Center.", repo.SomeForm.RawTextOKInfo, new RecordItemIndex(12));
            //repo.SomeForm.RawTextOK.Click(1000);
            //Delay.Milliseconds(0);
            
            // Preparing
            Report.Log(ReportLevel.Info, "Wait", "Preparing\r\nWaiting 5s to exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(13));
            repo.ProgressDlg.SelfInfo.WaitForExists(5000);
            
            // Preparing
            Report.Log(ReportLevel.Info, "Wait", "Preparing\r\nWaiting 15m to not exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(900000), new RecordItemIndex(14));
            repo.ProgressDlg.SelfInfo.WaitForNotExists(900000);
            
            // Preparing
            Report.Log(ReportLevel.Info, "Wait", "Preparing\r\nWaiting 5s to exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(15));
            repo.ProgressDlg.SelfInfo.WaitForExists(5000);
            
            // Preparing
            Report.Log(ReportLevel.Info, "Wait", "Preparing\r\nWaiting 15m to not exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(900000), new RecordItemIndex(16));
            repo.ProgressDlg.SelfInfo.WaitForNotExists(900000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Close') on item 'ShippingDlg.Close'.", repo.ShippingDlg.CloseInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.ShippingDlg.CloseInfo, "Text", "Close");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ShippingDlg.Close' at Center.", repo.ShippingDlg.CloseInfo, new RecordItemIndex(18));
            repo.ShippingDlg.Close.MoveTo(1000);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ShippingDlg.Close' at Center.", repo.ShippingDlg.CloseInfo, new RecordItemIndex(19));
            repo.ShippingDlg.Close.Click(1000);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (RawText='(1,000)') on item 'MainForm.RawText1000'.", repo.MainForm.RawText1000Info, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.MainForm.RawText1000Info, "RawText", "(1,000)");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
