///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SmokeTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ShipOrders_FromAddress_OnTracDomestic recording.
    /// </summary>
    [TestModule("4ab70701-f650-43c1-96e4-91f74e1466a2", ModuleType.Recording, 1)]
    public partial class ShipOrders_FromAddress_OnTracDomestic : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SmokeTestRepository repository.
        /// </summary>
        public static SmokeTestRepository repo = SmokeTestRepository.Instance;

        static ShipOrders_FromAddress_OnTracDomestic instance = new ShipOrders_FromAddress_OnTracDomestic();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ShipOrders_FromAddress_OnTracDomestic()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ShipOrders_FromAddress_OnTracDomestic Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 1000;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Focus on Origin Combo box
            Report.Log(ReportLevel.Info, "Invoke action", "Focus on Origin Combo box\r\nInvoking Focus() on item 'ShipOrders1.SplitContainer.OriginCombo'.", repo.ShipOrders1.SplitContainer.OriginComboInfo, new RecordItemIndex(0));
            repo.ShipOrders1.SplitContainer.OriginCombo.Focus();
            Delay.Milliseconds(0);
            
            // Mouse Move to avoid click inconsistency
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Move to avoid click inconsistency\r\nMouse Left Move item 'ShipOrders1.SplitContainer.OriginCombo' at Center.", repo.ShipOrders1.SplitContainer.OriginComboInfo, new RecordItemIndex(1));
            repo.ShipOrders1.SplitContainer.OriginCombo.MoveTo(300);
            Delay.Milliseconds(200);
            
            // Change value of Origin Combo box to Account Address
            Report.Log(ReportLevel.Info, "Set value", "Change value of Origin Combo box to Account Address\r\nSetting attribute SelectedItemText to 'Account Address' on item 'ShipOrders1.SplitContainer.OriginCombo'.", repo.ShipOrders1.SplitContainer.OriginComboInfo, new RecordItemIndex(2));
            repo.ShipOrders1.SplitContainer.OriginCombo.Element.SetAttributeValue("SelectedItemText", "Account Address");
            Delay.Milliseconds(0);
            
            // Give Focus: Full Name
            Report.Log(ReportLevel.Info, "Invoke action", "Give Focus: Full Name\r\nInvoking Focus() on item 'ShipOrders1.SplitContainer.FullName'.", repo.ShipOrders1.SplitContainer.FullNameInfo, new RecordItemIndex(3));
            repo.ShipOrders1.SplitContainer.FullName.Focus();
            Delay.Milliseconds(0);
            
            // Mouse Move to avoid click inconsistency
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Move to avoid click inconsistency\r\nMouse Left Move item 'ShipOrders1.SplitContainer.FullName' at Center.", repo.ShipOrders1.SplitContainer.FullNameInfo, new RecordItemIndex(4));
            repo.ShipOrders1.SplitContainer.FullName.MoveTo(300);
            Delay.Milliseconds(200);
            
            // Set Full Name: Full Name
            Report.Log(ReportLevel.Info, "Keyboard", "Set Full Name: Full Name\r\nKey sequence 'Full Name' with focus on 'ShipOrders1.SplitContainer.FullName'.", repo.ShipOrders1.SplitContainer.FullNameInfo, new RecordItemIndex(5));
            repo.ShipOrders1.SplitContainer.FullName.PressKeys("Full Name");
            Delay.Milliseconds(0);
            
            // Give Focus: Street
            Report.Log(ReportLevel.Info, "Invoke action", "Give Focus: Street\r\nInvoking Focus() on item 'ShipOrders1.SplitContainer.Company'.", repo.ShipOrders1.SplitContainer.CompanyInfo, new RecordItemIndex(6));
            repo.ShipOrders1.SplitContainer.Company.Focus();
            Delay.Milliseconds(0);
            
            // Mouse Move to avoid click inconsistency
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Move to avoid click inconsistency\r\nMouse Left Move item 'ShipOrders1.SplitContainer.Company' at Center.", repo.ShipOrders1.SplitContainer.CompanyInfo, new RecordItemIndex(7));
            repo.ShipOrders1.SplitContainer.Company.MoveTo(300);
            Delay.Milliseconds(200);
            
            // Set Company: Company Name
            Report.Log(ReportLevel.Info, "Keyboard", "Set Company: Company Name\r\nKey sequence 'Company Name' with focus on 'ShipOrders1.SplitContainer.Company'.", repo.ShipOrders1.SplitContainer.CompanyInfo, new RecordItemIndex(8));
            repo.ShipOrders1.SplitContainer.Company.PressKeys("Company Name");
            Delay.Milliseconds(0);
            
            // Focus on Street field
            Report.Log(ReportLevel.Info, "Invoke action", "Focus on Street field\r\nInvoking Focus() on item 'ShipOrders1.SplitContainer.Street'.", repo.ShipOrders1.SplitContainer.StreetInfo, new RecordItemIndex(9));
            repo.ShipOrders1.SplitContainer.Street.Focus();
            Delay.Milliseconds(0);
            
            // Mouse Move to avoid click inconsistency
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Move to avoid click inconsistency\r\nMouse Left Move item 'ShipOrders1.SplitContainer.Street' at Center.", repo.ShipOrders1.SplitContainer.StreetInfo, new RecordItemIndex(10));
            repo.ShipOrders1.SplitContainer.Street.MoveTo(300);
            Delay.Milliseconds(200);
            
            // Set Street: 1 Memorial Dr{Return}Suite 2000
            Report.Log(ReportLevel.Info, "Keyboard", "Set Street: 1 Memorial Dr{Return}Suite 2000\r\nKey sequence '1041 Admiral Callaghan Ln' with focus on 'ShipOrders1.SplitContainer.Street'.", repo.ShipOrders1.SplitContainer.StreetInfo, new RecordItemIndex(11));
            repo.ShipOrders1.SplitContainer.Street.PressKeys("1041 Admiral Callaghan Ln");
            Delay.Milliseconds(0);
            
            // Give Focus: City
            Report.Log(ReportLevel.Info, "Invoke action", "Give Focus: City\r\nInvoking Focus() on item 'ShipOrders1.SplitContainer.City'.", repo.ShipOrders1.SplitContainer.CityInfo, new RecordItemIndex(12));
            repo.ShipOrders1.SplitContainer.City.Focus();
            Delay.Milliseconds(0);
            
            // Mouse Move to avoid click inconsistency
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Move to avoid click inconsistency\r\nMouse Left Move item 'ShipOrders1.SplitContainer.City' at Center.", repo.ShipOrders1.SplitContainer.CityInfo, new RecordItemIndex(13));
            repo.ShipOrders1.SplitContainer.City.MoveTo(300);
            Delay.Milliseconds(200);
            
            // Set City: Saint Louis
            Report.Log(ReportLevel.Info, "Keyboard", "Set City: Saint Louis\r\nKey sequence 'Vallejo' with focus on 'ShipOrders1.SplitContainer.City'.", repo.ShipOrders1.SplitContainer.CityInfo, new RecordItemIndex(14));
            repo.ShipOrders1.SplitContainer.City.PressKeys("Vallejo");
            Delay.Milliseconds(0);
            
            // Give Focus: State
            Report.Log(ReportLevel.Info, "Invoke action", "Give Focus: State\r\nInvoking Focus() on item 'ShipOrders1.SplitContainer.State'.", repo.ShipOrders1.SplitContainer.StateInfo, new RecordItemIndex(15));
            repo.ShipOrders1.SplitContainer.State.Focus();
            Delay.Milliseconds(0);
            
            // Mouse Move to avoid click inconsistency
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Move to avoid click inconsistency\r\nMouse Left Move item 'ShipOrders1.SplitContainer.State' at Center.", repo.ShipOrders1.SplitContainer.StateInfo, new RecordItemIndex(16));
            repo.ShipOrders1.SplitContainer.State.MoveTo(300);
            Delay.Milliseconds(200);
            
            // Select All: State/Province
            Report.Log(ReportLevel.Info, "Keyboard", "Select All: State/Province\r\nKey 'Ctrl+A' Press with focus on 'ShipOrders1.SplitContainer.State'.", repo.ShipOrders1.SplitContainer.StateInfo, new RecordItemIndex(17));
            Keyboard.PrepareFocus(repo.ShipOrders1.SplitContainer.State);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            // Set State: Missouri
            Report.Log(ReportLevel.Info, "Keyboard", "Set State: Missouri\r\nKey sequence 'CA' with focus on 'ShipOrders1.SplitContainer.State'.", repo.ShipOrders1.SplitContainer.StateInfo, new RecordItemIndex(18));
            repo.ShipOrders1.SplitContainer.State.PressKeys("CA");
            Delay.Milliseconds(0);
            
            // Give Focus: PostalCode
            Report.Log(ReportLevel.Info, "Invoke action", "Give Focus: PostalCode\r\nInvoking Focus() on item 'ShipOrders1.SplitContainer.PostalCode'.", repo.ShipOrders1.SplitContainer.PostalCodeInfo, new RecordItemIndex(19));
            repo.ShipOrders1.SplitContainer.PostalCode.Focus();
            Delay.Milliseconds(0);
            
            // Mouse Move to avoid click inconsistency
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Move to avoid click inconsistency\r\nMouse Left Move item 'ShipOrders1.SplitContainer.PostalCode' at Center.", repo.ShipOrders1.SplitContainer.PostalCodeInfo, new RecordItemIndex(20));
            repo.ShipOrders1.SplitContainer.PostalCode.MoveTo(300);
            Delay.Milliseconds(200);
            
            // Set PostalCode: 63102
            Report.Log(ReportLevel.Info, "Keyboard", "Set PostalCode: 63102\r\nKey sequence '94591' with focus on 'ShipOrders1.SplitContainer.PostalCode'.", repo.ShipOrders1.SplitContainer.PostalCodeInfo, new RecordItemIndex(21));
            repo.ShipOrders1.SplitContainer.PostalCode.PressKeys("94591");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
