///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SmokeTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The VoidAShipment recording.
    /// </summary>
    [TestModule("9e1509a8-d463-4537-84e6-f64ec819b98d", ModuleType.Recording, 1)]
    public partial class VoidAShipment : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SmokeTestRepository repository.
        /// </summary>
        public static SmokeTestRepository repo = SmokeTestRepository.Instance;

        static VoidAShipment instance = new VoidAShipment();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public VoidAShipment()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static VoidAShipment Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 1000;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Wait for Void Label to be enabled
            Report.Log(ReportLevel.Info, "Wait", "Wait for Void Label to be enabled\r\nWaiting 30s to exist. Associated repository item: 'ShippingDlg.VoidSelected'", repo.ShippingDlg.VoidSelectedInfo, new ActionTimeout(30000), new RecordItemIndex(0));
            repo.ShippingDlg.VoidSelectedInfo.WaitForExists(30000);
            
            // move mouse to void labels button
            Report.Log(ReportLevel.Info, "Mouse", "move mouse to void labels button\r\nMouse Left Move item 'ShippingDlg.VoidSelected' at Center.", repo.ShippingDlg.VoidSelectedInfo, new RecordItemIndex(1));
            repo.ShippingDlg.VoidSelected.MoveTo(300);
            Delay.Milliseconds(200);
            
            // click the void labels button
            Report.Log(ReportLevel.Info, "Mouse", "click the void labels button\r\nMouse Left Click item 'ShippingDlg.VoidSelected' at Center.", repo.ShippingDlg.VoidSelectedInfo, new RecordItemIndex(2));
            repo.ShippingDlg.VoidSelected.Click(300);
            Delay.Milliseconds(200);
            
            // move mouse to click the ok button to void shipments
            Report.Log(ReportLevel.Info, "Mouse", "move mouse to click the ok button to void shipments\r\nMouse Left Move item 'ShipmentVoidConfirmDlg.OKButton' at Center.", repo.ShipmentVoidConfirmDlg.OKButtonInfo, new RecordItemIndex(3));
            repo.ShipmentVoidConfirmDlg.OKButton.MoveTo(300);
            Delay.Milliseconds(200);
            
            // click the ok button to void shipments
            Report.Log(ReportLevel.Info, "Mouse", "click the ok button to void shipments\r\nMouse Left Click item 'ShipmentVoidConfirmDlg.OKButton' at Center.", repo.ShipmentVoidConfirmDlg.OKButtonInfo, new RecordItemIndex(4));
            repo.ShipmentVoidConfirmDlg.OKButton.Click(300);
            Delay.Milliseconds(200);
            
            // Wait for Voiding Shipments dialog to close
            Report.Log(ReportLevel.Info, "Wait", "Wait for Voiding Shipments dialog to close\r\nWaiting 10s to not exist. Associated repository item: 'ProcessingShipments.VoidingShipments'", repo.ProcessingShipments.VoidingShipmentsInfo, new ActionTimeout(10000), new RecordItemIndex(5));
            repo.ProcessingShipments.VoidingShipmentsInfo.WaitForNotExists(10000);
            
            // wait for 10s
            Report.Log(ReportLevel.Info, "Delay", "wait for 10s\r\nWaiting for 10s.", new RecordItemIndex(6));
            Delay.Duration(10000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
