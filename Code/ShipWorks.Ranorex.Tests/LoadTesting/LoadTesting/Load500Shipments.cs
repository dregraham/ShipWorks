///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace LoadTesting
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Load500Shipments recording.
    /// </summary>
    [TestModule("e1e46793-fd57-42c5-a19c-1a4c37aad05b", ModuleType.Recording, 1)]
    public partial class Load500Shipments : ITestModule
    {
        /// <summary>
        /// Holds an instance of the LoadTestingRepository repository.
        /// </summary>
        public static LoadTestingRepository repo = LoadTestingRepository.Instance;

        static Load500Shipments instance = new Load500Shipments();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Load500Shipments()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Load500Shipments Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 1000;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            SelectNamedFilter();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'MainForm.FirstOrder' at Center.", repo.MainForm.FirstOrderInfo, new RecordItemIndex(1));
            repo.MainForm.FirstOrder.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainForm.FirstOrder' at Center.", repo.MainForm.FirstOrderInfo, new RecordItemIndex(2));
            repo.MainForm.FirstOrder.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'MainForm.FirstOrder'.", repo.MainForm.FirstOrderInfo, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.MainForm.FirstOrder);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'MainForm.FirstOrder' at Center.", repo.MainForm.FirstOrderInfo, new RecordItemIndex(4));
            repo.MainForm.FirstOrder.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Right Click item 'MainForm.FirstOrder' at Center.", repo.MainForm.FirstOrderInfo, new RecordItemIndex(5));
            repo.MainForm.FirstOrder.Click(System.Windows.Forms.MouseButtons.Right);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ContextMenuOrderGrid.ShipOrders' at Center.", repo.ContextMenuOrderGrid.ShipOrdersInfo, new RecordItemIndex(6));
            repo.ContextMenuOrderGrid.ShipOrders.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ContextMenuOrderGrid.ShipOrders' at Center.", repo.ContextMenuOrderGrid.ShipOrdersInfo, new RecordItemIndex(7));
            repo.ContextMenuOrderGrid.ShipOrders.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(8));
            repo.ProgressDlg.SelfInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 15m to not exist. Associated repository item: 'ProgressDlg'", repo.ProgressDlg.SelfInfo, new ActionTimeout(900000), new RecordItemIndex(9));
            repo.ProgressDlg.SelfInfo.WaitForNotExists(900000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'ShippingDlg'", repo.ShippingDlg.SelfInfo, new ActionTimeout(120000), new RecordItemIndex(10));
            repo.ShippingDlg.SelfInfo.WaitForExists(120000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
