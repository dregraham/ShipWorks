
-- ShipWorks V2 to V3 Database Migration Script, generated by CodeSmith
-- For table v2m_PaymentDetails

-- operational variables
DECLARE 
    @workCounter int,
    @newPaymentDetailID bigint

-- source table variables
DECLARE
    -- @MasterDatabase will be generated at runtime
    -- @IsArchive will be generated at runtime    
    @sPaymentDetailID int, 
    @sOrderID int, 
    @sType nvarchar(50), 
    @sLabel nvarchar(100), 
    @sValue nvarchar(100) 

-- target table variables
DECLARE
    @tOrderPaymentDetailID bigint, 
    @tRowVersion timestamp, 
    @tOrderID bigint, 
    @tLabel nvarchar(100), 
    @tValue nvarchar(100) 

-- Track Progress
SET @workCounter = 0

-- the cursor for cycling through the source table
DECLARE workCursor CURSOR FORWARD_ONLY FOR
SELECT TOP 1000
    [PaymentDetailID],
    [OrderID],
    [Type],
    [Label],
    [Value]
    FROM dbo.v2m_PaymentDetails
	WHERE Lower([Type]) not in ('cc_number', 'card_num', 'cardnum', 'card number', 'ccv')  

-- open the source table cursor
OPEN workCursor

-- populate source table variables from the source cursor
FETCH NEXT FROM workCursor
INTO
    @sPaymentDetailID,
    @sOrderID,
    @sType,
    @sLabel,
    @sValue
WHILE @@FETCH_STATUS = 0
BEGIN
    SET @workCounter = @workCounter + 1

    SET @tOrderID = dbo.v2m_TranslateKey(@sOrderID, 0 /*order*/)
    SET @tLabel = @sLabel
    SET @tValue = @sValue

    INSERT INTO {MASTERDATABASE}.dbo.OrderPaymentDetail  (
	    [OrderID],
	    [Label],
	    [Value]
    )
    VALUES
    (
	    @tOrderID,
	    @tLabel,
	    @tValue
    )             
    
    SET @newPaymentDetailID = @@IDENTITY
    
    -- record the new key
    EXEC dbo.v2m_RecordKey @sPaymentDetailID, 11, @newPaymentDetailID
    
    -- delete the moved row
    DELETE FROM dbo.v2m_PaymentDetails WHERE PaymentDetailID = @sPaymentDetailID

-- fetch next row from source table
FETCH NEXT FROM workCursor
INTO
    @sPaymentDetailID,
    @sOrderID,
    @sType,
    @sLabel,
    @sValue
END
CLOSE workCursor
DEALLOCATE workCursor

-- data migration "protocol" demands we return the number of rows/work completed
SELECT @workCounter as WorkCompleted