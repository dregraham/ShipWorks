-- ShipWorks V2 to V3 Database Migration Script, generated by CodeSmith
-- For table v2m_Orders

-- operational variables
DECLARE 
    @workCounter int,
    @sStoreType int,
    @newStoreID bigint,
    @newCustomerID bigint,
    @noteDate datetime,
    @newOrderKey bigint,
    @customerIDTemp int
    
--DECLARE @IsArchive bit
--SET @IsArchive = 0

-- source table variables
DECLARE
    -- @MasterDatabase will be generated at runtime
    -- @IsArchive will be generated at runtime    
    @sOrderID int, 
    @sRowVersion timestamp, 
    @sOrderNumber int, 
    @sStoreID int, 
    @sCustomerID int, 
    @sOrderDate datetime, 
    @sShipFirstName nvarchar(30), 
    @sShipLastName nvarchar(30), 
    @sShipCompany nvarchar(30), 
    @sShipAddress1 nvarchar(60), 
    @sShipAddress2 nvarchar(60), 
    @sShipAddress3 nvarchar(60), 
    @sShipCity nvarchar(50), 
    @sShipStateProvinceCode nvarchar(25), 
    @sShipPostalCode nvarchar(10), 
    @sShipCountryCode nvarchar(5), 
    @sShipEmail nvarchar(50), 
    @sShipPhone nvarchar(25), 
    @sShipFax nvarchar(25), 
    @sBillFirstName nvarchar(30), 
    @sBillLastName nvarchar(30), 
    @sBillCompany nvarchar(30), 
    @sBillAddress1 nvarchar(60), 
    @sBillAddress2 nvarchar(60), 
    @sBillAddress3 nvarchar(60), 
    @sBillCity nvarchar(50), 
    @sBillStateProvinceCode nvarchar(25), 
    @sBillPostalCode nvarchar(10), 
    @sBillCountryCode nvarchar(5), 
    @sBillEmail nvarchar(50), 
    @sBillPhone nvarchar(25), 
    @sBillFax nvarchar(25), 
    @sCustomerComments nvarchar(max), 
    @sRequestedShipping nvarchar(50), 
    @sTotal money, 
    @sNotes nvarchar(max), 
    @sStatus nvarchar(50), 
    @sIsManual bit, 
    @sOrderNumberPrefix nvarchar(10), 
    @sOrderNumberPostfix nvarchar(10), 
    @sOrderNumberDisplay nvarchar(50), 
    @sOnlineLastModified datetime, 
    @seBayOrderID bigint, 
    @seBayOrderCreated datetime, 
    @seBayBuyerID nvarchar(50), 
    @seBayBuyerFeedbackScore int, 
    @seBayBuyerFeedbackPrivate bit, 
    @seBayPaymentStatus int, 
    @seBayPaymentMethod int, 
    @seBayCheckoutStatus int, 
    @seBayCompleteStatus int, 
    @seBayLeftFeedback bit, 
    @seBayLeftFeedbackType int, 
    @seBayLeftFeedbackComments nvarchar(80), 
    @seBayReceivedFeedbackType int, 
    @seBayReceivedFeedbackComments nvarchar(80), 
    @seBayMyEbayStatus int, 
    @seBaySellerPaidStatus int, 
    @seBayAllowEdit bit, 
    @seBaySellingManagerRecord int, 
    @sPayPalAddressStatus int, 
    @sPayPalTransactionID varchar(50), 
    @sMarketWorksUserNumber int, 
    @sMarketWorksInvoiceNumber nvarchar(50), 
    @sMarketWorksBuyerNumber int, 
    @sMivaBatchID int, 
    @sMivaStatus varchar(32), 
    @sMarketWorksParcelID int, 
    @sosCommerceCustomerID int, 
    @sosCommerceStatusCode int, 
    @sYahooOrderID varchar(50), 
    @sProStoresStatus varchar(15), 
    @sProStoresConfirmation varchar(12), 
    @sChannelAdvisorReportID int, 
    @sChannelAdvisorResellerID varchar(80), 
    @sChannelAdvisorDistributionCenter varchar(80), 
    @sChannelAdvisorOrderID varchar(20), 
    @sInfopiaCustomerID int, 
    @sInfopiaStatus varchar(32), 
    @sAmazonOrderID varchar(32), 
    @sAmazonStatusDocumentID bigint, 
    @sAmazonCommission money, 
    @sXCartStatus varchar(32), 
    @sOrderMotionShipmentID int, 
    @sOrderMotionPromotion nvarchar(50), 
    @sWasArchived bit, 
    @sClickCartProStatusCode nvarchar(50), 
    @sClickCartProID nvarchar(50), 
    @sPayPalFee money, 
    @sPayPalPaymentStatus smallint, 
    @sVolusionStatus nvarchar(25), 
    @sNetworkSolutionsStatus int, 
    @sNetworkSolutionsOrderID int, 
    @sMagentoStatusCode nvarchar(50), 
    @sMagentoCustomerID int, 
    @sMagentoOrderID int, 
    @sAmeriCommerceStatusCode int, 
    @sCommerceInterfaceStatusCode int, 
    @sCommerceInterfaceOrderNumber varchar(15), 
    @sProStoresAuthorizationDate datetime

-- target table variables
DECLARE
    @tOrderID bigint, 
    @tRowVersion timestamp, 
    @tStoreID bigint, 
    @tCustomerID bigint, 
    @tOrderNumber bigint, 
    @tOrderNumberComplete nvarchar(50), 
    @tOrderDate datetime, 
    @tOrderTotal money, 
    @tLocalStatus nvarchar(100), 
    @tIsManual bit, 
    @tOnlineLastModified datetime, 
    @tOnlineCustomerID sql_variant, 
    @tOnlineStatus nvarchar(100), 
    @tOnlineStatusCode sql_variant, 
    @tRequestedShipping nvarchar(50), 
    @tBillFirstName nvarchar(30), 
    @tBillMiddleName nvarchar(30), 
    @tBillLastName nvarchar(30), 
    @tBillCompany nvarchar(60), 
    @tBillStreet1 nvarchar(60), 
    @tBillStreet2 nvarchar(60), 
    @tBillStreet3 nvarchar(60), 
    @tBillCity nvarchar(50), 
    @tBillStateProvCode nvarchar(50), 
    @tBillPostalCode nvarchar(20), 
    @tBillCountryCode nvarchar(50), 
    @tBillPhone nvarchar(25), 
    @tBillFax nvarchar(35), 
    @tBillEmail nvarchar(50), 
    @tBillWebsite nvarchar(50), 
    @tShipFirstName nvarchar(30), 
    @tShipMiddleName nvarchar(30), 
    @tShipLastName nvarchar(30), 
    @tShipCompany nvarchar(60), 
    @tShipStreet1 nvarchar(60), 
    @tShipStreet2 nvarchar(60), 
    @tShipStreet3 nvarchar(60), 
    @tShipCity nvarchar(50), 
    @tShipStateProvCode nvarchar(50), 
    @tShipPostalCode nvarchar(20), 
    @tShipCountryCode nvarchar(50), 
    @tShipPhone nvarchar(25), 
    @tShipFax nvarchar(35), 
    @tShipEmail nvarchar(50), 
    @tShipWebsite nvarchar(50), 
    @tRollupItemCount int, 
    @tRollupItemName nvarchar(300), 
    @tRollupItemCode nvarchar(300), 
    @tRollupItemSKU nvarchar(100), 
    @tRollupItemLocation nvarchar(255), 
    @tRollupItemQuantity float, 
	@tRollupItemTotalWeight float,
    @tRollupNoteCount int 

-- Track Progress
SET @workCounter = 0

-- the cursor for cycling through the source table
DECLARE workCursor CURSOR FORWARD_ONLY FOR
SELECT TOP 1000
    [OrderID],
    [RowVersion],
    [OrderNumber],
    [StoreID],
    [CustomerID],
    [OrderDate],
    [ShipFirstName],
    [ShipLastName],
    [ShipCompany],
    [ShipAddress1],
    [ShipAddress2],
    [ShipAddress3],
    [ShipCity],
    [ShipStateProvinceCode],
    [ShipPostalCode],
    [ShipCountryCode],
    [ShipEmail],
    [ShipPhone],
    [ShipFax],
    [BillFirstName],
    [BillLastName],
    [BillCompany],
    [BillAddress1],
    [BillAddress2],
    [BillAddress3],
    [BillCity],
    [BillStateProvinceCode],
    [BillPostalCode],
    [BillCountryCode],
    [BillEmail],
    [BillPhone],
    [BillFax],
    [CustomerComments],
    [RequestedShipping],
    [Total],
    [Notes],
    [Status],
    [IsManual],
    [OrderNumberPrefix],
    [OrderNumberPostfix],
    [OrderNumberDisplay],
    [OnlineLastModified],
    [eBayOrderID],
    [eBayOrderCreated],
    [eBayBuyerID],
    [eBayBuyerFeedbackScore],
    [eBayBuyerFeedbackPrivate],
    [eBayPaymentStatus],
    [eBayPaymentMethod],
    [eBayCheckoutStatus],
    [eBayCompleteStatus],
    [eBayLeftFeedback],
    [eBayLeftFeedbackType],
    [eBayLeftFeedbackComments],
    [eBayReceivedFeedbackType],
    [eBayReceivedFeedbackComments],
    [eBayMyEbayStatus],
    [eBaySellerPaidStatus],
    [eBayAllowEdit],
    [eBaySellingManagerRecord],
    [PayPalAddressStatus],
    [PayPalTransactionID],
    [MarketWorksUserNumber],
    [MarketWorksInvoiceNumber],
    [MarketWorksBuyerNumber],
    [MivaBatchID],
    [MivaStatus],
    [MarketWorksParcelID],
    [osCommerceCustomerID],
    [osCommerceStatusCode],
    [YahooOrderID],
    [ProStoresStatus],
    [ProStoresConfirmation],
    [ChannelAdvisorReportID],
    [ChannelAdvisorResellerID],
    [ChannelAdvisorDistributionCenter],
    [ChannelAdvisorOrderID],
    [InfopiaCustomerID],
    [InfopiaStatus],
    [AmazonOrderID],
    [AmazonStatusDocumentID],
    [AmazonCommission],
    [XCartStatus],
    [OrderMotionShipmentID],
    [OrderMotionPromotion],
    [WasArchived],
    [ClickCartProStatusCode],
    [ClickCartProID],
    [PayPalFee],
    [PayPalPaymentStatus],
    [VolusionStatus],
    [NetworkSolutionsStatus],
    [NetworkSolutionsOrderID],
    [MagentoStatusCode],
    [MagentoCustomerID],
    [MagentoOrderID],
    [AmeriCommerceStatusCode],
    [CommerceInterfaceStatusCode],
    [CommerceInterfaceOrderNumber],
    [ProStoresAuthorizationDate]
    FROM v2m_Orders

-- open the source table cursor
OPEN workCursor

-- populate source table variables from the source cursor
FETCH NEXT FROM workCursor
INTO
    @sOrderID,
    @sRowVersion,
    @sOrderNumber,
    @sStoreID,
    @sCustomerID,
    @sOrderDate,
    @sShipFirstName,
    @sShipLastName,
    @sShipCompany,
    @sShipAddress1,
    @sShipAddress2,
    @sShipAddress3,
    @sShipCity,
    @sShipStateProvinceCode,
    @sShipPostalCode,
    @sShipCountryCode,
    @sShipEmail,
    @sShipPhone,
    @sShipFax,
    @sBillFirstName,
    @sBillLastName,
    @sBillCompany,
    @sBillAddress1,
    @sBillAddress2,
    @sBillAddress3,
    @sBillCity,
    @sBillStateProvinceCode,
    @sBillPostalCode,
    @sBillCountryCode,
    @sBillEmail,
    @sBillPhone,
    @sBillFax,
    @sCustomerComments,
    @sRequestedShipping,
    @sTotal,
    @sNotes,
    @sStatus,
    @sIsManual,
    @sOrderNumberPrefix,
    @sOrderNumberPostfix,
    @sOrderNumberDisplay,
    @sOnlineLastModified,
    @seBayOrderID,
    @seBayOrderCreated,
    @seBayBuyerID,
    @seBayBuyerFeedbackScore,
    @seBayBuyerFeedbackPrivate,
    @seBayPaymentStatus,
    @seBayPaymentMethod,
    @seBayCheckoutStatus,
    @seBayCompleteStatus,
    @seBayLeftFeedback,
    @seBayLeftFeedbackType,
    @seBayLeftFeedbackComments,
    @seBayReceivedFeedbackType,
    @seBayReceivedFeedbackComments,
    @seBayMyEbayStatus,
    @seBaySellerPaidStatus,
    @seBayAllowEdit,
    @seBaySellingManagerRecord,
    @sPayPalAddressStatus,
    @sPayPalTransactionID,
    @sMarketWorksUserNumber,
    @sMarketWorksInvoiceNumber,
    @sMarketWorksBuyerNumber,
    @sMivaBatchID,
    @sMivaStatus,
    @sMarketWorksParcelID,
    @sosCommerceCustomerID,
    @sosCommerceStatusCode,
    @sYahooOrderID,
    @sProStoresStatus,
    @sProStoresConfirmation,
    @sChannelAdvisorReportID,
    @sChannelAdvisorResellerID,
    @sChannelAdvisorDistributionCenter,
    @sChannelAdvisorOrderID,
    @sInfopiaCustomerID,
    @sInfopiaStatus,
    @sAmazonOrderID,
    @sAmazonStatusDocumentID,
    @sAmazonCommission,
    @sXCartStatus,
    @sOrderMotionShipmentID,
    @sOrderMotionPromotion,
    @sWasArchived,
    @sClickCartProStatusCode,
    @sClickCartProID,
    @sPayPalFee,
    @sPayPalPaymentStatus,
    @sVolusionStatus,
    @sNetworkSolutionsStatus,
    @sNetworkSolutionsOrderID,
    @sMagentoStatusCode,
    @sMagentoCustomerID,
    @sMagentoOrderID,
    @sAmeriCommerceStatusCode,
    @sCommerceInterfaceStatusCode,
    @sCommerceInterfaceOrderNumber,
    @sProStoresAuthorizationDate
WHILE @@FETCH_STATUS = 0
BEGIN
    SET @workCounter = @workCounter + 1
    
    SET @customerIDTemp = @sCustomerID
    SET @newStoreID = dbo.v2m_TranslateKeyGlobal(@sStoreID, 8 /*store*/)
    
    -- get the original v2 ID
    IF (@IsArchive = 1)
    BEGIN
		SET @sCustomerID = dbo.v2m_GetOriginalArchiveKey(@sCustomerID, 2 /* customer */)
    END
    
	 -- get the new V3 ID
    IF (@sCustomerID IS NULL)
    BEGIN
		-- Workaround for the slim occurance of a Customer existing in the archive database with no ArchiveLogs entry pointing to it
		SET @newCustomerID = dbo.v2m_TranslateKey(@customerIDTemp, 2 /* customer */)
    END
    ELSE
    BEGIN
		SET @newCustomerID = dbo.v2m_TranslateKeyGlobal(@sCustomerID, 2 /*customer*/)
    END
    
    -- have to find the type of store this order belongs to because order values are dependent on it
    SELECT @sStoreType = TypeCode FROM {MASTERDATABASE}.dbo.Store WHERE StoreID = @newStoreID
    
    -- copy fields that go into the Order table
    SET @tStoreID = @newStoreID
    SET @tCustomerID = @newCustomerID
    SET @tOrderNumber = @sOrderNumber
    SET @tOrderNumberComplete = @sOrderNumberDisplay
    SET @tOrderDate = @sOrderDate
    SET @tOrderTotal = @sTotal
    SET @tLocalStatus = @sStatus
    SET @tIsManual = @sIsManual
    SET @tOnlineLastModified = @sOnlineLastModified

	-- ChannelAdvisor didn't use the OnlineLastModified in 2, but does in 3.
	-- Miva also didn't use OnlineLastModified in 2 but does in 3.
	IF @sStoreType = 7 OR @sStoreType = 0
	BEGIN
		SET @tOnlineLastModified = @tOrderDate
	END
    
    SET @tOnlineCustomerID = CASE 
								WHEN @sStoreType = 5 OR 
									 @sStoreType = 9 OR 
									 @sStoreType = 13 OR 
									 @sStoreType = 16 OR 
									 @sStoreType = 22 OR 
									 @sStoreType = 23 OR 
								 	 @sStoreType = 24 OR
									 @sStoreType = 29 OR 
									 @sStoreType = 30 THEN CAST(@sOsCommerceCustomerID as sql_variant)
								WHEN @sStoreType = 8 THEN @sInfopiaCustomerID
								WHEN @sStoreType = 21 THEN @sMagentoCustomerID
								ELSE NULL -- others don't do online customer ids
							 END
	
	-- Some don't use codes at all - just the actual status string						 
    SET @tOnlineStatus = CASE
							WHEN @sStoreType = 8 THEN @sInfopiaStatus
						    WHEN @sStoreType = 19 THEN @sVolusionStatus
						    ELSE ''
					     END
    
    -- handle the integer-based ones
    SET @tOnlineStatusCode = CASE
								WHEN @sStoreType = 0 THEN CAST(@sMivaStatus as sql_variant) -- casting the first case will allow the other case types to vary as well
								WHEN @sStoreType = 5 OR 
									 @sStoreType = 9 OR 
									 @sStoreType = 13 OR 
									 @sStoreType = 16 OR 
									 @sStoreType = 22 OR 
									 @sStoreType = 23 OR 
									 @sStoreType = 24 OR
									 @sStoreType = 29 OR
									 @sStoreType = 30 THEN CAST(@sosCommerceStatusCode as bigint)
								WHEN @sStoreType = 6 THEN @sProStoresStatus
								WHEN @sStoreType = 11 OR --xcart, searchfit
								     @sStoreType = 27 THEN @sXCartStatus
								WHEN @sStoreType = 17 THEN @sClickCartProStatusCode
								WHEN @sStoreType = 20 THEN CAST(@sNetworkSolutionsStatus as bigint)
								WHEN @sStoreType = 21 THEN @sMagentoStatusCode
								WHEN @sStoreType = 25 THEN @sAmeriCommerceStatusCode
								WHEN @sStoreType = 26 THEN CAST(@sCommerceInterfaceStatusCode as bigint)
								ELSE NULL
							END
	-- handle the string based ones
							
    SET @tRequestedShipping = @sRequestedShipping
    SET @tBillFirstName = @sBillFirstName
    SET @tBillMiddleName = ''
    SET @tBillLastName = @sBillLastName
    SET @tBillCompany = @sBillCompany
    SET @tBillStreet1 = @sBillAddress1
    SET @tBillStreet2 = @sBillAddress2
    SET @tBillStreet3 = @sBillADdress3
    SET @tBillCity = @sBillCity
    SET @tBillStateProvCode = @sBillStateProvinceCode
    SET @tBillPostalCode = @sBillPostalCode
    SET @tBillCountryCode = @sBillCountryCode
    SET @tBillPhone = @sBillPhone
    SET @tBillFax = @sBillFax
    SET @tBillEmail = @sBillEmail
    SET @tBillWebsite = ''
    SET @tShipFirstName = @sShipFirstName
    SET @tShipMiddleName = '' 
    SET @tShipLastName = @sShipLastName
    SET @tShipCompany = @sShipCompany
    SET @tShipStreet1 = @sShipAddress1
    SET @tShipStreet2 = @sShipAddress2
    SET @tShipStreet3 = @sShipAddress3
    SET @tShipCity = @sShipCity
    SET @tShipStateProvCode = @sShipStateProvinceCode
    SET @tShipPostalCode = @sShipPostalCode
    SET @tShipCountryCode = @sShipCountryCode
    SET @tShipPhone = @sShipPhone
    SET @tShipFax = @sShipFax
    SET @tShipEmail = @sShipEmail
    SET @tShipWebsite = ''
    SET @tRollupItemCount = NULL
    SET @tRollupItemName = ''
    SET @tRollupItemCode = 0
    SET @tRollupItemSKU = ''
    SET @tRollupItemLocation = ''
    SET @tRollupItemQuantity = 0
	SET @tRollupItemTotalWeight = 0
    SET @tRollupNoteCount = 0

    INSERT INTO {MASTERDATABASE}.dbo.[Order]  (
	    [StoreID],
	    [CustomerID],
	    [OrderNumber],
	    [OrderNumberComplete],
	    [OrderDate],
	    [OrderTotal],
	    [LocalStatus],
	    [IsManual],
	    [OnlineLastModified],
	    [OnlineCustomerID],
	    [OnlineStatus],
	    [OnlineStatusCode],
	    [RequestedShipping],
	    [BillFirstName],
	    [BillMiddleName],
	    [BillLastName],
	    [BillCompany],
	    [BillStreet1],
	    [BillStreet2],
	    [BillStreet3],
	    [BillCity],
	    [BillStateProvCode],
	    [BillPostalCode],
	    [BillCountryCode],
	    [BillPhone],
	    [BillFax],
	    [BillEmail],
	    [BillWebsite],
	    [ShipFirstName],
	    [ShipMiddleName],
	    [ShipLastName],
	    [ShipCompany],
	    [ShipStreet1],
	    [ShipStreet2],
	    [ShipStreet3],
	    [ShipCity],
	    [ShipStateProvCode],
	    [ShipPostalCode],
	    [ShipCountryCode],
	    [ShipPhone],
	    [ShipFax],
	    [ShipEmail],
	    [ShipWebsite],
	    [RollupItemCount],
	    [RollupItemName],
	    [RollupItemCode],
	    [RollupItemSKU],
	    [RollupItemLocation],
	    [RollupItemQuantity],
		[RollupItemTotalWeight],
	    [RollupNoteCount]
    )
    VALUES
    (
	    @tStoreID,
	    @tCustomerID,
	    @tOrderNumber,
	    @tOrderNumberComplete,
	    @tOrderDate,
	    @tOrderTotal,
	    @tLocalStatus,
	    @tIsManual,
	    @tOnlineLastModified,
	    @tOnlineCustomerID,
	    @tOnlineStatus,
	    @tOnlineStatusCode,
	    @tRequestedShipping,
	    @tBillFirstName,
	    @tBillMiddleName,
	    @tBillLastName,
	    @tBillCompany,
	    @tBillStreet1,
	    @tBillStreet2,
	    @tBillStreet3,
	    @tBillCity,
	    @tBillStateProvCode,
	    @tBillPostalCode,
	    @tBillCountryCode,
	    @tBillPhone,
	    @tBillFax,
	    @tBillEmail,
	    @tBillWebsite,
	    @tShipFirstName,
	    @tShipMiddleName,
	    @tShipLastName,
	    @tShipCompany,
	    @tShipStreet1,
	    @tShipStreet2,
	    @tShipStreet3,
	    @tShipCity,
	    @tShipStateProvCode,
	    @tShipPostalCode,
	    @tShipCountryCode,
	    @tShipPhone,
	    @tShipFax,
	    @tShipEmail,
	    @tShipWebsite,
	    @tRollupItemCount,
	    @tRollupItemName,
	    @tRollupItemCode,
	    @tRollupItemSKU,
	    @tRollupItemLocation,
	    @tRollupItemQuantity,
		@tRollupItemTotalWeight,
	    @tRollupNoteCount
    )             
    
    -- get the new key
    SET @newOrderKey = @@IDENTITY
    
    -- record the translation
    EXEC dbo.v2m_RecordKey @sOrderID, 0 /* order */, @newOrderKey

	-- record object label	
	EXEC dbo.v2m_RecordObjectLabel @newOrderKey, 6, @tCustomerID, @tOrderNumberComplete
    
    -- copy the note
	if (LEN(@sNotes) > 0)
	BEGIN
		SET @noteDate = GETUTCDATE()
		exec dbo.v2m_CreateNote @newOrderKey, @noteDate, @sNotes, 0 /* NoteSource.ShipWorksUser */, 0 /* NoteVisibliity.Internal */
	END	
    
    -- now, based on the type of store, create the child order rows
    -- eBay
    IF @sStoreType = 1
    BEGIN
		
	    INSERT INTO {MASTERDATABASE}.dbo.EbayOrder  (
		    [OrderID],
		    [EbayOrderID],
		    [EbayBuyerID],
		    [BuyerFeedbackScore],
		    [BuyerFeedbackPrivate],
		    [CombinedLocally],
		    [RollupEbayItemCount],
		    [RollupEffectiveCheckoutStatus],
		    [RollupEffectivePaymentMethod],
		    [RollupFeedbackLeftType],
		    [RollupFeedbackLeftComments],
		    [RollupFeedbackReceivedType],
		    [RollupFeedbackReceivedComments],
		    [RollupPayPalAddressStatus],
		    [RollupSellingManagerRecord]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @seBayOrderID,
		    @seBayBuyerID,
		    @seBayBuyerFeedbackScore,
		    @seBayBuyerFeedbackPrivate,
		    0, -- @tCombinedLocally, doesn't appear to be used anymore
		    NULL, -- @tRollupEbayItemCount,
		    0, -- @tRollupEffectiveCheckoutStatus,
		    0, -- @tRollupEffectivePaymentMethod,
		    0, -- @tRollupFeedbackLeftType,
		    0, -- @tRollupFeedbackLeftComments,
		    0, -- @tRollupFeedbackReceivedType,
		    0, -- @tRollupFeedbackReceivedComments,
		    0, -- @tRollupPayPalAddressStatus,
		    0 -- @tRollupSellingManagerRecord
	    )             

		-- adjust feedback type codes 
		IF (@seBayLeftFeedback = 0)
		BEGIN
			SET @seBayLeftFeedbackType = -2 -- None
		END

		IF (@seBayReceivedFeedbackType = 0 AND LEN(@seBayReceivedFeedbackComments) = 0)
		BEGIN
			SET @seBayReceivedFeedbackType = -2 -- None
		END

	    -- also insert into a "temporary" table all of the fields that we pushed to the OrderItem level.  This temp table
	    -- is in THIS database, not just in the Master
	    INSERT INTO dbo.v2m_EbayTemp  (
		    [OrderID],
		    [PaymentStatus],
		    [PaymentMethod],
		    [CheckoutStatus],
		    [CompleteStatus],
		    [SellerPaidStatus],
		    [FeedbackLeftType],
		    [FeedbackLeftComments],
		    [FeedbackReceivedType],
		    [FeedbackReceivedComments],
		    [MyEbayPaid],
		    [MyEbayShipped],
		    [PayPalTransactionID],
		    [PayPalAddressStatus]
	    )
	    VALUES
	    (
		    @sOrderID,
		    @seBayPaymentStatus,
		    @seBayPaymentMethod,
		    @seBayCheckoutStatus,
		    @seBayCompleteStatus,
		    @seBaySellerPaidStatus,
		    @seBayLeftFeedbackType,
		    @seBayLeftFeedbackComments,
		    @seBayReceivedFeedbackType,
		    @seBayReceivedFeedbackComments,
		    @seBayMyEbayStatus & 1, --@tMyEbayPaid,
		    @seBayMyEbayStatus & 2, --@tMyEbayShipped,
		    @sPayPalTransactionID,
		    @sPayPalAddressStatus
	    )             
    END
    
    -- Yahoo!
    IF @sStoreType = 2
    BEGIN
    
        INSERT INTO {MASTERDATABASE}.dbo.YahooOrder  (
		    [OrderID],
		    [YahooOrderID]
	    )
	    VALUES
	    (
		    @newORderKey,
		    @sYahooOrderID
	    )             
    END
    
    -- MarketWorks/Marketplace Advisor
    IF @sStoreType = 4
    BEGIN
    
	    INSERT INTO {MASTERDATABASE}.dbo.MarketplaceAdvisorOrder  (
		    [OrderID],
		    [BuyerNumber],
		    [SellerOrderNumber],
		    [InvoiceNumber],
		    [ParcelID]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sMarketWorksBuyerNumber,
		    @sMarketWorksUserNumber,
		    @sMarketWorksInvoiceNumber,
		    @sMarketWorksParcelID
	    )             
	    
    END
    
    -- Prostores
    IF @sStoreType = 6
    BEGIN
		-- V2 used minimum datetime instead of NULL
		IF (@sProStoresAuthorizationDate = '1753-1-1')
		BEGIN
			SET @sProStoresAuthorizationDate = NULL
		END
    
        INSERT INTO {MASTERDATABASE}.dbo.ProStoresOrder  (
		    [OrderID],
		    [ConfirmationNumber],
		    [AuthorizedDate],
		    [AuthorizedBy]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sProStoresConfirmation,
		    @sProStoresAuthorizationDate,
		    '' -- @tAuthorizedBy not in 2
	    )             
	    
    END
    
    -- ChannelAdvisor
    IF @sStoreType = 7 
    BEGIN
    
		INSERT INTO {MASTERDATABASE}.dbo.ChannelAdvisorOrder  (
		    [OrderID],
		    [CustomOrderIdentifier],
		    [ResellerID]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sChannelAdvisorOrderID,
		    @sChannelAdvisorResellerID
	    )             

		-- also record the distribution center for use during OrderItem conversion
		INSERT INTO {MASTERDATABASE}.dbo.v2m_ChannelAdvisorOrder (
			[OrderID],
			[DistributionCenter]
		)
		VALUES
		(
			@newOrderKey,
			@sChannelAdvisorDistributionCenter
		)
    
    END
    
    -- Amazon
    IF @sStoreType = 10
    BEGIN
    
	    INSERT INTO {MASTERDATABASE}.dbo.AmazonOrder  (
		    [OrderID],
		    [AmazonOrderID],
		    [AmazonCommission]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sAmazonOrderID,
		    @sAmazonCommission
	    )             
    
    END
    
    -- OrderMotion
    IF @sStoreType = 12
    BEGIN
        INSERT INTO {MASTERDATABASE}.dbo.OrderMotionOrder  (
		    [OrderID],
		    [OrderMotionShipmentID],
		    [OrderMotionPromotion]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sOrderMotionShipmentID,
		    @sOrderMotionPromotion
	    )     
    END
    
    -- ClickCartPro
    IF @sStoreType = 17
    BEGIN
        INSERT INTO {MASTERDATABASE}.dbo.ClickCartProOrder  (
		    [OrderID],
		    [ClickCartProOrderID]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sClickCartProID
	    )     
    END
    
    -- PayPal
    IF @sStoreType = 18
    BEGIN
    
        INSERT INTO {MASTERDATABASE}.dbo.PayPalOrder  (
		    [OrderID],
		    [TransactionID],
		    [AddressStatus],
		    [PayPalFee],
		    [PaymentStatus]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sPayPalTransactionID,
		    @sPayPalAddressStatus,
		    @sPayPalFee,
		    @sPayPalPaymentStatus
	    )             
    
    END
    
    -- NetworkSolutions
    IF @sStoreType = 20
    BEGIN
    
        INSERT INTO {MASTERDATABASE}.dbo.NetworkSolutionsOrder  (
		    [OrderID],
		    [NetworkSolutionsOrderID]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sNetworkSolutionsOrderID
	    )             
	    
    END
    
    -- Magento
    IF @sStoreType = 21
    BEGIN
    
        INSERT INTO {MASTERDATABASE}.dbo.MagentoOrder  (
		    [OrderID],
		    [MagentoOrderID]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sMagentoOrderID
	    )             
    
    END
    
    -- CommerceInterface
    IF @sStoreType = 26
    BEGIN
    
        INSERT INTO {MASTERDATABASE}.dbo.CommerceInterfaceOrder  (
		    [OrderID],
		    [CommerceInterfaceOrderNumber]
	    )
	    VALUES
	    (
		    @newOrderKey,
		    @sCommerceInterfaceOrderNumber
	    )             

    END
    
    -- delete the old order
    DELETE FROM dbo.v2m_Orders WHERE OrderID = @sOrderID
    
-- fetch next row from source table
FETCH NEXT FROM workCursor
INTO
    @sOrderID,
    @sRowVersion,
    @sOrderNumber,
    @sStoreID,
    @sCustomerID,
    @sOrderDate,
    @sShipFirstName,
    @sShipLastName,
    @sShipCompany,
    @sShipAddress1,
    @sShipAddress2,
    @sShipAddress3,
    @sShipCity,
    @sShipStateProvinceCode,
    @sShipPostalCode,
    @sShipCountryCode,
    @sShipEmail,
    @sShipPhone,
    @sShipFax,
    @sBillFirstName,
    @sBillLastName,
    @sBillCompany,
    @sBillAddress1,
    @sBillAddress2,
    @sBillAddress3,
    @sBillCity,
    @sBillStateProvinceCode,
    @sBillPostalCode,
    @sBillCountryCode,
    @sBillEmail,
    @sBillPhone,
    @sBillFax,
    @sCustomerComments,
    @sRequestedShipping,
    @sTotal,
    @sNotes,
    @sStatus,
    @sIsManual,
    @sOrderNumberPrefix,
    @sOrderNumberPostfix,
    @sOrderNumberDisplay,
    @sOnlineLastModified,
    @seBayOrderID,
    @seBayOrderCreated,
    @seBayBuyerID,
    @seBayBuyerFeedbackScore,
    @seBayBuyerFeedbackPrivate,
    @seBayPaymentStatus,
    @seBayPaymentMethod,
    @seBayCheckoutStatus,
    @seBayCompleteStatus,
    @seBayLeftFeedback,
    @seBayLeftFeedbackType,
    @seBayLeftFeedbackComments,
    @seBayReceivedFeedbackType,
    @seBayReceivedFeedbackComments,
    @seBayMyEbayStatus,
    @seBaySellerPaidStatus,
    @seBayAllowEdit,
    @seBaySellingManagerRecord,
    @sPayPalAddressStatus,
    @sPayPalTransactionID,
    @sMarketWorksUserNumber,
    @sMarketWorksInvoiceNumber,
    @sMarketWorksBuyerNumber,
    @sMivaBatchID,
    @sMivaStatus,
    @sMarketWorksParcelID,
    @sosCommerceCustomerID,
    @sosCommerceStatusCode,
    @sYahooOrderID,
    @sProStoresStatus,
    @sProStoresConfirmation,
    @sChannelAdvisorReportID,
    @sChannelAdvisorResellerID,
    @sChannelAdvisorDistributionCenter,
    @sChannelAdvisorOrderID,
    @sInfopiaCustomerID,
    @sInfopiaStatus,
    @sAmazonOrderID,
    @sAmazonStatusDocumentID,
    @sAmazonCommission,
    @sXCartStatus,
    @sOrderMotionShipmentID,
    @sOrderMotionPromotion,
    @sWasArchived,
    @sClickCartProStatusCode,
    @sClickCartProID,
    @sPayPalFee,
    @sPayPalPaymentStatus,
    @sVolusionStatus,
    @sNetworkSolutionsStatus,
    @sNetworkSolutionsOrderID,
    @sMagentoStatusCode,
    @sMagentoCustomerID,
    @sMagentoOrderID,
    @sAmeriCommerceStatusCode,
    @sCommerceInterfaceStatusCode,
    @sCommerceInterfaceOrderNumber,
    @sProStoresAuthorizationDate
END
CLOSE workCursor
DEALLOCATE workCursor

-- data migration "protocol" demands we return the number of rows/work completed
SELECT @workCounter as WorkCompleted