
-- ShipWorks V2 to V3 Database Migration Script, generated by CodeSmith
-- For table v2m_FedexShippers

-- operational variables
DECLARE 
    @workCounter int,
	@newAccountKey bigint

-- source table variables
DECLARE
    -- @MasterDatabase will be generated at runtime
    -- @IsArchive will be generated at runtime    
    @sFedexShipperID int, 
    @sRowVersion timestamp, 
    @sAccountNumber int, 
    @sMeterNumber int, 
    @sUseAlternate bit, 
    @sCompany nvarchar(35), 
    @sContactName nvarchar(35), 
    @sAddress1 nvarchar(60), 
    @sAddress2 nvarchar(60), 
    @sCity nvarchar(50), 
    @sStateProvinceCode nvarchar(5), 
    @sPostalCode nvarchar(10), 
    @sCountryCode nvarchar(5), 
    @sContactEmail nvarchar(35), 
    @sContactPhone nvarchar(25), 
    @sContactFax nvarchar(25), 
    @sAlternateCompany nvarchar(35), 
    @sAlternateContactName nvarchar(35), 
    @sAlternateAddress1 nvarchar(60), 
    @sAlternateAddress2 nvarchar(60), 
    @sAlternateCity nvarchar(50), 
    @sAlternateStateProvinceCode nvarchar(5), 
    @sAlternatePostalCode nvarchar(10), 
    @sAlternateCountryCode nvarchar(5), 
    @sAlternateContactEmail nvarchar(35), 
    @sAlternateContactPhone nvarchar(25), 
    @sAlternateContactFax nvarchar(25), 
    @sSignatureReleaseNumber varchar(10) 

-- target table variables
DECLARE
    @tFedExAccountID bigint, 
    @tRowVersion timestamp, 
    @tDescription nvarchar(50), 
    @tAccountNumber nvarchar(12), 
    @tSignatureRelease varchar(10), 
    @tMeterNumber nvarchar(50), 
    @tSmartPostHubList xml, 
    @tFirstName nvarchar(30), 
    @tMiddleName nvarchar(30), 
    @tLastName nvarchar(30), 
    @tCompany nvarchar(30), 
    @tStreet1 nvarchar(60), 
    @tStreet2 nvarchar(60), 
    @tStreet3 nvarchar(60), 
    @tCity nvarchar(50), 
    @tStateProvCode nvarchar(50), 
    @tPostalCode nvarchar(20), 
    @tCountryCode nvarchar(50), 
    @tPhone nvarchar(25), 
    @tEmail nvarchar(50), 
    @tWebsite nvarchar(50) 

-- Track Progress
SET @workCounter = 0

-- the cursor for cycling through the source table
DECLARE workCursor CURSOR FORWARD_ONLY FOR
SELECT
        [FedexShipperID],
        [RowVersion],
        [AccountNumber],
        [MeterNumber],
        [UseAlternate],
        [Company],
        [ContactName],
        [Address1],
        [Address2],
        [City],
        [StateProvinceCode],
        [PostalCode],
        [CountryCode],
        [ContactEmail],
        [ContactPhone],
        [ContactFax],
        [AlternateCompany],
        [AlternateContactName],
        [AlternateAddress1],
        [AlternateAddress2],
        [AlternateCity],
        [AlternateStateProvinceCode],
        [AlternatePostalCode],
        [AlternateCountryCode],
        [AlternateContactEmail],
        [AlternateContactPhone],
        [AlternateContactFax],
        [SignatureReleaseNumber]
    FROM v2m_FedexShippers

-- open the source table cursor
OPEN workCursor

-- populate source table variables from the source cursor
FETCH NEXT FROM workCursor
INTO
        @sFedexShipperID,
        @sRowVersion,
        @sAccountNumber,
        @sMeterNumber,
        @sUseAlternate,
        @sCompany,
        @sContactName,
        @sAddress1,
        @sAddress2,
        @sCity,
        @sStateProvinceCode,
        @sPostalCode,
        @sCountryCode,
        @sContactEmail,
        @sContactPhone,
        @sContactFax,
        @sAlternateCompany,
        @sAlternateContactName,
        @sAlternateAddress1,
        @sAlternateAddress2,
        @sAlternateCity,
        @sAlternateStateProvinceCode,
        @sAlternatePostalCode,
        @sAlternateCountryCode,
        @sAlternateContactEmail,
        @sAlternateContactPhone,
        @sAlternateContactFax,
        @sSignatureReleaseNumber
WHILE @@FETCH_STATUS = 0
BEGIN
    SET @workCounter = @workCounter + 1

	DECLARE @sFirstName nvarchar(30),
			@sLastName nvarchar(30),
			@sMiddleName nvarchar(30)

	EXEC dbo.v2m_ParseName @sContactName, @sFirstName OUT, @sMiddleName OUT, @sLastName OUT

    SET @tDescription = @sCompany + ' - ' + CAST(@sAccountNumber AS nvarchar(15))	
    SET @tAccountNumber = @sAccountNumber
    SET @tSignatureRelease = @sSignatureReleaseNumber
    SET @tMeterNumber = @sMeterNumber
    SET @tSmartPostHubList = '<Root/>'
    SET @tFirstName = @sFirstName
    SET @tMiddleName = @sMiddleName
    SET @tLastName = @sLastName
    SET @tCompany = @sCompany
    SET @tStreet1 = @sAddress1
    SET @tStreet2 = @sAddress2
    SET @tStreet3 = ''
    SET @tCity = @sCity
    SET @tStateProvCode = @sStateProvinceCode
    SET @tPostalCode = @sPostalCode
    SET @tCountryCode = @sCountryCode
    SET @tPhone = @sContactPhone
    SET @tEmail = @sContactEmail
    SET @tWebsite = ''

    INSERT INTO dbo.FedExAccount  (
        [Description],
        [AccountNumber],
        [SignatureRelease],
        [MeterNumber],
        [SmartPostHubList],
        [FirstName],
        [MiddleName],
        [LastName],
        [Company],
        [Street1],
        [Street2],
        [Street3],
        [City],
        [StateProvCode],
        [PostalCode],
        [CountryCode],
        [Phone],
        [Email],
        [Website]
    )
    VALUES
    (
        @tDescription,
        @tAccountNumber,
        @tSignatureRelease,
        '',
        @tSmartPostHubList,
        @tFirstName,
        @tMiddleName,
        @tLastName,
        @tCompany,
        @tStreet1,
        @tStreet2,
        @tStreet3,
        @tCity,
        @tStateProvCode,
        @tPostalCode,
        @tCountryCode,
        @tPhone,
        @tEmail,
        @tWebsite
    )             

	SET @newAccountKey = @@IDENTITY

	-- record key
	EXEC dbo.v2m_RecordKey @sFedexShipperID, 18 /* FedEx account */, @newACcountKey

	-- create another address origin if needed
	IF (LEN(@sAlternateAddress1) > 0 OR LEN(@sAlternateAddress2) > 0)
	BEGIN
		EXEC dbo.v2m_ParseName @sAlternateContactName, @sFirstName OUT, @sMiddleName OUT, @sLastName OUT

		DECLARE @description nvarchar(50);
		SET @description = 'Alternate for FedEx Account# ' + @tAccountNumber;

		DECLARE @alternateCount int;
		SELECT @alternateCount = COUNT(*) FROM dbo.ShippingOrigin WHERE UPPER([Description]) LIKE UPPER(@description) + '%';

		IF (@alternateCount > 0)
		BEGIN
			SET @description = @description + ' (' + CONVERT(nvarchar(10), @alternateCount + 1) + ')';
		END

		-- setup an origin based on the pickup location
	    INSERT INTO dbo.ShippingOrigin  (
		    [Description],
		    [FirstName],
		    [MiddleName],
		    [LastName],
		    [Company],
		    [Street1],
		    [Street2],
		    [Street3],
		    [City],
		    [StateProvCode],
		    [PostalCode],
		    [CountryCode],
		    [Phone],
		    [Fax],
		    [Email],
		    [Website]
	    )
	    VALUES
	    (
		    @description,
		    @sFirstName,
		    @sMiddleName,
		    @sLastName,
		    @sAlternateCompany,
		    @sAlternateAddress1,
		    @sAlternateAddress2,
		    '',
		    @sAlternateCity,
		    @sAlternateStateProvinceCode,
		    @sAlternatePostalCode,
		    @sAlternateCountryCode,
		    @sAlternateContactPhone,
		    @sAlternateContactFax,
		    @sAlternateContactEmail,
		    ''
	    )             

	END

	-- delete the old record
	DELETE FROM dbo.v2m_FedexShippers WHERE FedexShipperID = @sFedexShipperID

-- fetch next row from source table
FETCH NEXT FROM workCursor
INTO
        @sFedexShipperID,
        @sRowVersion,
        @sAccountNumber,
        @sMeterNumber,
        @sUseAlternate,
        @sCompany,
        @sContactName,
        @sAddress1,
        @sAddress2,
        @sCity,
        @sStateProvinceCode,
        @sPostalCode,
        @sCountryCode,
        @sContactEmail,
        @sContactPhone,
        @sContactFax,
        @sAlternateCompany,
        @sAlternateContactName,
        @sAlternateAddress1,
        @sAlternateAddress2,
        @sAlternateCity,
        @sAlternateStateProvinceCode,
        @sAlternatePostalCode,
        @sAlternateCountryCode,
        @sAlternateContactEmail,
        @sAlternateContactPhone,
        @sAlternateContactFax,
        @sSignatureReleaseNumber
END
CLOSE workCursor
DEALLOCATE workCursor

-- data migration "protocol" demands we return the number of rows/work completed
SELECT @workCounter as WorkCompleted