<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ShipWorks.UI.Controls"
    xmlns:selectors="clr-namespace:ShipWorks.UI.Selectors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ShipWorks.UI;component/Styles/GlobalStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FirstListViewItem" TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="4,2" />
    </Style>

    <Style
        x:Key="DefaultListViewItem"
        BasedOn="{StaticResource FirstListViewItem}"
        TargetType="ListViewItem">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
    </Style>

    <selectors:ListStyleSelector
        x:Key="ListStyleSelector"
        Default="{StaticResource DefaultListViewItem}"
        First="{StaticResource FirstListViewItem}" />

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border
            x:Name="border"
            Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:TokenTextBox}},
                                 Path=ButtonBackground}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFC4E5F6" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                <Setter TargetName="border" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="RoundedButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border
            x:Name="border"
            Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:TokenTextBox}},
                                 Path=ButtonBackground}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True"
            CornerRadius="0 1 1 0">
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFC4E5F6" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF2C628B" />
                <Setter TargetName="border" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                <Setter TargetName="border" Property="BorderThickness" Value="0 1 1 1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ButtonBase" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <Style TargetType="{x:Type local:TokenTextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TokenTextBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            CornerRadius="1 0 0 1">

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <UniformGrid
                            Grid.Column="1"
                            Columns="2"
                            Rows="1">
                            <ToggleButton
                                x:Name="PART_TogglePopupButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,1,0,1"
                                Template="{StaticResource ButtonTemplate}">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource ButtonBase}" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsOpen, ElementName=PART_Popup}" Value="True">
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderThickness" Value="1" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                                <Path
                                    Margin="4"
                                    Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:TokenTextBox}},
                                                   Path=ButtonIconColor}"
                                    Stretch="Uniform"
                                    Style="{StaticResource Path.Material.ChevronDown}" />
                            </ToggleButton>
                            <Button
                                x:Name="PART_EditorButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Style="{StaticResource ButtonBase}"
                                Template="{StaticResource RoundedButtonTemplate}">
                                <Path
                                    Margin="4"
                                    Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:TokenTextBox}},
                                                   Path=ButtonIconColor}"
                                    Stretch="Uniform"
                                    Style="{StaticResource Path.Material.Pencil}" />
                            </Button>
                        </UniformGrid>

                        <Popup
                            x:Name="PART_Popup"
                            IsOpen="{Binding IsChecked, ElementName=PART_TogglePopupButton, Mode=TwoWay}"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=PART_TogglePopupButton}"
                            PopupAnimation="Slide"
                            StaysOpen="false">
                            <Border
                                Background="White"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Border
                                        Grid.Column="0"
                                        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                                        BorderThickness="0,0,1,0">
                                        <Rectangle Width="1" Height="1" />
                                    </Border>

                                    <ListView
                                        x:Name="PART_SuggestionSelector"
                                        Grid.Column="1"
                                        Margin="4,2"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        ItemContainerStyleSelector="{StaticResource ListStyleSelector}">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock
                                                        Margin="0,2"
                                                        FontSize="12"
                                                        FontWeight="bold"
                                                        Text="{Binding Description}" />
                                                    <TextBlock
                                                        Margin="0,2"
                                                        FontSize="12"
                                                        Text="{Binding Xsl}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>