<UserControl x:Class="ShipWorks.Shipping.UI.RatingPanel.RatingPanelControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ui="http://schemas.shipworks.com/ui"
             xmlns:sw="http://schemas.shipworks.com/sw"
             xmlns:local="clr-namespace:ShipWorks.Shipping.UI.RatingPanel"
             xmlns:amz="clr-namespace:ShipWorks.Shipping.UI.Carriers.Amazon.SFP"
             xmlns:upslr="clr-namespace:ShipWorks.Shipping.UI.Carriers.Ups.LocalRating"
             d:DataContext="{d:DesignInstance local:TestRatingPanelViewModel, IsDesignTimeCreatable=True}"

             FontFamily="Tahoma"
             FontSize="8.25 pt"
             FontStyle="Normal"
             FontStretch="Normal"
             FontWeight="Normal"

             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="400"
             UseLayoutRounding="True"
             SnapsToDevicePixels="True"
            >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ShipWorks.UI;component/Styles/GlobalStyle.xaml"/>
                <ResourceDictionary Source="FootnoteTemplates/FootnoteTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ui:ImageToBitmapSourceConverter x:Key="ImageToBitmapSource" />
            <ui:InvertBooleanConverter x:Key="InvertBoolean" />
            <ui:HalfCentCurrencyConverter x:Key="HalfCentCurrency" />
            <ui:TypeBasedTemplateSelector x:Key="TypeBasedTemplateSelector" />
            <ui:BooleanComparisonConverter x:Key="BooleanAnd" BooleanOperator="{x:Static ui:BooleanOperator.And}" />
            <ui:BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <ui:BooleanToVisibilityConverter x:Key="BooleanToVisibilityInverted" Invert="True" />

            <FrameworkElement x:Key="ProxyElement"
                          DataContext="{Binding}"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <DockPanel>
        <Grid Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ContentControl Visibility="Collapsed"
                            Content="{StaticResource ProxyElement}"/>

            <DataGrid Grid.Row="1"
                      Style="{StaticResource DataGrid.Static}"
                      IsEnabled="{Binding IsLoading, Converter={StaticResource InvertBoolean}}"
                      Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityInverted}}"
                      ItemsSource="{Binding Rates}"
                      SelectedItem="{Binding SelectedRate}"
                      CanUserResizeColumns="True"
                      BorderThickness="0">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="IsEnabled">
                            <Setter.Value >
                                <MultiBinding Converter="{StaticResource BooleanAnd}">
                                    <Binding Path="DataContext.AllowSelection"
                                                     Mode="OneWay"
                                                     RelativeSource="{RelativeSource AncestorType=UserControl}" />
                                    <Binding Path="Selectable" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Height" Value="20" />
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="26"
                                            CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Style="{StaticResource Image.Icon}"
                                       Source="{Binding ProviderLogo, Converter={StaticResource ImageToBitmapSource}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Service"
                                        Width="*"
                                        Binding="{Binding Description}"
                                        ElementStyle="{StaticResource DataGrid.Element.Default}">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Days"
                                        Binding="{Binding Days}"
                                        ElementStyle="{StaticResource DataGrid.Element.Default}" />
                    <DataGridTextColumn Header="Shipping"
                                        ElementStyle="{StaticResource DataGrid.Element.Amount.Other}"
                                        Visibility="{Binding DataContext.ShowShipping,
                                            Source={StaticResource ProxyElement},
                                            Converter={StaticResource BooleanToVisibility}}"
                                        Binding="{Binding Shipping, Converter={StaticResource HalfCentCurrency}}" />
                    <DataGridTextColumn Header="Tax"
                                        ElementStyle="{StaticResource DataGrid.Element.Amount.Other}"
                                        Visibility="{Binding DataContext.ShowTaxes,
                                            Source={StaticResource ProxyElement},
                                            Converter={StaticResource BooleanToVisibility}}"
                                        Binding="{Binding Taxes, Converter={StaticResource HalfCentCurrency}}" />
                    <DataGridTextColumn Header="Duty"
                                        ElementStyle="{StaticResource DataGrid.Element.Amount.Other}"
                                        Visibility="{Binding DataContext.ShowDuties,
                                            Source={StaticResource ProxyElement},
                                            Converter={StaticResource BooleanToVisibility}}"
                                        Binding="{Binding Duties, Converter={StaticResource HalfCentCurrency}}" />
                    <DataGridTemplateColumn Header="Rate"
                                        Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding FormattedAmount}"
                                           Style="{StaticResource DataGrid.Element.Amount}"
                                           Visibility="{Binding Selectable, Converter={StaticResource BooleanToVisibility}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <Border Grid.Row="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Margin="5, 32, 0, 0"
                    Visibility="{Binding ShowEmptyMessage, Converter={StaticResource BooleanToVisibility}}">
                <TextBlock Text="{Binding EmptyMessage}" Style="{StaticResource TextBlock.Empty}" />
            </Border>

            <ListBox Grid.Row="2"
                     Margin="4 0 0 0"
                     VerticalAlignment="Bottom"
                     BorderBrush="Transparent"
                     ItemTemplateSelector="{StaticResource TypeBasedTemplateSelector}"
                     ItemsSource="{Binding Footnotes}"
                     Visibility="{Binding ShowFootnotes,Converter={StaticResource BooleanToVisibility}}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <!-- Don't let the row be selected -->
                        <Setter Property="Focusable" Value="false"/>

                        <!-- Hide hover color change -->
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ui:TypeBasedTemplateSelector.Templates>
                    <ui:Template Value="{x:Type amz:AmazonSFPCarrierTermsAndConditionsNotAcceptedFootnoteViewModel}"
                                 DataTemplate="{StaticResource AmazonCarrierTermsAndConditionsNotAcceptedFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type amz:AmazonSFPSameDayNotAvailableFootnoteViewModel}"
                                 DataTemplate="{StaticResource AmazonSameDayNotAvailableFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:BrokerExceptionsRateFootnoteViewModel}"
                                 DataTemplate="{StaticResource BrokerExceptionsRateFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:CounterRatesInvalidStoreAddressFootnoteViewModel}"
                                 DataTemplate="{StaticResource CounterRatesInvalidStoreAddressFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:ExceptionsRateFootnoteViewModel}"
                                 DataTemplate="{StaticResource ExceptionsRateFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:Express1DiscountedRateFootnoteViewModel}"
                                 DataTemplate="{StaticResource Express1DiscountedRateFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:Express1RateNotQualifiedFootnoteViewModel}"
                                 DataTemplate="{StaticResource Express1RateNotQualifiedFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:Express1RatePromotionFootnoteViewModel}"
                                 DataTemplate="{StaticResource Express1RatePromotionFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:InformationFootnoteViewModel}"
                                 DataTemplate="{StaticResource InformationFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:ShippingAccountRequiredForRatingFootnoteViewModel}"
                                 DataTemplate="{StaticResource ShippingAccountRequiredForRatingFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:UpsPromoFootnoteViewModel}"
                                 DataTemplate="{StaticResource UpsPromoFootnoteViewModelTemplate}"/>
                    <ui:Template Value="{x:Type sw:UspsRateDiscountedFootnoteViewModel}"
                                 DataTemplate="{StaticResource UspsRateDiscountedFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:UspsRateNotQualifiedFootnoteViewModel}"
                                 DataTemplate="{StaticResource UspsRateNotQualifiedFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type sw:UspsRatePromotionFootnoteViewModel}"
                                 DataTemplate="{StaticResource UspsRatePromotionFootnoteViewModelTemplate}" />
                    <ui:Template Value="{x:Type upslr:UpsLocalRatingDisabledFootnoteViewModel}"
                                 DataTemplate="{StaticResource UpsLocalRatingDisabledFootnoteViewModelTemplate}" />
                </ui:TypeBasedTemplateSelector.Templates>
            </ListBox>

            <ui:WaitSpinner Grid.RowSpan="3"
                            Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibility}}">
                Checking rates...
            </ui:WaitSpinner>
        </Grid>
    </DockPanel>
</UserControl>
