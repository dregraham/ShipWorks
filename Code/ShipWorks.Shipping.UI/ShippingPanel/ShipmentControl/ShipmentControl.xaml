<UserControl x:Class="ShipWorks.Shipping.UI.ShippingPanel.ShipmentControl.ShipmentControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:ui="http://schemas.shipworks.com/ui"
             xmlns:weight="clr-namespace:ShipWorks.Shipping.UI.ShippingPanel.Weight"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:insurancePromoControl="clr-namespace:ShipWorks.Shipping.UI.ShippingPanel.InsurancePromoControl"
             mc:Ignorable="d"
             Grid.IsSharedSizeScope="True" d:DesignWidth="393.72">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ShipWorks.Shipping.UI;component/ShippingPanel/Styles/ServiceControlStyle.xaml"/>
                <ResourceDictionary Source="/ShipWorks.Shipping.UI;component/Styles/EmptyButtonStyle.xaml"/>
                <ResourceDictionary Source="/ShipWorks.Shipping.UI;component/Styles/Controls/LinkButton.xaml"/>
                <ResourceDictionary Source="/ShipWorks.Shipping.UI;component/Templates/BlinkingRedErrorTemplate.xaml"/>
                <ResourceDictionary Source="/ShipWorks.Shipping.UI;component/Templates/TextBoxErrorTemplate.xaml"/>
                <ResourceDictionary Source="/ShipWorks.Shipping.UI;component/Templates/DatePickerErrorTemplate.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />

            <ui:VisibleWhenEqualToParameterConverter x:Key="VisibleWhenEqualToParameter" />
            <ui:VisibleWhenEqualToParameterConverter x:Key="VisibleWhenNotEqualToParameter" Invert="true" />
            <ui:ValueEqualToParameterConverter x:Key="ValueEqualToParameter" />
            <ui:BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <ui:StringEmptyWhenEqualToParameterConverter x:Key="StringEmptyWhenEqualToParameter" />
            <ui:EmptyMoneyConverter x:Key="EmptyMoney" />

            <Style TargetType="{x:Type RowDefinition}" x:Key="SupportsDimensionsRowStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SupportsDimensions}" Value="True">
                        <Setter Property="Height" Value="Auto"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SupportsDimensions}" Value="False">
                        <Setter Property="Height" Value="0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type RowDefinition}" x:Key="SupportsMultiplePackagesRowStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SupportsMultiplePackages}" Value="True">
                        <Setter Property="Height" Value="Auto"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SupportsMultiplePackages}" Value="False">
                        <Setter Property="Height" Value="0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type RowDefinition}" x:Key="SupportsPackageTypesRowStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SupportsPackageTypes}" Value="True">
                        <Setter Property="Height" Value="Auto"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SupportsPackageTypes}" Value="False">
                        <Setter Property="Height" Value="0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75" SharedSizeGroup="Label" />
                <ColumnDefinition Width="*" SharedSizeGroup="Value" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource GridLabel}">Service:</TextBlock>
            <ComboBox Grid.Row="0" Grid.Column="1"
                ItemsSource="{Binding Services, UpdateSourceTrigger=PropertyChanged}"
                SelectedValue="{Binding ServiceType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectedValuePath="Key"
                DisplayMemberPath="Value" />

            <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource GridLabel}">Ship date:</TextBlock>
            <DatePicker Grid.Row="1" Grid.Column="1"
                        Width="125" HorizontalAlignment="Left"
                        Margin="4 0 0 0"
                        Style="{DynamicResource DatePickerErrorTemplate}"
                        SelectedDate="{Binding ShipDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}"/>
        </Grid>
        <Grid Visibility="{Binding SupportsMultiplePackages,Converter={StaticResource BooleanToVisibility}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="Label" />
                <ColumnDefinition SharedSizeGroup="Value" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0"
                Style="{StaticResource GridLabel}">Packages:</TextBlock>

            <Grid Grid.Column="1" Margin="0,0,0,4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ListView x:Name="PackagesList"
                          Margin="4 0 0 0"
                          SelectionMode="Single"
                          MaxHeight="150"
                          ItemsSource="{Binding PackageAdapters}"
                          SelectedValue ="{Binding SelectedPackageAdapter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Packages (Select to Edit)" Width="Auto"
                            DisplayMemberBinding="{Binding Index, StringFormat=Package \{0\}}"/>
                        </GridView>
                    </ListView.View>
                </ListView>

                <StackPanel Grid.Column="1">
                    <StackPanel.Resources>
                        <Style TargetType="Image">
                            <Setter Property="Width" Value="16" />
                            <Setter Property="Height" Value="16" />
                            <Setter Property="Margin" Value="0,0,5,0" />
                        </Style>
                        <Style TargetType="Button">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="Padding" Value="4,2,6,2" />
                        </Style>
                    </StackPanel.Resources>
                    <Button Command="{Binding AddPackageCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/ShipWorks.Core;component/Resources/add2.png" />
                            <TextBlock>Add</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Command="{Binding DeletePackageCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/ShipWorks.Core;component/Resources/delete2.png"/>
                            <TextBlock>Delete</TextBlock>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
        <Grid Visibility="{Binding SupportsPackageTypes,Converter={StaticResource BooleanToVisibility}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="Label" />
                <ColumnDefinition SharedSizeGroup="Value" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource GridLabel}">Packaging:</TextBlock>
            <ComboBox Grid.Row="0" Grid.Column="1"
                ItemsSource ="{Binding PackageTypes, UpdateSourceTrigger=PropertyChanged}"
                SelectedValue="{Binding SelectedPackageAdapter.PackagingType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                DisplayMemberPath="Name" />
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="Label" />
                <ColumnDefinition SharedSizeGroup="Value" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Style="{StaticResource GridLabel}">Weight:</TextBlock>
            <weight:WeightControl Grid.Column="1"
                Margin="0,0,0,0"
                HorizontalAlignment="Left"
                Weight="{Binding TotalWeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}"/>
        </Grid>
        <Grid Visibility="{Binding SupportsDimensions,Converter={StaticResource BooleanToVisibility}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="Label" />
                <ColumnDefinition SharedSizeGroup="Value" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource GridLabel}">Dimensions:</TextBlock>
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                <ComboBox MinWidth="139"
                    ItemsSource ="{Binding DimensionsProfiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedValue="{Binding SelectedDimensionsProfile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}" />
                                <TextBlock>
                                    <TextBlock.Visibility>
                                        <Binding Path="DimensionsProfileID" Converter="{StaticResource VisibleWhenNotEqualToParameter}">
                                            <Binding.ConverterParameter>
                                                <sys:Int64>0</sys:Int64>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </TextBlock.Visibility>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat=" ({0} x {1} x {2})">
                                            <Binding Path="Length" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Width" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Height" UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Button Margin="5"
                        Content="Manage..."
                        Style="{StaticResource LinkButtonStyle}"
                        Click="OnManageDimensionsProfiles" />
            </StackPanel>
            <!--
                Dimensions
            -->
            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                <StackPanel.IsEnabled>
                    <Binding Path="SelectedDimensionsProfile.DimensionsProfileID" Converter="{StaticResource ValueEqualToParameter}">
                        <Binding.ConverterParameter>
                            <sys:Int64>0</sys:Int64>
                        </Binding.ConverterParameter>
                    </Binding>
                </StackPanel.IsEnabled>
                <TextBlock Margin="3 1 0 0">L:</TextBlock>
                <TextBox Width="40" Margin="1 0 5 0" x:Name="dimsLength" Style="{DynamicResource TextBoxErrorTemplate}"
                    Text="{Binding DimsLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}" >
                    <i:Interaction.Behaviors>
                        <ui:TextBoxInputRegExBehavior RegularExpression="^-?\d+(,\d+)*(\.\d+(e\d+)?)?(\.)?$" EmptyValue="" MaxLength="3" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBlock Margin="10 1 0 0">W:</TextBlock>
                <TextBox Width="40" Margin="1 0 5 0" Style="{DynamicResource TextBoxErrorTemplate}"
                    Text="{Binding DimsWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}">
                    <i:Interaction.Behaviors>
                        <ui:TextBoxInputRegExBehavior RegularExpression="^-?\d+(,\d+)*(\.\d+(e\d+)?)?(\.)?$" EmptyValue="0" MaxLength="3" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBlock Margin="10 1 0 0">H:</TextBlock>
                <TextBox Width="40" Margin="1 0 5 0" Style="{DynamicResource TextBoxErrorTemplate}"
                    Text="{Binding DimsHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                        ValidatesOnDataErrors=true, NotifyOnValidationError=true}" >
                    <i:Interaction.Behaviors>
                        <ui:TextBoxInputRegExBehavior RegularExpression="^-?\d+(,\d+)*(\.\d+(e\d+)?)?(\.)?$" EmptyValue="0" MaxLength="3" />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBlock Margin="10 1 0 0">in.</TextBlock>
            </StackPanel>

            <!--
                Add Weight
            -->
            <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="4 5 0 0">
                <TextBlock Margin="0 4 0 0" Style="{StaticResource GridLabel}">Add to weight</TextBlock>
                <CheckBox Margin="4 4 0 0"
                    IsChecked="{Binding ApplyAdditionalWeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <weight:WeightInput
                    Margin="0,1,0,0"
                    HorizontalAlignment="Left"
                    Width="60"
                    Weight="{Binding AdditionalWeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <weight:WeightInput.IsEnabled>
                        <Binding Path="SelectedDimensionsProfile.DimensionsProfileID" Converter="{StaticResource ValueEqualToParameter}">
                            <Binding.ConverterParameter>
                                <sys:Int64>0</sys:Int64>
                            </Binding.ConverterParameter>
                        </Binding>
                    </weight:WeightInput.IsEnabled>
                </weight:WeightInput>
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="Label" />
                <ColumnDefinition SharedSizeGroup="Value" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource GridLabel}"
                       Text="{Binding InsuranceViewModel.InsuranceLabelDisplayText, FallbackValue='Insurance:'}"></TextBlock>
            <StackPanel  Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                <CheckBox Margin="4 4 0 0" Name="IsInsured"
                    Content="{Binding InsuranceViewModel.InsuranceTypeLabelDisplayText, FallbackValue='Insurance Type'}"
                    IsChecked="{Binding InsuranceViewModel.Insurance}"/>
            </StackPanel>

            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                <TextBlock Style="{StaticResource GridLabel}"
                           Text="{Binding InsuranceViewModel.InsuranceValueLabelDisplayText, FallbackValue='Insured Value:'}"></TextBlock>
                <TextBox Width="80"  Margin="4 4 0 0" Style="{DynamicResource TextBoxErrorTemplate}"
                         IsEnabled="{Binding InsuranceViewModel.Insurance}"
                         Text="{Binding InsuranceViewModel.DeclaredValue, StringFormat=c, FallbackValue='50.50',
                         Converter={StaticResource EmptyMoney},
                         TargetNullValue='', ValidatesOnDataErrors=true, NotifyOnValidationError=true}"/>

                <insurancePromoControl:InsurancePromoControl  DataContext="{Binding Path=InsuranceViewModel, Mode=OneWay}"/>
            </StackPanel>
        </Grid>
    </StackPanel>
</UserControl>