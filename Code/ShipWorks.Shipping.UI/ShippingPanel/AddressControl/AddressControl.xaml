<UserControl x:Class="ShipWorks.Shipping.UI.ShippingPanel.AddressControl.AddressControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ShipWorks.Shipping.UI.ShippingPanel.AddressControl"
             xmlns:props="clr-namespace:ShipWorks.Shipping.UI.AttachedProperties"
             xmlns:geography="clr-namespace:Interapptive.Shared.Business.Geography;assembly=Interapptive.Shared"
             xmlns:valueConverters="clr-namespace:ShipWorks.Shipping.UI.ValueConverters"
             xmlns:controls="clr-namespace:ShipWorks.Shipping.UI.Controls"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:AddressViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="380" d:DesignWidth="500">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ShipWorks.Shipping.UI;component/ShippingPanel/Styles/ServiceControlStyle.xaml" />
                <ResourceDictionary Source="/ShipWorks.Shipping.UI;component/Styles/Controls/LinkButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <valueConverters:StateProvinceConverter x:Key="StateProvinceConverter" />
            <valueConverters:EnumDescriptionConverter x:Key="EnumDescription" />
            <valueConverters:EnumImageConverter x:Key="EnumImage" />
            <valueConverters:BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel>
        <TextBlock Style="{StaticResource Header}">Name</TextBlock>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0"
                       Style="{StaticResource GridLabel}">Full Name:</TextBlock>
            <TextBox Grid.Row="0" Grid.Column="1"
                     Text="{Binding FullName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Grid.Row="1" Grid.Column="0"
                       Style="{StaticResource GridLabel}">Company:</TextBlock>
            <TextBox Grid.Row="1" Grid.Column="1"
                     props:EntityFieldLength.FieldName="PersonCompany"
                     Text="{Binding Company, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock Style="{StaticResource Header}">Address</TextBlock>
            <controls:AlignmentWrapPanel Grid.Column="1"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Stretch"
                    Visibility="{Binding IsAddressValidationEnabled, Converter={StaticResource BooleanToVisibility}}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Image VerticalAlignment="Center"
                           Margin="4,0,8,0"
                           Source="{Binding ValidationStatus, Converter={StaticResource EnumImage}}" />
                    <TextBlock VerticalAlignment="Center"
                           Text="{Binding ValidationStatus, Converter={StaticResource EnumDescription}}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center">
                    <StackPanel.Resources>
                        <Style BasedOn="{StaticResource LinkButtonStyle}"
                               TargetType="Button" />
                    </StackPanel.Resources>
                    <Button Visibility="{Binding CanValidateAddress, Converter={StaticResource BooleanToVisibility}}"
                            Command="{Binding ValidateCommand}">
                        Validate
                    </Button>
                    <Button Visibility="{Binding CanShowSuggestions, Converter={StaticResource BooleanToVisibility}}"
                            props:PopupClickManager.OpenPopup="{Binding ElementName=AddressPopup}">
                        Suggestions
                    </Button>
                    <Button Visibility="{Binding CanShowValidationMessage, Converter={StaticResource BooleanToVisibility}}"
                            Command="{Binding ShowValidationMessageCommand}">
                        Details...
                    </Button>
                </StackPanel>
            </controls:AlignmentWrapPanel>

            <TextBlock Grid.Row="1"
                       Grid.Column="0"
                       Style="{StaticResource GridLabel}">Street:</TextBlock>
            <TextBox Grid.Row="1" Grid.Column="1"
                     MinLines="3" MaxLines="3"
                     AcceptsReturn="True"
                     MaxLength="180"
                     Text="{Binding Street, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Grid.Row="2" Grid.Column="0"
                       Style="{StaticResource GridLabel}">City:</TextBlock>
            <TextBox Grid.Row="2" Grid.Column="1"
                     props:EntityFieldLength.FieldName="PersonCity"
                     Text="{Binding City, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Grid.Row="3" Grid.Column="0"
                       Style="{StaticResource GridLabel}">State \ Prov:</TextBlock>
            <ComboBox Grid.Row="3" Grid.Column="1"
                      props:EntityFieldLength.FieldName="PersonState"
                      ItemsSource="{Binding SelectedValue,ElementName=CountryComboBox,Converter={StaticResource StateProvinceConverter}}"
                      Text="{Binding StateProvCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEditable="True" />

            <TextBlock Grid.Row="4" Grid.Column="0"
                       Style="{StaticResource GridLabel}">Postal Code:</TextBlock>
            <TextBox Grid.Row="4" Grid.Column="1"
                     props:EntityFieldLength.FieldName="PersonPostal"
                     Text="{Binding PostalCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Grid.Row="5" Grid.Column="0"
                       Style="{StaticResource GridLabel}">Country:</TextBlock>
            <ComboBox Grid.Row="5" Grid.Column="1"
                      x:Name="CountryComboBox"
                      DisplayMemberPath="Key"
                      SelectedValuePath="Value"
                      SelectedValue="{Binding CountryCode}"
                      ItemsSource="{Binding Source={x:Static geography:CountryList.Countries}, Mode=OneTime}"></ComboBox>
        </Grid>

        <TextBlock Style="{StaticResource Header}">Contact Information</TextBlock>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0"
                       Style="{StaticResource GridLabel}">Email:</TextBlock>
            <TextBox Grid.Row="0" Grid.Column="1"
                     props:EntityFieldLength.FieldName="PersonEmail"
                     Text="{Binding Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Grid.Row="1" Grid.Column="0"
                        Style="{StaticResource GridLabel}">Phone:</TextBlock>
            <TextBox Grid.Row="1" Grid.Column="1"
                     props:EntityFieldLength.FieldName="PersonPhone"
                     Text="{Binding Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <Popup Name="AddressPopup" AllowsTransparency="True"
               Placement="Custom" StaysOpen="False">
            <Border Margin="0,0,8,8"
                    Padding="0,2,0,2"
                    Background="#FFF0F0F0"
                    BorderBrush="DarkGray"
                    BorderThickness="1">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                </Border.Effect>

                <ItemsControl ItemsSource="{Binding AddressSuggestions}">
                    <ItemsControl.Resources>
                        <Style x:Key="AddressBorderStyle" TargetType="Border">
                            <Setter Property="Padding" Value="26,4,12,4" />
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF91C9F7"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Border Style="{StaticResource AddressBorderStyle}"
                                        props:PopupClickManager.ClosePopup="{Binding ElementName=AddressPopup}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp" >
                                            <cmd:EventToCommand
                                             PassEventArgsToCommand="False"
                                             CommandParameter="{Binding Value}">
                                                <cmd:EventToCommand.Command>
                                                    <Binding Path="DataContext.SelectAddressSuggestionCommand"
                                                    RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}" />
                                                </cmd:EventToCommand.Command>
                                            </cmd:EventToCommand>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBlock Text="{Binding Key}" />
                                </Border>

                                <Separator Margin="26,4,2,4"
                                           Visibility="{Binding Value.IsOriginal, Converter={StaticResource BooleanToVisibility}}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </Popup>
    </StackPanel>
</UserControl>
