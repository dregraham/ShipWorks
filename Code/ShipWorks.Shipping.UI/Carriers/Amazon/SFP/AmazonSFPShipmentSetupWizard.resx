<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nwAAAABJRU5ErkJggg==
</value>
  </data>
</root>