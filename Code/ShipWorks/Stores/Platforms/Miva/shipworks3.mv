<MIVA STANDARDOUTPUTLEVEL = "html, compresswhitespace" />
<MvCOMMENT>-                                                                 |
|                                                                            |
| Miva Merchant <= v4.13                                                     |
|                                                                            |
| This file and the source codes contained herein are the property           |
| of Interapptive, Inc.  Use of this file is restricted to the specific      |
| terms and conditions in the License Agreement associated with this         |
| file.  Distribution of this file or portions of this file for uses         |
| not covered by the License Agreement is not allowed without a written      |
| agreement signed by an officer of Interapptive, Inc.                       |
|                                                                            |
| The code contained herein may not be reproduced, copied or                 |
| redistributed in any form, as part of another product or otherwise.        |
| Modified versions of this code may not be sold or redistributed.           |
|                                                                            |
| Copyright 2005-2012 Interapptive, Inc.  All rights reserved.               |
| http://www.interapptive.com/                                               |
|                                                                            |
</MvCOMMENT>                                                                 |

<MvCOMMENT>
| Prefix         : shipworks
| Next Error     : SW-00031
</MvCOMMENT>

<MvEVAL EXPR="{ Main() }">

<MvFUNCTION NAME = "Module_Type" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "STOREUTIL">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Code" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "ShipWorks3">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Name" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "ShipWorks3 Miva Module">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Description" PARAMETERS = "param" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "ShipWorks3" >
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Provider" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "Interapptive, Inc">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_API_Version" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "4.0">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Version" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "3.0.0.0">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Is_Wizardable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "0">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Install" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade" PARAMETERS = "version" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Install_Store" STANDARDOUTPUTLEVEL = "" ERROROUTPUTLEVEL = "syntax, expression">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Pack_Store" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Uninstall_Store" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Upgrade_Store" PARAMETERS = "version" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Main">

    <MvCOMMENT><!-- We will handle MvDO errors ourself --></MvCOMMENT>
    <MIVA MvDO_Error = "nonfatal, nodisplay">

    <MvEVAL EXPR = "{ OpenXmlDocument() }"> 
    <MvEVAL EXPR = "{ SetupEnvironment() }">
    
    <MvCOMMENT><!-- Dont do anything if no user\pass are specified--></MvCOMMENT>   
    <MvIF EXPR = "{ NOT g.username AND NOT g.password }">
        <MvEVAL EXPR = "{ CloseXmlDocument() }">
        <MvEXIT>
    </MvIF>
    
    <MvCOMMENT><!-- Test for admin rights --></MvCOMMENT>
    <MvDO FILE = "{ g.Relative_Library_Utilities }" NAME = "l.user_id" VALUE = "{ DetermineAdminUser() }">
	  <MvIF EXPR = "{ NOT l.user_id }">
        <MvEVAL EXPR = "{ ErrorTermination('SW-00003', 'ShipWorks could not log on as a Miva Merchant administrator with the specified username and password.' ) }">
    </MvIF>
    
    <MvCOMMENT><!-- Make sure the module even exists in Miva Merchant at all --></MvCOMMENT>
    <MvASSIGN NAME = "l.moduleCode" VALUE = "{ Module_Code() }">
    <MvDO FILE = "{ g.Relative_Library_DB }" NAME = "l.found" VALUE = "{ Module_Find_Code( l.moduleCode ) }">
	  <MvIF EXPR = "{ NOT l.found }">
        <MvEVAL EXPR = "{ ErrorTermination('SW-00014', g.Error_Message ) }">
    </MvIF>

    <MvCOMMENT><!-- Open the store.  Special case: if the action is to GetStores, we dont try to open the store --></MvCOMMENT>
    <MvIF EXPR = "{ g.Action NE 'getstores' }">
        <MvEVAL EXPR = "{ OpenStore() }">
        
        <MvCOMMENT><!-- See if the module is active for the store --></MvCOMMENT>
        <MvDO FILE = "{ g.Relative_Library_DB }" NAME = "l.ok" VALUE = "{ StoreModule_Installed(Modules.d.id) }">
	      <MvIF EXPR = "{ NOT l.ok }">
            <MvEVAL EXPR = "{ ErrorTermination('SW-00013', 'The ShipWorks module is installed, but not assigned to the store: ' $ Stores.d.name ) }">
        </MvIF>
                
    </MvIF>

     <MvIF EXPR="{ g.Action NE '' }">
        <Parameters>
          <Action><MvEVAL EXPR="{ g.Action }"></Action>
          <Secure><MvEVAL EXPR="{ g.Secure }"></Secure>
          <StoreCode><MvEVAL EXPR="{ g.StoreCode }"></StoreCode>
          <Start><MvEVAL EXPR="{ g.Start }"></Start>
          <MaxCount><MvEVAL EXPR="{ g.MaxCount }" ></MaxCount>
          <SebenzaACD><MvEVAL EXPR="{ g.SebenzaACD }" ></SebenzaACD>
       </Parameters>
    </MvIF>

    <MvCOMMENT><!--  Process the action --></MvCOMMENT>
    <MvIF EXPR = "{ g.Action EQ 'getmodule'  }">       <MvEVAL EXPR = "{ Action_GetModule()    }">        </MvIF>
    <MvIF EXPR = "{ g.Action EQ 'getstores'  }">       <MvEVAL EXPR = "{ Action_GetStores()    }">        </MvIF>
    <MvIF EXPR = "{ g.Action EQ 'getstore' }">         <MvEVAL EXPR = "{ Action_GetStore()     }">        </MvIF>
    <MvIF EXPR = "{ g.Action EQ 'getorders'  }">       <MvEVAL EXPR = "{ Action_GetOrders()    }">        </MvIF>
    <MvIF EXPR = "{ g.Action EQ 'getcount'   }">       <MvEVAL EXPR = "{ Action_GetCount()     }">        </MvIF>
    <MvIF EXPR = "{ g.Action EQ 'getnextorderid'}">    <MvEVAL EXPR = "{ Action_GetNextOrderID()  }">        </MvIF>

    <MvCOMMENT><!--  Finished! --></MvCOMMENT>
    <MvEVAL EXPR = "{ CloseXmlDocument() }"> 
    
</MvFUNCTION>

<MvFUNCTION NAME = "OpenXmlDocument">
    <?xml version="1.0" standalone="yes"?>
    <ShipWorks moduleVersion="{ Module_Version() }" schemaVersion="1.0.0">
</MvFUNCTION>

<MvFUNCTION NAME = "CloseXmlDocument">
    </ShipWorks>
	<MvDO FILE = "{ g.Relative_Library_DB }" NAME = "l.ok" VALUE = "{ AdminSession_Delete( g.Session_ID ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "ErrorTermination" PARAMETERS = "code, message">
    <MvEVAL EXPR = "{ OutputErrorXml(l.code, l.message) }">
    <MvEVAL EXPR = "{ CloseXmlDocument() }">
    <MvEXIT>
</MvFUNCTION>

<MvFUNCTION NAME = "OutputErrorXml" PARAMETERS = "code, message">
	<Error>
	    <Code><MvEVAL EXPR="{ encodeentities( l.code ) }"></Code>
	    <Description><MvEVAL EXPR="{ encodeentities( l.message ) }"></Description>
	</Error>
</MvFUNCTION>

<MvFUNCTION NAME = "SetupEnvironment">
    <MvASSIGN NAME = "g.IsCompiled" VALUE = "{ '.mvc' CIN documenturl }">
        
    <MvIF EXPR = "{ g.IsCompiled }">
        <MvDO FILE = "../../lib/config.mvc">
    <MvELSE>
        <MvDO FILE = "../../lib/config.mv">
    </MvIF>
    <MvIF EXPR = "{ MvDO_Error }"><MvEVAL EXPR = "{ ErrorTermination('SW-00006', MvDO_Error) }"></MvIF>
    
    <MvASSIGN NAME="g.Relative_Library_DB"            VALUE="{'../../' $ g.Library_DB}">
    <MvASSIGN NAME="g.Relative_Library_Utilities"     VALUE="{'../../' $ g.Library_Utilities}">
    <MvASSIGN NAME="g.Relative_Feature_ATT_DB"        VALUE="{'../../' $ g.Feature_ATT_DB}">

    <MvASSIGN NAME = "g.Version_Mismatch" VALUE = 0>
    <MvDO FILE = "{ g.Relative_Library_DB }" NAME = "l.ok" VALUE = "{ OpenDataFiles( g.Merchant_Version ) }">
        <MvIF EXPR = "{ MvDO_Error }"><MvEVAL EXPR = "{ ErrorTermination('SW-00007', MvDO_Error) }"></MvIF>

    <MvIF EXPR = "{ NOT l.ok }">
	    <MvIF EXPR = "{ NOT g.Version_Mismatch }">
		    <MvEVAL EXPR = "{ ErrorTermination('SW-00001', 'Miva Merchant has not been initialized.  Please use the Miva Merchant Setup script to initialize the required data files.' ) }">
	    </MvIF>
    <MvELSE>
	    <MvDO FILE = "{ g.Relative_Library_Utilities }" NAME = "g.Session_ID" VALUE = "{ DetermineSessionID() }">
            <MvIF EXPR = "{ MvDO_Error }"><MvEVAL EXPR = "{ ErrorTermination('SW-00008', MvDO_Error) }"></MvIF>
    </MvIF>
    
</MvFUNCTION>

<MvFUNCTION NAME = "OpenStore">
  <MvCOMMENT><!-- Has to be at least 1 store --></MvCOMMENT>
	<MvDO FILE = "{ g.Relative_Library_DB }" NAME = "g.Store_Count" VALUE = "{ Store_Count() }">
	<MvIF EXPR = "{ g.Store_Count EQ 0 }">
		<MvEVAL EXPR = "{ ErrorTermination('SW-00004', 'No stores exist.  Please use the administration utility to create one.' ) }">
	</MvIF>

  <MvCOMMENT><!-- Figure out what store to use if its not set --></MvCOMMENT>
	<MvIF EXPR = "{ len( g.StoreCode ) EQ 0 }">
		<MvIF EXPR = "{ g.Store_Count EQ 1 }">
			<MvDO FILE = "{ g.Relative_Library_DB }" NAME = "l.ok" VALUE = "{ Store_FindFirst() }">
			<MvIF EXPR = "{ l.ok }">
				<MvASSIGN NAME = "g.StoreCode" VALUE = "{ Stores.d.code }">
			</MvIF>
		<MvELSE>
			<MvEVAL EXPR = "{ ErrorTermination('SW-00005', 'Multiple stores exist.  Please select a store.' ) }">
		</MvIF>			    
	</MvIF>

    <MvCOMMENT><!--  Open the store --></MvCOMMENT>
	<MvDO FILE = "{ g.Relative_Library_DB }" NAME = "l.ok" VALUE = "{ Store_Open( g.StoreCode ) }">
	<MvIF EXPR = "{ NOT l.ok }">
	    <MvEVAL EXPR = "{ ErrorTermination('SW-00009', g.Error_Message) }">
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Action_GetModule">

  <Module>

    <Platform>Miva Merchant 4</Platform>
    <Developer>Interapptive, Inc. (support@interapptive.com)</Developer>
    
    <Capabilities>
      <DownloadStrategy>ByModifiedTime</DownloadStrategy>
      <OnlineCustomerID supported="true" dataType="numeric" />
      <OnlineStatus supported="false" />
      <OnlineShipmentUpdate supported="false" />
    </Capabilities>
    
  </Module>

</MvFUNCTION>

<MvFUNCTION NAME = "Action_GetStores">
    <Stores>
	    <MvGO NAME = "Stores" ROW = "top">
	    <MvWHILE EXPR = "{ NOT Stores.d.EOF }">
	        <Store>
	            <Code><MvEVAL EXPR="{ encodeentities( Stores.d.code ) }"></Code>
	            <Name><MvEVAL EXPR="{ encodeentities( Stores.d.name ) }"></Name>
	        </Store>
	    <MvSKIP NAME = "Stores" ROWS = 1>
	    </MvWHILE>
	</Stores>
</MvFUNCTION>

<MvFUNCTION NAME = "Action_GetStore">

    <Store>
      
        <Name><MvEVAL EXPR="{ encodeentities( Stores.d.name ) }"></Name>
        <CompanyOrOwner><MvEVAL EXPR="{ encodeentities( Stores.d.company ) }"></CompanyOrOwner>
        <Email><MvEVAL EXPR="{ encodeentities( Stores.d.email ) }"></Email>
        <Street1><MvEVAL EXPR="{ encodeentities( Stores.d.address ) }"></Street1>
        <City><MvEVAL EXPR="{ encodeentities( Stores.d.city ) }"></City>
        <State><MvEVAL EXPR="{ encodeentities( Stores.d.state ) }"></State>
        <PostalCode><MvEVAL EXPR="{ encodeentities( Stores.d.zip ) }"></PostalCode>
        <Country><MvEVAL EXPR="{ encodeentities( Stores.d.country ) }"></Country>
        <Phone><MvEVAL EXPR="{ encodeentities( Stores.d.phone ) }"></Phone>
      
    </Store>

</MvFUNCTION>

<MvFUNCTION NAME = "Action_GetCount">
          
    <MvASSIGN NAME = "l.count" VALUE = 0>

    <MvCOMMENT><!-- open the orders table --></MvCOMMENT>
    <MvDO FILE = "{ g.Relative_Library_DB }" NAME = "l.ok" VALUE = "{ _DB_Store_Open_Orders() }">
    <MvIF EXPR = "{ NOT l.ok }">
          <MvEVAL EXPR = "{ ErrorTermination('SW-00010', g.Error_Message) }">
	  </MvIF>

    <MvCOMMENT><!-- set the orders table as primary, with no open index --></MvCOMMENT>
    <MvSETINDEX NAME = "Orders" INDEXES ="" >

    <MvCOMMENT><!-- Keep going until we find the one with that's the start --></MvCOMMENT>
    <MvWHILE EXPR = "{ (NOT Orders.d.eof) AND (Orders.d.date LE g.Start) }">
        <MvSKIP NAME = "Orders" ROWS = "1">
    </MvWHILE>
      
    <MvCOMMENT><!-- Now count how many to the end--></MvCOMMENT>
    <MvWHILE EXPR = "{ (NOT Orders.d.eof) }">
        <MvASSIGN NAME = "l.count" VALUE = "{ l.count + 1 }">
          <MvSKIP NAME = "Orders" ROWS = "1">
    </MvWHILE>

    <OrderCount><MvEVAL EXPR = "{l.count}"></OrderCount>

</MvFUNCTION>

<MvFUNCTION NAME = "Action_GetNextOrderID">

    <MvIF EXPR = "{ NOT g.keytype }">
        <MvEVAL EXPR = "{ ErrorTermination('SW-00028', 'KeyType must be specified') }">        
    </MvIF>

    <MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.newKey" VALUE = "{ StoreKey_Generate( g.keytype ) }">
    
    <MvIF EXPR = "{ MvDO_Error }">
        <MvEVAL EXPR = "{ ErrorTermination('SW-00029', MvDO_Error) }">
    </MvIF>
    
    <MvIF EXPR = "{ l.newKey EQ 0}">
        <MvEVAL EXPR = "{ ErrorTermination('SW-00030', 'Invalid key type: ' $ g.keytype) }">
    </MvIF>
    
    <KeyType><MvEVAL EXPR="{ encodeentities( g.keytype ) }"></KeyType>
	  <OrderID><MvEVAL EXPR="{ encodeentities( l.newKey ) }"></OrderID>
    
</MvFUNCTION>

<MvFUNCTION NAME = "Action_GetOrders">

    <MvIF EXPR = "{ NOT g.maxcount }">
        <MvASSIGN NAME = "g.maxcount" VALUE = "{ 50 }">
    </MvIF>
    
    <MvASSIGN NAME = "l.downloadcount" VALUE = "{ 0  }">
    
    <MvCOMMENT><!-- Open the orders table --></MvCOMMENT>
    <MvDO FILE = "{ g.Relative_Library_DB }" NAME = "l.ok" VALUE = "{ _DB_Store_Open_Orders() }">
  	<MvIF EXPR = "{ NOT l.ok }">
	    <MvEVAL EXPR = "{ ErrorTermination('SW-00010', g.Error_Message) }">
	  </MvIF>

    <MvCOMMENT><!-- set the orders table as primary, with no open index --></MvCOMMENT>
    <MvSETINDEX NAME = "Orders" INDEXES ="" >

    <MvCOMMENT><!-- Keep going until we find the one with that's the start --></MvCOMMENT>
    <MvWHILE EXPR = "{ (NOT Orders.d.eof) AND (Orders.d.date LE g.Start) }">
        <MvSKIP NAME = "Orders" ROWS = "1">
    </MvWHILE>

    <MvCOMMENT><!-- this is used to prevent straddling orders with the same date accross a download paging boundary --></MvCOMMENT>
    <MvASSIGN NAME = "l.maxdate" VALUE = 0>

    <MvIF EXPR = "{ g.SebenzaACD }">
      <MvEVAL EXPR = "{ SebenzaExtraMsg_OpenDB() }">
    </MvIF>
      
    <Orders>
        
        <MvCOMMENT><!-- Now output each order up through the end (through 5 seconds ago).  This takes advantage of the assumption that
                        orders will be stored in the dbf file in the order (and date sorted) way they were inserted.  --></MvCOMMENT>
        <MvWHILE EXPR = "{ (NOT Orders.d.EOF) AND (l.downloadcount LT g.maxcount) AND (Orders.d.date LT (s.time_t - 5) ) }">
            
              <MvASSIGN NAME = "l.downloadcount" VALUE = "{ l.downloadcount + 1 }">
              <MvEVAL EXPR = "{ CreateOrderXML() }">

              <MvCOMMENT><!-- this is used to prevent straddling orders with the same date accross a download paging boundary --></MvCOMMENT>
              <MvIF EXPR = "{ Orders.d.date GT l.maxdate }">
                 <MvASSIGN NAME = "l.maxdate" VALUE = "Orders.d.date" >
              </MvIF>

              <MvSKIP NAME = "Orders" ROWS = "1">
                 
        </MvWHILE>

        <MvCOMMENT><!-- This is to prevent a case where two orders have the same date, but straddle the paging boundary.  This will
        make it so we maybe download more than maxcount, but we won't leave any stranded.--></MvCOMMENT>
        <MvWHILE EXPR = "{ (NOT Orders.d.EOF) AND (Orders.d.date LE (l.maxdate + 2) ) }">

            <MvASSIGN NAME = "l.downloadcount" VALUE = "{ l.downloadcount + 1 }">
            <MvEVAL EXPR = "{ CreateOrderXML() }">

              <MvSKIP NAME = "Orders" ROWS = "1">
               
      </MvWHILE>
      
   </Orders>

</MvFUNCTION>

<MvFUNCTION NAME = "CreateOrderXML">

    <Order>
      
	    <OrderNumber><MvEVAL EXPR="{ encodeentities( Orders.d.id ) }"></OrderNumber>
	    <OrderDate><MvEVAL EXPR="{ encodeentities( FormatDate(Orders.d.date) ) }"></OrderDate>      
      <CustomerID><MvEVAL EXPR="{ encodeentities( Orders.d.cust_id ) }"></CustomerID>
      <ShippingMethod><MvComment><!-- This gets set within ShipWorks --></MvComment></ShippingMethod>
      
      <ShippingAddress>
	        <FirstName><MvEVAL EXPR="{ encodeentities( Orders.d.ship_fname ) }"></FirstName>
	        <LastName><MvEVAL EXPR="{ encodeentities( Orders.d.ship_lname ) }"></LastName>
	        <Company><MvEVAL EXPR="{ encodeentities( Orders.d.ship_comp ) }"></Company>
	        <Street1><MvEVAL EXPR="{ encodeentities( Orders.d.ship_addr ) }"></Street1>
	        <City><MvEVAL EXPR="{ encodeentities( Orders.d.ship_city ) }"></City>
	        <State><MvEVAL EXPR="{ encodeentities( Orders.d.ship_state ) }"></State>
	        <PostalCode><MvEVAL EXPR="{ encodeentities( Orders.d.ship_zip ) }"></PostalCode>
	        <Country><MvEVAL EXPR="{ encodeentities( Orders.d.ship_cntry ) }"></Country>
	        <Phone><MvEVAL EXPR="{ encodeentities( Orders.d.ship_phone ) }"></Phone>
	        <Fax><MvEVAL EXPR="{ encodeentities( Orders.d.ship_fax ) }"></Fax>
	        <Email><MvEVAL EXPR="{ encodeentities( Orders.d.ship_email ) }"></Email>
      </ShippingAddress>
      
      <BillingAddress>
	        <FirstName><MvEVAL EXPR="{ encodeentities( Orders.d.bill_fname ) }"></FirstName>
	        <LastName><MvEVAL EXPR="{ encodeentities( Orders.d.bill_lname ) }"></LastName>
	        <Company><MvEVAL EXPR="{ encodeentities( Orders.d.bill_comp ) }"></Company>
	        <Street1><MvEVAL EXPR="{ encodeentities( Orders.d.bill_addr ) }"></Street1>
	        <City><MvEVAL EXPR="{ encodeentities( Orders.d.bill_city ) }"></City>
	        <State><MvEVAL EXPR="{ encodeentities( Orders.d.bill_state ) }"></State>
	        <PostalCode><MvEVAL EXPR="{ encodeentities( Orders.d.bill_zip ) }"></PostalCode>
	        <Country><MvEVAL EXPR="{ encodeentities( Orders.d.bill_cntry ) }"></Country>
	        <Phone><MvEVAL EXPR="{ encodeentities( Orders.d.bill_phone ) }"></Phone>
	        <Fax><MvEVAL EXPR="{ encodeentities( Orders.d.bill_fax ) }"></Fax>
	        <Email><MvEVAL EXPR="{ encodeentities( Orders.d.bill_email ) }"></Email>
      </BillingAddress>

	    <MvIF EXPR = "{ g.Secure }">
          <MvEVAL EXPR = "{ CreatePaymentXML() }">
      </MvIF>
      
	    <MvEVAL EXPR = "{ CreateOrderItemsXML() }">
      <MvEVAL EXPR = "{ CreateOrderChargesXML() }">
              
      <MvIF EXPR = "{ g.SebenzaACD }">
          <MvEVAL EXPR = "{ CreateSebenzaExtraMsgXML() }">
      </MvIF>

      <Debug>
        <RawDate><MvEVAL EXPR="{ encodeentities( Orders.d.date) }"></RawDate>
      </Debug>
        
	</Order>

</MvFUNCTION>

<MvFUNCTION NAME = "CreateOrderItemsXML">

  <Items>
    
	  <MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.found" VALUE = "{ OrderItem_FindFirst_Order( Orders.d.id ) }">
	  <MvWHILE EXPR = "{ l.found }">
  	
		  <Item>
		      <ItemID><MvEVAL EXPR="{ OrderItems.d.line_id }"></ItemID>
		      <MvEVAL EXPR = "{ InsertProductXML() }">
		      <Name><MvEVAL EXPR="{ encodeentities( OrderItems.d.name ) }"></Name>
		      <Code><MvEVAL EXPR="{ encodeentities( OrderItems.d.code ) }"></Code>
		      <UnitPrice><MvEVAL EXPR="{ OrderItems.d.price }"></UnitPrice>
		      <Weight><MvEVAL EXPR="{ OrderItems.d.weight }"></Weight>
		      <Quantity><MvEVAL EXPR="{ OrderItems.d.quantity }"></Quantity>
          
          <MvEVAL EXPR = "{ CreateItemAttributesXML() }">
            
		  </Item>
                
	    <MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.found" VALUE = "{ OrderItem_FindNext_Order( Orders.d.id ) }">
	  </MvWHILE>

  </Items>
  
</MvFUNCTION>
  
<MvFUNCTION NAME = "InsertProductXML">
	<ProductID><MvEVAL EXPR="{ OrderItems.d.product_id }"></ProductID>
	
	<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.product_found" VALUE = "{ Product_Find_ID( OrderItems.d.product_id ) }">
	<MvIF EXPR = "{ l.product_found }">
      <ThumbnailImage><MvIF EXPR="{Products.d.thumbnail}"><MvEVAL EXPR="{ g.baseurl $ encodeentities( Products.d.thumbnail ) }"></MvIF></ThumbnailImage>
	    <Image><MvIF EXPR="{Products.d.image}"><MvEVAL EXPR="{ g.baseurl $ encodeentities( Products.d.image ) }"></MvIF></Image>
	    <UnitCost><MvEVAL EXPR="{ encodeentities( Products.d.cost ) }"></UnitCost>
	<MvELSE>
	    <ThumbnailImage></ThumbnailImage>
	    <Image></Image>
	    <UnitCost>0.00</UnitCost>
	</MvIF>
	
</MvFUNCTION>
  
<MvFUNCTION NAME = "CreateItemAttributesXML">
  
  <Attributes>
    
	<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.opt_found" VALUE = "{ OrderOption_FindFirst_Line( OrderItems.d.line_id ) }">
	<MvWHILE EXPR = "{ l.opt_found }">
	
	    <MvCOMMENT><!-- Assume the worst, that we will not be able to properly lookup the prompts --></MvCOMMENT>
        <MvASSIGN NAME = "attPrompt" VALUE = "{ OrderOptions.d.attr_code }">
        <MvASSIGN NAME = "optPrompt" VALUE = "{ OrderOptions.d.opt_code }">
        
        <MvASSIGN NAME = "l.checkTemplates" VALUE = "{ 1 }" >
        
	    <MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.att_found" VALUE = "{ Attribute_Find_ID( OrderOptions.d.attr_id ) }">
	    <MvIF EXPR = "{ (l.att_found) AND (OrderOptions.d.attr_code EQ Attributes.d.code) }" >
	    
            <MvASSIGN NAME = "attPrompt" VALUE = "{ Attributes.d.prompt }">
            
            <MvDO FILE = "{ g.Relative_Library_DB }" NAME = "l.att_opt_found" VALUE = "{ Option_Find_ID( OrderOptions.d.option_id ) }">
            <MvIF EXPR = "{ l.att_opt_found AND (OrderOptions.d.opt_code EQ Options.d.code) }">
            
                <MvASSIGN NAME = "optPrompt" VALUE = "{ Options.d.prompt }">
                <MvASSIGN NAME = "l.checkTemplates" VALUE = "{ 0 }" >

            </MvIF>
	    </MvIF>
	    
        <MvCOMMENT><!-- If we dont find a match as an attribute, look for a match as an attribute template --></MvCOMMENT>
        <MvIF EXPR = "{l.checkTemplates}">
	        <MvASSIGN NAME = "l.att_temp_found" VALUE = "{ AttributeTemplateAttribute_Find_ID( OrderOptions.d.attr_id ) }">
	        <MvIF EXPR = "{ l.att_temp_found AND (OrderOptions.d.attr_code EQ AttributeTemplateAttributes.d.code) }">
	        
                <MvASSIGN NAME = "attPrompt" VALUE = "{ AttributeTemplateAttributes.d.prompt }">

                <MvDO FILE = "{ g.Relative_Feature_ATT_DB }" NAME = "l.att_opt_found" VALUE = "{ AttributeTemplateOption_Find_ID( OrderOptions.d.option_id ) }">
                <MvIF EXPR = "{ l.att_opt_found AND (OrderOptions.d.opt_code EQ AttributeTemplateOptions.d.code) }">
                
                    <MvASSIGN NAME = "optPrompt" VALUE = "{ AttributeTemplateOptions.d.prompt }">
                    
                </MvIF>

	        </MvIF>
	    </MvIF>

    <Attribute>
			<AttributeID><MvEVAL EXPR="{ OrderOptions.d.attr_id }"></AttributeID>
			<Name><MvEVAL EXPR="{ encodeentities( attPrompt ) }"></Name>
			<Value><MvEVAL EXPR="{ encodeentities( optPrompt $ OrderOptions.d.data $ OrderOptions.d.data_long) }"></Value>
			<Price><MvEVAL EXPR="{ OrderOptions.d.price }"></Price>
      <Debug>
			  <MivaOptionCode><MvEVAL EXPR="{ encodeentities( OrderOptions.d.opt_code ) }"></MivaOptionCode>
      </Debug>
		</Attribute>
        
	<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.opt_found" VALUE = "{ OrderOption_FindNext_Line( OrderItems.d.line_id ) }">
	</MvWHILE>
    
	</Attributes>
</MvFUNCTION>
  
<MvFUNCTION NAME = "CreateOrderChargesXML">
  
  <Totals>
    
	  <MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.found" VALUE = "{ OrderCharge_FindFirst_Charge( Orders.d.id ) }">
	  <MvWHILE EXPR = "{ l.found }">

      <Total
			   id="{ OrderCharges.d.charge_id }"
			   name="{ encodeentities( OrderCharges.d.desc ) }"
			   class="{ encodeentities( OrderCharges.d.type ) }"
         impact="add">
          <MvEVAL EXPR="{ OrderCharges.d.disp_amt }">
      </Total> 
      
		  <MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.found" VALUE = "{ OrderCharge_FindNext_Charge( Orders.d.id ) }">
	  </MvWHILE>
      
  </Totals>
  
</MvFUNCTION>

<MvFUNCTION NAME = "CreatePaymentXML">
  
  <Payment>

  <MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.found" VALUE = "{ Module_Find_ID( Orders.d.pay_id ) }">
	<MvIF EXPR = "{ l.found }">
		<MvDO FILE = "{ g.Module_Root $ Modules.d.module }" NAME = "l.module_api_version" VALUE = "{ Module_API_Version() }">
	
		<MvIF EXPR = "{ l.module_api_version LT 4.14 }">
			<MvDO FILE = "{ g.Module_Root $ Modules.d.module }" NAME = "l.desc" VALUE = "{ PaymentModule_Report_Description() }">
			<MvDO FILE = "{ g.Module_Root $ Modules.d.module }" NAME = "l.fields" VALUE = "{ PaymentModule_Report_Fields() }">
		<MvELSE>
			<MvASSIGN NAME = "l.secure_data" VALUE = "{ Orders.d.pay_secdat }">

			<MvIF EXPR = "{ Orders.d.pay_sectyp }">
				<MvIF EXPR = "{ len( l.secure_data ) }">

					<MvIF EXPR = "{ NOT l.RSA_key[ Orders.d.pay_sectyp ]:checked }">
						<MvASSIGN NAME = "l.RSA_key" INDEX = "{ Orders.d.pay_sectyp }" MEMBER = "checked" VALUE = "1">
						
						<MvIF EXPR = "{g.swpassphrase}" >
						    <MvASSIGN NAME = "g.passphrase" INDEX = "{ Orders.d.pay_sectyp }" VALUE = "{ g.swpassphrase }">
                        </MvIF>
                        							
						<MvIF EXPR = "{ len( g.passphrase[ Orders.d.pay_sectyp ] ) }">
							<MvDO FILE = "{ g.Module_Admin }" NAME = "l.valid" VALUE = "{ Merchant_Load_RSA_Key( Orders.d.pay_sectyp, g.passphrase[ Orders.d.pay_sectyp ], l.RSA_key[ Orders.d.pay_sectyp ]:key  ) }">
							<MvASSIGN NAME = "l.RSA_key" INDEX = "{ Orders.d.pay_sectyp }" MEMBER = "valid" VALUE = "{ l.valid }">
						<MvELSE>
							<MvASSIGN NAME = "l.RSA_key" INDEX = "{ Orders.d.pay_sectyp }" MEMBER = "valid" VALUE = "0">
						</MvIF>
						
					</MvIF>

					<MvIF EXPR = "{ l.RSA_key[ Orders.d.pay_sectyp ]:valid }">
						<MvDO FILE = "{ g.Module_Admin }" NAME = "l.encrypted" VALUE = "{ Merchant_Decrypt_With_Key( l.rsa_key[ Orders.d.pay_sectyp ]:key, Orders.d.pay_seckey, l.secure_data ) }">
					<MvELSE>
						<MvASSIGN NAME = "l.secure_data" VALUE = "">
					</MvIF>
				</MvIF>
			<MvELSE>
				<MvASSIGN NAME = "l.secure_data" VALUE = "{ miva_array_deserialize( l.secure_data ) }">
			</MvIF>

			<MvDO FILE = "{ g.Module_Root $ Modules.d.module }" NAME = "l.desc" VALUE = "{ PaymentModule_Report_Description( miva_array_deserialize( Orders.d.pay_data ) ) }">
			<MvDO FILE = "{ g.Module_Root $ Modules.d.module }" NAME = "l.fields" VALUE = "{ PaymentModule_Report_Fields( miva_array_deserialize( Orders.d.pay_data ), l.secure_data) }">
		</MvIF>
		
		<MvASSIGN NAME = "l.pos" VALUE = 1>
		<MvASSIGN NAME = "l.field" VALUE = "{ ltrim( rtrim( gettoken( l.fields, ',', l.pos ) ) ) }">
		
		<MvWHILE EXPR = "{ len( l.field ) }">
			<MvDO FILE = "{ g.Module_Root $ Modules.d.module }" NAME = "l.label" VALUE = "{ PaymentModule_Report_Label( l.field ) }">
			<MvIF EXPR = "{ l.module_api_version LT 4.14 }">
				<MvDO FILE = "{ g.Module_Root $ Modules.d.module }" NAME = "l.value" VALUE = "{ PaymentModule_Report_Value( l.field ) }">
			<MvELSE>
				<MvDO FILE = "{ g.Module_Root $ Modules.d.module }" NAME = "l.value" VALUE = "{ PaymentModule_Report_Value( l.field, miva_array_deserialize( Orders.d.pay_data ), l.secure_data ) }">
			</MvIF>

      <Detail name="{ l.label }" value="{ l.value }" />

			<MvASSIGN NAME = "l.pos" VALUE = "{ l.pos + 1 }">
			<MvASSIGN NAME = "l.field" VALUE = "{ ltrim( rtrim( gettoken( l.fields, ',', l.pos ) ) ) }">
		</MvWHILE>
		
	</MvIF>
      
  </Payment>
  
</MvFUNCTION>

<MvFUNCTION NAME = "CreateSebenzaExtraMsgXML">
  
    
	  <MvASSIGN NAME = "l.msg_found" VALUE = "{ SebenzaExtraMsg_FindFirst_Order( Orders.d.id ) }">
      
	  <Notes>
	    <MvWHILE EXPR = "{ l.msg_found }">
                
        <MvIF EXPR="{ SebenzaExtraMsg.d.add1 NE '' }"><Note public="true">ACD1: <MvEVAL EXPR="{ encodeentities( SebenzaExtraMsg.d.add1 ) }"></Note></MvIF>
        <MvIF EXPR="{ SebenzaExtraMsg.d.add2 NE '' }"><Note public="true">ACD2: <MvEVAL EXPR="{ encodeentities( SebenzaExtraMsg.d.add2 ) }"></Note></MvIF>
        <MvIF EXPR="{ SebenzaExtraMsg.d.add3 NE '' }"><Note public="true">ACD3: <MvEVAL EXPR="{ encodeentities( SebenzaExtraMsg.d.add3 ) }"></Note></MvIF>
        <MvIF EXPR="{ SebenzaExtraMsg.d.add4 NE '' }"><Note public="true">ACD4: <MvEVAL EXPR="{ encodeentities( SebenzaExtraMsg.d.add3 ) }"></Note></MvIF>
        <MvIF EXPR="{ SebenzaExtraMsg.d.add5 NE '' }"><Note public="true">ACD5: <MvEVAL EXPR="{ encodeentities( SebenzaExtraMsg.d.add3 ) }"></Note></MvIF>
        <MvIF EXPR="{ SebenzaExtraMsg.d.add6 NE '' }"><Note public="true">ACD6: <MvEVAL EXPR="{ encodeentities( SebenzaExtraMsg.d.add3 ) }"></Note></MvIF>
        <MvIF EXPR="{ SebenzaExtraMsg.d.add7 NE '' }"><Note public="true">ACD7: <MvEVAL EXPR="{ encodeentities( SebenzaExtraMsg.d.add3 ) }"></Note></MvIF>
        <MvIF EXPR="{ SebenzaExtraMsg.d.add8 NE '' }"><Note public="true">ACD8: <MvEVAL EXPR="{ encodeentities( SebenzaExtraMsg.d.add3 ) }"></Note></MvIF>
        <MvIF EXPR="{ SebenzaExtraMsg.d.add9 NE '' }"><Note public="true">ACD9: <MvEVAL EXPR="{ encodeentities( SebenzaExtraMsg.d.add3 ) }"></Note></MvIF>
        
	      <MvASSIGN NAME = "l.msg_found" VALUE = "{ SebenzaExtraMsg_FindNext_Order( Orders.d.id ) }">
      
	   </MvWHILE>
  </Notes>
    
  
</MvFUNCTION>

<MvFUNCTION NAME = "SebenzaExtraMsg_FindFirst_Order" PARAMETERS = "order_id">
  
	<MvASSIGN NAME = "l.found" VALUE = 0>

    <MvFIND NAME = "SebenzaExtraMsg" VALUE = "{ l.order_id }" EXACT = "EXACT">
		<MvIF EXPR = "{ ( NOT SebenzaExtraMsg.d.EOF ) }">
			<MvASSIGN NAME = "l.found" VALUE = 1>
	  </MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.found }">
</MvFUNCTION>

<MvFUNCTION NAME = "SebenzaExtraMsg_FindNext_Order" PARAMETERS = "order_id">
	<MvASSIGN NAME = "l.found" VALUE = 1>

	<MvSKIP NAME = "SebenzaExtraMsg" ROWS = 1>
	<MvIF EXPR = "{ ( SebenzaExtraMsg.d.EOF ) OR ( SebenzaExtraMsg.d.order_id NE l.order_id ) }">
		<MvASSIGN NAME = "l.found" VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.found }">
</MvFUNCTION>

<MvFUNCTION NAME = "SebenzaExtraMsg_OpenDB" ERROROUTPUTLEVEL = "syntax, expression">
	
	<MvIF EXPR = "{ NOT g.SebenzaExtraMsg_Open }">		
	
		<MIVA MvOPEN_Error = "nonfatal, nodisplay">
        <MvOPEN NAME = "SebenzaExtraMsg"
				DATABASE = "{ g._DB_Store_Directory $ 'extramsg/extramsg.dbf' }"
				INDEXES =  "{ g._DB_Store_Directory $ 'extramsg/extramsg.mvx' }">
				
		<MvIF EXPR = "{ MvOPEN_Error }">
	        <MvEVAL EXPR = "{ ErrorTermination('SW-00017', 'ShipWorks is configured to download Sebenza Additional Checkout Data, but the module is not installed in your Miva Merchant store.' ) }">
		<MvELSE>
			<MvASSIGN NAME = "g.SebenzaExtraMsg_Open" VALUE = 1>
			<MvFILTER NAME = "SebenzaExtraMsg" FILTER = "{ NOT SebenzaExtraMsg.d.deleted }">
		</MvIF>
		
	    <MIVA MvOPEN_Error = "fatal, display">

	</MvIF>

</MvFUNCTION>

<MvFUNCTION NAME = "AttributeTemplateAttribute_Find_ID" PARAMETERS = "id"  ERROROUTPUTLEVEL = "syntax, expression">

	<MvDO FILE = "{ g.Relative_Feature_ATT_DB }"  NAME = "l.ok" VALUE = "{ _DB_Store_Open_AttributeTemplateAttributes() }">
	
	<MvIF EXPR = "{ l.ok }">
		<MvPRIMARY NAME = "AttributeTemplateAttributes" INDEX = "{ g._DB_Store_Directory $ 'atmpatti.mvx' }">

		<MvFIND NAME = "AttributeTemplateAttributes" VALUE = "{ l.id }" EXACT>
		<MvIF EXPR = "{ AttributeTemplateAttributes.d.EOF }">
			<MvASSIGN NAME = "{ l.ok }" VALUE = "0" >
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ l.ok }">
	
</MvFUNCTION>

<MvFUNCTION NAME = "FormatDate" PARAMETERS = "time_t" STANDARDOUTPUTLEVEL = "">

  <MvASSIGN NAME = "l.date" VALUE = "{ 
       time_t_year( l.time_t, 0 ) $ '-' $ 
       padl( time_t_month( l.time_t, 0 ), 2, '0' ) $ '-' $ 
       padl( time_t_dayofmonth( l.time_t, 0 ), 2, '0' ) }">
    
  <MvASSIGN NAME = "l.time" VALUE = "{
       padl( time_t_hour( l.time_t, 0 ), 2, '0' ) $ ':' $
			 padl( time_t_min( l.time_t, 0 ), 2, '0' ) $ ':' $ 
			 padl( time_t_sec( l.time_t, 0 ), 2, '0' ) }">

  <MvFUNCTIONRETURN VALUE = "{ l.date $ 'T' $ l.time $ 'Z' }">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Update" PARAMETERS = "category_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Delete" PARAMETERS = "category_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Tabs" PARAMETERS = "category_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_Content" PARAMETERS = "tab, load_fields, category_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Tabs" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Content" PARAMETERS = "tab, load_fields, product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Update" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_Delete" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_BatchEdit_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Product_BatchEdit_Update" PARAMETERS = "product_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_BatchEdit_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_BatchEdit_Update" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Update" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Delete" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Tabs" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Content" PARAMETERS = "tab, load_fields, cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Validate_Runtime" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Customer_Update_Runtime" PARAMETERS = "cust_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_BatchEdit_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Category_BatchEdit_Update" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliate_BatchEdit_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliate_BatchEdit_Update" PARAMETERS = "id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliate_Tabs" PARAMETERS = "affiliate_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliate_Content" PARAMETERS = "tab, load_fields, affiliate_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliate_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliate_Update" PARAMETERS = "affiliate_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliate_Delete" PARAMETERS = "affiliate_id" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliates_Tabs" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliates_Content" PARAMETERS = "tab, load_fields" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliates_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Affiliates_Update" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Update" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Tabs" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Store_Content" PARAMETERS = "tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Validate">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Action">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_Screen">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "StoreUtilityModule_LeftNavigation"  PARAMETERS = "indent">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Pack_Domain" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Domain_Tabs" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>
	
<MvFUNCTION NAME = "Module_Domain_Content" PARAMETERS = "tab, load_fields" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>
	
<MvFUNCTION NAME = "Module_Domain_Validate" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>
	
<MvFUNCTION NAME = "Module_Domain_Update" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Is_Provisionable" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "">
</MvFUNCTION>