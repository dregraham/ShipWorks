
-- ShipWorks V2 to V3 Database Migration Script, generated by CodeSmith
-- For table v2m_YahooInventory

-- operational variables
DECLARE 
    @workCounter int

-- source table variables
DECLARE
    -- @MasterDatabase will be generated at runtime
    -- @IsArchive will be generated at runtime    
    @sYahooInventoryID int, 
    @sStoreID int, 
    @sitemID varchar(255), 
    @sweight float 

-- target table variables
DECLARE
    @tStoreID bigint, 
    @tYahooProductID nvarchar(255), 
    @tWeight float 

-- Track Progress
SET @workCounter = 0

-- the cursor for cycling through the source table
DECLARE workCursor CURSOR FORWARD_ONLY FOR
SELECT TOP 1000
    [YahooInventoryID],
    [StoreID],
    [itemID],
    [weight]
    FROM v2m_YahooInventory

-- open the source table cursor
OPEN workCursor

-- populate source table variables from the source cursor
FETCH NEXT FROM workCursor
INTO
    @sYahooInventoryID,
    @sStoreID,
    @sitemID,
    @sweight
WHILE @@FETCH_STATUS = 0
BEGIN
    SET @workCounter = @workCounter + 1

    -- 
    -- Custom stuff here
    -- 
    SET @tStoreID = dbo.v2m_TranslateKeyGlobal(@sStoreID, 8 /*store*/)
    SET @tYahooProductID = @sitemID
    SET @tWeight = @sWeight

    INSERT INTO {MASTERDATABASE}.dbo.YahooProduct  (
	    [StoreID],
	    [YahooProductID],
	    [Weight]
    )
    VALUES
    (
	    @tStoreID,
	    @tYahooProductID,
	    @tWeight
    )             
    
    -- delete the old row
    DELETE FROM dbo.v2m_YahooInventory WHERE YahooInventoryID = @sYahooInventoryID

-- fetch next row from source table
FETCH NEXT FROM workCursor
INTO
    @sYahooInventoryID,
    @sStoreID,
    @sitemID,
    @sweight
END
CLOSE workCursor
DEALLOCATE workCursor

-- data migration "protocol" demands we return the number of rows/work completed
SELECT @workCounter as WorkCompleted