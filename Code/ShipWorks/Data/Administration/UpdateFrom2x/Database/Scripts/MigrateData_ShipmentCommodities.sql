
-- ShipWorks V2 to V3 Database Migration Script, generated by CodeSmith
-- For table v2m_ShipmentCommodities

-- operational variables
DECLARE 
    @workCounter int

-- source table variables
DECLARE
    -- @MasterDatabase will be generated at runtime
    -- @IsArchive will be generated at runtime    
    @sCommodityID int, 
    @sRowVersion timestamp, 
    @sShipmentID int, 
    @sDescription nvarchar(200), 
    @sQuantity float, 
    @sWeight float, 
    @sUnitValue money, 
    @sUnitOfMeasure int, 
    @sOriginCountry varchar(20), 
    @sHarmonizedCode varchar(14), 
    @sExportLicenseNumber varchar(12), 
    @sExportLicenseExpiration datetime 

-- target table variables
DECLARE
    @tShipmentCustomsItemID bigint, 
    @tRowVersion timestamp, 
    @tShipmentID bigint, 
    @tDescription nvarchar(150), 
    @tQuantity float, 
    @tWeight float, 
    @tUnitValue money, 
    @tCountryOfOrigin nvarchar(50), 
    @tHarmonizedCode varchar(14) 

-- Track Progress
SET @workCounter = 0

-- the cursor for cycling through the source table
DECLARE workCursor CURSOR FORWARD_ONLY FOR
SELECT TOP 1000
        [CommodityID],
        [RowVersion],
        [ShipmentID],
        [Description],
        [Quantity],
        [Weight],
        [UnitValue],
        [UnitOfMeasure],
        [OriginCountry],
        [HarmonizedCode],
        [ExportLicenseNumber],
        [ExportLicenseExpiration]
    FROM v2m_ShipmentCommodities

-- open the source table cursor
OPEN workCursor

-- populate source table variables from the source cursor
FETCH NEXT FROM workCursor
INTO
        @sCommodityID,
        @sRowVersion,
        @sShipmentID,
        @sDescription,
        @sQuantity,
        @sWeight,
        @sUnitValue,
        @sUnitOfMeasure,
        @sOriginCountry,
        @sHarmonizedCode,
        @sExportLicenseNumber,
        @sExportLicenseExpiration
WHILE @@FETCH_STATUS = 0
BEGIN
    SET @workCounter = @workCounter + 1

    -- 
    -- Custom stuff here
    -- 
    SET @tShipmentID = dbo.v2m_TranslateKey(@sShipmentID, 1 /* shipment */)


	IF @tShipmentID IS NULL
	BEGIN
		-- see if it was skipped on purpose
		IF EXISTS (SELECT 1 FROM dbo.v2m_SkippedShipments WHERE ShipmentID = @sShipmentID)
		BEGIN
			GOTO SKIP_IT
		END

		-- otherwise, let it fail because there's a bug somewhere else
	END

    SET @tDescription = @sDescription
    SET @tQuantity = @sQuantity
    SET @tWeight = @sWeight
    SET @tUnitValue = @sUnitValue
    SET @tCountryOfOrigin = @sOriginCountry
    SET @tHarmonizedCode = @sHarmonizedCode

    INSERT INTO {MASTERDATABASE}.dbo.ShipmentCustomsItem  (
        [ShipmentID],
        [Description],
        [Quantity],
        [Weight],
        [UnitValue],
        [CountryOfOrigin],
        [HarmonizedCode]
    )
    VALUES
    (
        @tShipmentID,
        @tDescription,
        @tQuantity,
        @tWeight,
        @tUnitValue,
        @tCountryOfOrigin,
        @tHarmonizedCode
    )             

SKIP_IT:
    
    -- remove the row
    DELETE FROM dbo.v2m_ShipmentCommodities Where CommodityID = @sCommodityID

-- fetch next row from source table
FETCH NEXT FROM workCursor
INTO
        @sCommodityID,
        @sRowVersion,
        @sShipmentID,
        @sDescription,
        @sQuantity,
        @sWeight,
        @sUnitValue,
        @sUnitOfMeasure,
        @sOriginCountry,
        @sHarmonizedCode,
        @sExportLicenseNumber,
        @sExportLicenseExpiration
END
CLOSE workCursor
DEALLOCATE workCursor

-- data migration "protocol" demands we return the number of rows/work completed
SELECT @workCounter as WorkCompleted