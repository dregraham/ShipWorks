
-- ShipWorks V2 to V3 Database Migration Script, generated by CodeSmith
-- For table v2m_EndiciaShippers

-- operational variables
DECLARE 
    @workCounter int,
    @newEndiciaAccountKey bigint,
	@sFirstName nvarchar(30),
	@sLastName nvarchar(30),
	@sMiddleName nvarchar(30),
	@shipperCreated bit

-- source table variables
DECLARE
    -- @MasterDatabase will be generated at runtime
    -- @IsArchive will be generated at runtime    
    @sEndiciaShipperID int, 
    @sRowVersion timestamp, 
    @sCompany nvarchar(35), 
    @sContactName nvarchar(35), 
    @sAddress1 nvarchar(60), 
    @sAddress2 nvarchar(60), 
    @sAddress3 nvarchar(60), 
    @sCity nvarchar(50), 
    @sStateProvinceCode nvarchar(5), 
    @sPostalCode nvarchar(10), 
    @sContactEmail nvarchar(35), 
    @sContactPhone nvarchar(25),
	@sShipperType int,
	@sEndiciaAccountNumber nvarchar(50),
	@sSignupConfirmation nvarchar(30),
	@sApiInitialPassword nvarchar(250),
	@sApiUserPassword nvarchar(250),
	@sTestLabelServerAccount bit,
	@sCustomsSigner nvarchar(100),
	@sCustomsCertify bit

-- target table variables
DECLARE
    @tEndiciaAccountID bigint, 
    @tAccountNumber nvarchar(50), 
    @tSignupConfirmation nvarchar(30), 
    @tWebPassword nvarchar(250), 
    @tApiInitialPassword nvarchar(250), 
    @tApiUserPassword nvarchar(250), 
    @tAccountType int, 
    @tTestAccount bit, 
    @tCreatedByShipWorks bit, 
    @tDescription nvarchar(50), 
    @tFirstName nvarchar(30), 
    @tLastName nvarchar(30), 
    @tCompany nvarchar(30), 
    @tStreet1 nvarchar(60), 
    @tStreet2 nvarchar(60), 
    @tStreet3 nvarchar(60), 
    @tCity nvarchar(50), 
    @tStateProvCode nvarchar(50), 
    @tPostalCode nvarchar(20), 
    @tCountryCode nvarchar(50), 
    @tPhone nvarchar(25), 
    @tFax nvarchar(35), 
    @tEmail nvarchar(50) 


-- Track Progress
SET @workCounter = 0
SET @shipperCreated = 0

-- the cursor for cycling through the source table
DECLARE workCursor CURSOR FORWARD_ONLY FOR
SELECT 
    [EndiciaShipperID],
    [RowVersion],
    [Company],
    [ContactName],
    [Address1],
    [Address2],
    [Address3],
    [City],
    [StateProvinceCode],
    [PostalCode],
    [ContactEmail],
    [ContactPhone],
	[ShipperType],
	[EndiciaAccountNumber],
	[SignupConfirmation],
	[ApiInitialPassword],
	[ApiUserPassword],
	[TestLabelServerAccount],
	[CustomsSigner],
	[CustomsCertify]
    FROM v2m_EndiciaShippers WHERE ShipperType IN (0, 1, 2) ORDER BY ShipperType DESC -- explicitly pulling in  DAZzle, Endicia Label Server, and Express1 accounts.  

-- open the source table cursor
OPEN workCursor

-- populate source table variables from the source cursor
FETCH NEXT FROM workCursor
INTO
    @sEndiciaShipperID,
    @sRowVersion,
    @sCompany,
    @sContactName,
    @sAddress1,
    @sAddress2,
    @sAddress3,
    @sCity,
    @sStateProvinceCode,
    @sPostalCode,
    @sContactEmail,
    @sContactPhone,
	@sShipperType,
	@sEndiciaAccountNumber,
	@sSignupConfirmation,
	@sApiInitialPassword,
	@sApiUserPassword,
	@sTestLabelServerAccount,
	@sCustomsSigner,
	@sCustomsCertify
WHILE @@FETCH_STATUS = 0
BEGIN
    SET @workCounter = @workCounter + 1
	
	-- split the ContactName into its parts
	EXEC dbo.v2m_ParseName @sContactName, @sFirstName OUT, @sMiddleName OUT, @sLastName OUT

	IF @sShipperType = 0 
	BEGIN
		-- DAZzle account
	    SET @tAccountNumber = null
	    SET @tSignupConfirmation = ''
	    SET @tWebPassword = ''
	    SET @tApiInitialPassword = ''
	    SET @tApiUserPassword = ''
	    SET @tAccountType = 0
	    SET @tTestAccount = 0
	    SET @tCreatedByShipWorks = 1
	    SET @tDescription = 'Imported Endicia DAZZle account.'
	    SET @tFirstName = @sFirstName
	    SET @tLastName = @sLastName 
	    SET @tCompany = @sCompany
	    SET @tStreet1 = @sAddress1
	    SET @tStreet2 = @sAddress2
	    SET @tStreet3 = @sAddress3
	    SET @tCity = @sCity
	    SET @tStateProvCode = @sStateProvinceCode
	    SET @tPostalCode = @sPostalCode
	    SET @tCountryCode = 'US'
	    SET @tPhone = @sContactPhone
	    SET @tFax = ''
	    SET @tEmail = @sContactEmail
	END
	ELSE
	BEGIN
		-- Label Server or Express1 account
	    SET @tAccountNumber = @sEndiciaAccountNumber
	    SET @tSignupConfirmation = @sSignupConfirmation
	    SET @tWebPassword = '' -- this wasn't kept around
	    SET @tApiInitialPassword = @sApiInitialPassword
	    SET @tApiUserPassword = @sApiUserPassword
	    SET @tAccountType = 0 -- standard
	    SET @tTestAccount = @sTestLabelServerAccount
	    SET @tCreatedByShipWorks = 1
	    SET @tDescription =  @sCompany + ' - ' + @sEndiciaAccountNumber
	    SET @tFirstName = @sFirstName
	    SET @tLastName = @sLastName 
	    SET @tCompany = @sCompany
	    SET @tStreet1 = @sAddress1
	    SET @tStreet2 = @sAddress2
	    SET @tStreet3 = @sAddress3
	    SET @tCity = @sCity
	    SET @tStateProvCode = @sStateProvinceCode
	    SET @tPostalCode = @sPostalCode
	    SET @tCountryCode = 'US'
	    SET @tPhone = @sContactPhone
	    SET @tFax = ''
	    SET @tEmail = @sContactEmail

		IF @sShipperType = 2 
		BEGIN
			SET @tDescription = @sCompany + ' - ' + SUBSTRING(@sEndiciaAccountNumber, 1, 5) + '...' + SUBSTRING(@sEndiciaAccountNumber, LEN(@sEndiciaAccountNumber) - 5, 5);
		END

	END

	IF @sShipperType = 2 OR @sShipperType = 1 OR (@sShipperType = 0 AND @shipperCreated = 0)
	BEGIN

	    INSERT INTO dbo.EndiciaAccount  (
		    [AccountNumber],
		    [SignupConfirmation],
		    [WebPassword],
		    [ApiInitialPassword],
		    [ApiUserPassword],
		    [AccountType],
		    [TestAccount],
		    [CreatedByShipWorks],
		    [Description],
		    [FirstName],
		    [LastName],
		    [Company],
		    [Street1],
		    [Street2],
		    [Street3],
		    [City],
		    [StateProvCode],
		    [PostalCode],
		    [CountryCode],
		    [Phone],
		    [Fax],
		    [Email]
	    )
	    VALUES
	    (
		    @tAccountNumber,
		    @tSignupConfirmation,
		    @tWebPassword,
		    @tApiInitialPassword,
		    @tApiUserPassword,
		    @tAccountType,
		    @tTestAccount,
		    @tCreatedByShipWorks,
		    @tDescription,
		    @tFirstName,
		    @tLastName,
		    @tCompany,
		    @tStreet1,
		    @tStreet2,
		    @tStreet3,
		    @tCity,
		    @tStateProvCode,
		    @tPostalCode,
		    @tCountryCode,
		    @tPhone,
		    @tFax,
		    @tEmail
	    )             

	    SET @newEndiciaAccountKey = @@IDENTITY
	    
	    -- Record the key.  There's a side effect to this, in that only this one shipper will be "properly" linked
		-- to EndiciaShipments.  However, since in V2 this really just meant different origin addresses it isn't a problem
		-- because the origin address is on the shipment itself.
	    EXEC dbo.v2m_RecordKey @sEndiciaShipperID, 12 /*Endicia Account*/, @newEndiciaAccountKey

		-- Express1 fields came into existence well after the migrater was done so we have to handle them a little differently
		IF @sShipperType = 2
		BEGIN
			-- Save off the new account ID for use later
			INSERT INTO dbo.v2m_Express1Account (EndiciaAccountID) VALUES(@newEndiciaAccountKey);
		END

		SET @shipperCreated = 1
	END
	ELSE IF (@sShipperType = 0 AND @shipperCreated = 1)
	BEGIN
		-- Subsequent DAZzle accounts get pulled in as Alternate addresses
		-- description will just be the full, original name
		SET @tDescription = @sContactName

		DECLARE @alternateCount int;
		SELECT @alternateCount = COUNT(*) FROM dbo.ShippingOrigin WHERE [Description] LIKE 'Endicia Alternate %';

		-- just create a new Origin since that's all EndiciaShippers really were/are
		INSERT INTO dbo.ShippingOrigin  (
	        [Description],
	        [FirstName],
	        [MiddleName],
	        [LastName],
	        [Company],
	        [Street1],
	        [Street2],
	        [Street3],
	        [City],
	        [StateProvCode],
	        [PostalCode],
	        [CountryCode],
	        [Phone],
	        [Fax],
	        [Email],
	        [Website]
	    )
	    VALUES
	    (
	        'Endicia Alternate #' + CONVERT(nvarchar(10), @alternateCount + 1),
	        @sFirstName,
	        @sMiddleName,
	        @sLastName,
	        @tCompany,
	        @tStreet1,
	        @tStreet2,
	        @tStreet3,
	        @tCity,
	        @tStateProvCode,
	        @tPostalCode,
	        @tCountryCode,
	        @tPhone,
	        @tFax,
	        @tEmail,
	        ''		-- website
	    )   
	END

    -- DELETE
    DELETE FROM dbo.v2m_EndiciaShippers WHERE EndiciaShipperID = @sEndiciaShipperID

-- fetch next row from source table
FETCH NEXT FROM workCursor
INTO
    @sEndiciaShipperID,
    @sRowVersion,
    @sCompany,
    @sContactName,
    @sAddress1,
    @sAddress2,
    @sAddress3,
    @sCity,
    @sStateProvinceCode,
    @sPostalCode,
    @sContactEmail,
    @sContactPhone,
	@sShipperType,
	@sEndiciaAccountNumber,
	@sSignupConfirmation,
	@sApiInitialPassword,
	@sApiUserPassword,
	@sTestLabelServerAccount,
	@sCustomsSigner,
	@sCustomsCertify
END
CLOSE workCursor
DEALLOCATE workCursor

-- data migration "protocol" demands we return the number of rows/work completed
SELECT @workCounter as WorkCompleted