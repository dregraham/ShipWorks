<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="headerImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>