<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.shipworks.com/ui">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ShipWorks.UI;component/Styles/Controls/GridStyle.xaml" />
        <ResourceDictionary Source="/ShipWorks.UI;component/Styles/Controls/ButtonStyle.xaml"/>
        <ResourceDictionary Source="/ShipWorks.OrderLookup;component/Styles/OrderLookupComboBoxStyle.xaml"/>
        <ResourceDictionary Source="/ShipWorks.OrderLookup;component/Styles/OrderLookupEditableComboBoxStyle.xaml"/>
        <ResourceDictionary Source="/ShipWorks.OrderLookup;component/Styles/OrderLookupCheckBoxStyle.xaml"/>
        <ResourceDictionary Source="/ShipWorks.OrderLookup;component/Styles/OrderLookupDatePickerStyle.xaml"/>
        <ResourceDictionary Source="/ShipWorks.OrderLookup;component/Styles/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="FormTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10 0 0 10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrushColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}"/>
        <Setter Property="Background" Value="{StaticResource InputControlBackgroundGradient}"/>
    </Style>
    <Style x:Key="MultiLineFormTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10 0 0 10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrushColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}"/>
        <Setter Property="Background" Value="{StaticResource InputControlBackgroundGradient}"/>
    </Style>
    <Style x:Key="FormComboBox" TargetType="{x:Type ui:ShipWorksComboBox}">
        <Setter Property="Margin" Value="10 0 0 10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrushColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundGradient}"/>
        <Setter Property="Template" Value="{StaticResource OrderLookupComboBoxTemplate}"/>
    </Style>
    <Style x:Key="EditableFormComboBox" TargetType="{x:Type ui:ShipWorksComboBox}"
           BasedOn="{StaticResource FormComboBox}">
        <Setter Property="Template" Value="{StaticResource OrderLookupEditableComboBoxTemplate}"/>
    </Style>
    <Style x:Key="StackedFormComboBox" TargetType="{x:Type ui:ShipWorksComboBox}"
           BasedOn="{StaticResource FormComboBox}">
        <Setter Property="Margin" Value="0 0 0 10"/>
    </Style>    
    <Style x:Key="FormCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="10 0 0 10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrushColor}"/>
        <Setter Property="Template" Value="{StaticResource OrderLookupCheckBoxTemplate}"/>
    </Style>
    
    <Style x:Key="Header" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="PanelWrapper" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="5 5 5 5" />
    </Style>

    <Style x:Key="FieldLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0 0 0 10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style x:Key="FormNumberTextBox" TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource Grid.TextBox.Number}">
        <Setter Property="Margin" Value="10 0 0 10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ControlTextBrushColor}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}"/>
        <Setter Property="Background" Value="{StaticResource InputControlBackgroundGradient}"/>
    </Style>
    <Style x:Key="FormWrapPanel" TargetType="{x:Type WrapPanel}">
        <Setter Property="Margin" Value="10 0 0 0" />
    </Style>

    <Style x:Key="Link" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#4a90e2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock>                        
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Expander.HeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Expander.DownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" BorderThickness="1" BorderBrush="#d9d9d9">
                        <Grid SnapsToDevicePixels="False" MinHeight="36"
                              Background="#FAFAFA">                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="29"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" HorizontalAlignment="Left" Margin="10,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            <Path x:Name="arrow" 
                                  Margin="0 0 10 0"
                                  Grid.Column="1" Data=" M 1,1.5 L 6.5,7 L 12,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="Black" StrokeThickness="2.5" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,6.5  L 6.5,1  L 12,6.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Expander.Style" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="8.25 pt" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="2" ShadowDepth="3" Opacity="0.3" Color="#FF646464" />
                            </Border.Effect>
                        </Border>
                        
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FocusVisualStyle="{StaticResource Expander.HeaderFocusVisual}" 
                                          FontWeight="Bold" 
                                          FontStyle="Normal" 
                                          FontSize="12" 
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontFamily="/ShipWorks.OrderLookup;component/#Roboto" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource Expander.DownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    

    <ControlTemplate x:Key="IconButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF838383"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>