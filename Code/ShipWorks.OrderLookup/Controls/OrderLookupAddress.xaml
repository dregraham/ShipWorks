<UserControl
    x:Class="ShipWorks.OrderLookup.Controls.OrderLookupAddress"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:AddressControl="clr-namespace:ShipWorks.UI.Controls.AddressControl;assembly=ShipWorks.UI"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight"
    xmlns:ui="clr-namespace:ShipWorks.UI.Controls;assembly=ShipWorks.UI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:geography="clr-namespace:Interapptive.Shared.Business.Geography;assembly=Interapptive.Shared"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:ShipWorks.OrderLookup.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:props="clr-namespace:ShipWorks.UI.AttachedProperties;assembly=ShipWorks.UI"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:valueConverters="clr-namespace:ShipWorks.UI.ValueConverters;assembly=ShipWorks.UI"
    xmlns:ns="clr-namespace:ShipWorks.OrderLookup.FieldManager;assembly=ShipWorks.Core"
    d:DataContext="{d:DesignInstance AddressControl:AddressViewModel,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="380"
    d:DesignWidth="350"
    mc:Ignorable="d"
    FontFamily="/ShipWorks.OrderLookup;component/#Roboto">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ShipWorks.OrderLookup;component/Styles/OrderLookupStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style BasedOn="{StaticResource Grid.TextBlock.Label}" TargetType="TextBlock" />
            <Style BasedOn="{StaticResource Grid.TextBox.Default}" TargetType="TextBox" />

            <sys:Int32 x:Key="One">1</sys:Int32>

            <valueConverters:StateProvinceConverter x:Key="StateProvinceConverter" />
            <valueConverters:EnumDescriptionConverter x:Key="EnumDescription" />
            <valueConverters:EnumImageConverter x:Key="EnumImage" />
            <valueConverters:BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <valueConverters:AddressKeyValueToBooleanConverter x:Key="AddressKeyValueToBooleanConverter" />
            <valueConverters:VisibleWhenEqualToParameterConverter x:Key="VisibleWhenEqualToParameter" />
            <valueConverters:VisibleWhenEqualToParameterConverter x:Key="VisibleWhenNotEqualToParameter" Invert="true" />
            <valueConverters:HeightWhenFieldAllowedConverter x:Key="HeightWhenFieldAllowedConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel>
        <TextBlock Style="{StaticResource Header}">Name</TextBlock>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="85" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition>
                    <RowDefinition.Height>
                        <MultiBinding Converter="{StaticResource HeightWhenFieldAllowedConverter}">
                            <Binding Path="FieldLayoutProvider" Mode="OneWay" />
                            <Binding Source="{x:Static ns:SectionLayoutFieldIDs.FullName}" />
                            <Binding Source="{x:Static GridLength.Auto}" />
                        </MultiBinding>
                    </RowDefinition.Height>
                </RowDefinition>
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Style="{StaticResource FieldLabel}">
                Full Name
            </TextBlock>
            <TextBox
                Grid.Row="0"
                Grid.Column="1"
                props:EntityFieldLength.FieldName="PersonNameFull"
                Style="{StaticResource FormTextBox}"
                Text="{Binding FullName, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                Style="{StaticResource FieldLabel}">
                Company
            </TextBlock>
            <TextBox
                Grid.Row="1"
                Grid.Column="1"
                props:EntityFieldLength.FieldName="PersonCompany"
                Style="{StaticResource FormTextBox}"
                Text="{Binding Company, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="85" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Style="{StaticResource Header}">
                Address
            </TextBlock>
            <ui:AlignmentWrapPanel
                Grid.Row="0"
                Grid.Column="1"
                Margin="12,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Visibility="{Binding IsAddressValidationEnabled, Converter={StaticResource BooleanToVisibility}}">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                    <Image
                        Margin="0,0,8,0"
                        Source="{Binding ValidationStatus, Converter={StaticResource EnumImage}}"
                        Style="{StaticResource Image.Icon}" />
                    <TextBlock
                        Margin="0,2,0,0"
                        Style="{StaticResource FieldLabel}"
                        Text="{Binding ValidationStatus, Converter={StaticResource EnumDescription}}" />
                </StackPanel>
                <StackPanel
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style BasedOn="{StaticResource Button.Link}" TargetType="Button">
                            <Setter Property="Margin" Value="0,0,0,0" />
                        </Style>
                    </StackPanel.Resources>
                    <Button Command="{Binding ValidateCommand}" Visibility="{Binding CanValidateAddress, Converter={StaticResource BooleanToVisibility}}">
                        Validate
                    </Button>
                    <Button props:PopupClickManager.OpenPopup="{Binding ElementName=AddressPopup}" Visibility="{Binding CanShowSuggestions, Converter={StaticResource BooleanToVisibility}}">
                        <StackPanel Margin="0" Orientation="Horizontal">
                            <TextBlock
                                Margin="0"
                                Style="{StaticResource FieldLabel}"
                                Text="{Binding ValidationMessageLabel}" />
                        </StackPanel>
                    </Button>
                    <Button
                        Margin="6,0,0,0"
                        Command="{Binding ShowValidationMessageCommand}"
                        Content="{Binding ValidationMessageLabel}"
                        Visibility="{Binding CanShowValidationMessage, Converter={StaticResource BooleanToVisibility}}" />
                </StackPanel>
            </ui:AlignmentWrapPanel>
        </Grid>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="85" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                Padding="0,3,0,2"
                Style="{StaticResource FieldLabel}">
                Street
            </TextBlock>
            <TextBox
                Grid.Row="1"
                Grid.Column="1"
                props:EntityFieldLength.FieldName="PersonStreetFull"
                props:TextRestriction.MaxLines="3"
                AcceptsReturn="True"
                MaxLines="3"
                MinLines="3"
                Style="{StaticResource MultiLineFormTextBox}"
                Text="{Binding Street, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                Style="{StaticResource FieldLabel}">
                City
            </TextBlock>
            <TextBox
                Grid.Row="2"
                Grid.Column="1"
                props:EntityFieldLength.FieldName="PersonCity"
                Style="{StaticResource FormTextBox}"
                Text="{Binding City, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock
                Grid.Row="3"
                Grid.Column="0"
                Style="{StaticResource FieldLabel}">
                State / Prov
            </TextBlock>
            <ComboBox
                Grid.Row="3"
                Grid.Column="1"
                props:EntityFieldLength.FieldName="PersonState"
                IsEditable="True"
                IsTextSearchEnabled="True"
                ItemsSource="{Binding SelectedValue, ElementName=CountryComboBox, Converter={StaticResource StateProvinceConverter}}"
                Text="{Binding StateProvCode}"
                Style="{StaticResource EditableFormComboBox}" />

            <TextBlock
                Grid.Row="4"
                Grid.Column="0"
                Style="{StaticResource FieldLabel}">
                Postal Code
            </TextBlock>
            <TextBox
                Grid.Row="4"
                Grid.Column="1"
                props:EntityFieldLength.FieldName="PersonPostal"
                Style="{StaticResource FormTextBox}"
                Text="{Binding PostalCode, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock
                Grid.Row="5"
                Grid.Column="0"
                Style="{StaticResource FieldLabel}">
                Country
            </TextBlock>
            <ComboBox
                x:Name="CountryComboBox"
                Grid.Row="5"
                Grid.Column="1"
                DisplayMemberPath="Key"
                ItemsSource="{Binding Source={x:Static geography:CountryList.Countries}, Mode=OneTime}"
                SelectedValue="{Binding CountryCode}"
                SelectedValuePath="Value"
                Style="{StaticResource FormComboBox}"/>
        </Grid>

        <TextBlock Style="{StaticResource Header}">Contact Information</TextBlock>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="85" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Style="{StaticResource FieldLabel}">
                Email
            </TextBlock>
            <TextBox
                Grid.Row="0"
                Grid.Column="1"
                props:EntityFieldLength.FieldName="PersonEmail"
                Style="{StaticResource FormTextBox}"
                Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                Style="{StaticResource FieldLabel}">
                Phone
            </TextBlock>
            <TextBox
                Grid.Row="1"
                Grid.Column="1"
                props:EntityFieldLength.FieldName="PersonPhone"
                Style="{StaticResource FormTextBox}"
                Text="{Binding Phone, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
        <Popup
            Name="AddressPopup"
            AllowsTransparency="True"
            Placement="Custom"
            StaysOpen="False">
            <Border
                Margin="0,0,8,8"
                Padding="0,2,0,2"
                Background="#FFF0F0F0"
                BorderBrush="DarkGray"
                BorderThickness="1">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="5" Opacity="0.4" />
                </Border.Effect>

                <ItemsControl ItemsSource="{Binding AddressSuggestions}">
                    <ItemsControl.Resources>
                        <Style x:Key="AddressBorderStyle" TargetType="Border">
                            <Setter Property="Padding" Value="26,4,12,4" />
                            <Setter Property="Background" Value="Transparent" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF91C9F7" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Border
                                    props:PopupClickManager.ClosePopup="{Binding ElementName=AddressPopup}"
                                    IsEnabled="{Binding Converter={StaticResource AddressKeyValueToBooleanConverter}}"
                                    Style="{StaticResource AddressBorderStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp">
                                            <cmd:EventToCommand CommandParameter="{Binding Value}" PassEventArgsToCommand="False">
                                                <cmd:EventToCommand.Command>
                                                    <Binding Path="DataContext.SelectAddressSuggestionCommand" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}" />
                                                </cmd:EventToCommand.Command>
                                            </cmd:EventToCommand>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBlock Text="{Binding Key}" />
                                </Border>

                                <Separator Margin="26,4,2,4" Visibility="{Binding Value.IsOriginal, Converter={StaticResource BooleanToVisibility}}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </Popup>
    </StackPanel>
</UserControl>
