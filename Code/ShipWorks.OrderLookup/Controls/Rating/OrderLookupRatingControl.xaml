<UserControl x:Class="ShipWorks.OrderLookup.Controls.Rating.OrderLookupRatingControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ui="http://schemas.shipworks.com/ui"
             xmlns:sw="http://schemas.shipworks.com/sw"
             xmlns:amazon="clr-namespace:ShipWorks.Shipping.UI.Carriers.Amazon;assembly=ShipWorks.Shipping.UI"
             xmlns:localRating="clr-namespace:ShipWorks.Shipping.UI.Carriers.Ups.LocalRating;assembly=ShipWorks.Shipping.UI"
             xmlns:rating="clr-namespace:ShipWorks.OrderLookup.Controls.Rating"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance rating:OrderLookupRatingPanelViewModel, IsDesignTimeCreatable=True}"
             FontFamily="/ShipWorks.OrderLookup;component/#Roboto">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ShipWorks.UI;component/Styles/GlobalStyle.xaml"/>
                <ResourceDictionary Source="/ShipWorks.Shipping.UI;component/RatingPanel/FootnoteTemplates/FootnoteTemplates.xaml" />
                <ResourceDictionary Source="/ShipWorks.OrderLookup;component/Styles/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ui:ImageToBitmapSourceConverter x:Key="ImageToBitmapSource" />
            <ui:InvertBooleanConverter x:Key="InvertBoolean" />
            <ui:TypeBasedTemplateSelector x:Key="TypeBasedTemplateSelector" />
            <ui:BooleanComparisonConverter x:Key="BooleanAnd" BooleanOperator="{x:Static ui:BooleanOperator.And}" />
            <ui:BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <ui:BooleanToVisibilityConverter x:Key="BooleanToVisibilityInverted" Invert="True" />
            <FrameworkElement x:Key="ProxyElement"
                        DataContext="{Binding}"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ContentControl Visibility="Collapsed"
                    Content="{StaticResource ProxyElement}"/>

        <DataGrid Grid.Row="1"
                  Style="{StaticResource DataGrid.Static}"
                  Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityInverted}}"
                  ItemsSource="{Binding Rates}"
                  SelectedItem="{Binding SelectedRate}"
                  SelectionUnit="FullRow"
                  CanUserResizeColumns="True"
                  HorizontalGridLinesBrush="{StaticResource BorderColor}"
                  VerticalGridLinesBrush="{StaticResource BorderColor}">
            <DataGrid.IsEnabled>
                <MultiBinding Converter="{StaticResource BooleanAnd}">
                    <Binding Mode="OneWay" Path="ShipmentModel.ShipmentAllowEditing" />
                    <Binding Path="IsLoading" Converter="{StaticResource InvertBoolean}"/>
                </MultiBinding>
            </DataGrid.IsEnabled>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="IsEnabled">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource BooleanAnd}">
                                <Binding Path="DataContext.AllowSelection"
                                                Mode="OneWay"
                                                RelativeSource="{RelativeSource AncestorType=UserControl}" />
                                <Binding Path="Selectable" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="25" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Resources>
                        <SolidColorBrush x:Key="SelectedColor" Color="{StaticResource SelectionColor}"/>
                    </Style.Resources>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="FontFamily" Value="ShipWorks.OrderLookup;component/#Roboto"/>
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedColor}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </DataGrid.CellStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="{StaticResource ButtonBackgroundGradient}" />
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                    <Setter Property="Foreground" Value="{StaticResource ControlTextColor}"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="MinWidth" Value="75"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid Background="{TemplateBinding Background}">
                                    <Border BorderThickness=" 0 0 1 1"
                                            Height="20"
                                            BorderBrush="{StaticResource BorderColor}">
                                        <ContentPresenter Margin="3"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="26"
                                    CanUserResize="False">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <Grid>
                                <Border BorderThickness="0 0 1 0"
                                        BorderBrush="{StaticResource BorderColor}"
                                        Width="26"
                                        Height="20"
                                        Margin="-3">
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Style="{StaticResource Image.Icon}"
                                Source="{Binding ProviderLogo, Converter={StaticResource ImageToBitmapSource}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Service"
                                Width="*"
                                Binding="{Binding Description}"
                                Foreground="{StaticResource ControlTextColor}"
                                ElementStyle="{StaticResource DataGrid.Element.Default}">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Days"
                                Binding="{Binding Days}"
                                Width=".2*"
                                Foreground="{StaticResource ControlTextColor}"
                                ElementStyle="{StaticResource DataGrid.Element.Default}"/>
                <DataGridTemplateColumn Header="Rate"
                                Width=".2*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding FormattedAmount}"
                                        Style="{StaticResource DataGrid.Element.Default}"
                                        Foreground="{StaticResource ControlTextColor}"
                                        Visibility="{Binding Selectable, Converter={StaticResource BooleanToVisibility}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Border Grid.Row="1"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="5, 32, 0, 0"
            Visibility="{Binding ShowEmptyMessage, Converter={StaticResource BooleanToVisibility}}">
            <TextBlock Text="{Binding EmptyMessage}" Style="{StaticResource TextBlock.Empty}" />
        </Border>

        <ListBox Grid.Row="2"
                Margin="4 0 0 0"
                VerticalAlignment="Bottom"
                BorderBrush="Transparent"
                ItemTemplateSelector="{StaticResource TypeBasedTemplateSelector}"
                ItemsSource="{Binding Footnotes}"
                Visibility="{Binding ShowFootnotes,Converter={StaticResource BooleanToVisibility}}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <!-- Don't let the row be selected -->
                    <Setter Property="Focusable" Value="false"/>

                    <!-- Hide hover color change -->
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ui:TypeBasedTemplateSelector.Templates>
                <ui:Template Value="{x:Type amazon:AmazonCarrierTermsAndConditionsNotAcceptedFootnoteViewModel}"
                            DataTemplate="{StaticResource AmazonCarrierTermsAndConditionsNotAcceptedFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type amazon:AmazonSameDayNotAvailableFootnoteViewModel}"
                            DataTemplate="{StaticResource AmazonSameDayNotAvailableFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:BrokerExceptionsRateFootnoteViewModel}"
                            DataTemplate="{StaticResource BrokerExceptionsRateFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:CounterRatesInvalidStoreAddressFootnoteViewModel}"
                            DataTemplate="{StaticResource CounterRatesInvalidStoreAddressFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:ExceptionsRateFootnoteViewModel}"
                            DataTemplate="{StaticResource ExceptionsRateFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:Express1DiscountedRateFootnoteViewModel}"
                            DataTemplate="{StaticResource Express1DiscountedRateFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:Express1RateNotQualifiedFootnoteViewModel}"
                            DataTemplate="{StaticResource Express1RateNotQualifiedFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:Express1RatePromotionFootnoteViewModel}"
                            DataTemplate="{StaticResource Express1RatePromotionFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:InformationFootnoteViewModel}"
                            DataTemplate="{StaticResource InformationFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:ShippingAccountRequiredForRatingFootnoteViewModel}"
                            DataTemplate="{StaticResource ShippingAccountRequiredForRatingFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:UpsPromoFootnoteViewModel}"
                            DataTemplate="{StaticResource UpsPromoFootnoteViewModelTemplate}"/>
                <ui:Template Value="{x:Type sw:UspsRateDiscountedFootnoteViewModel}"
                            DataTemplate="{StaticResource UspsRateDiscountedFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:UspsRateNotQualifiedFootnoteViewModel}"
                            DataTemplate="{StaticResource UspsRateNotQualifiedFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type sw:UspsRatePromotionFootnoteViewModel}"
                            DataTemplate="{StaticResource UspsRatePromotionFootnoteViewModelTemplate}" />
                <ui:Template Value="{x:Type localRating:UpsLocalRatingDisabledFootnoteViewModel}"
                            DataTemplate="{StaticResource UpsLocalRatingDisabledFootnoteViewModelTemplate}" />
            </ui:TypeBasedTemplateSelector.Templates>
        </ListBox>

        <ui:WaitSpinner Grid.Row="0"
                        Grid.RowSpan="3"
                        FontFamily="/ShipWorks.OrderLookup;component/#Roboto"
                        FontSize="12"
                        BorderBrush="{StaticResource BorderColor}"
                        Foreground="{StaticResource ControlTextColor}"
                        Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibility}}">
            Checking rates...
        </ui:WaitSpinner>
    </Grid>

</UserControl>
