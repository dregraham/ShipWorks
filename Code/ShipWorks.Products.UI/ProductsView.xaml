<UserControl
    x:Class="ShipWorks.Products.UI.ProductsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:ShipWorks.Products.UI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.shipworks.com/ui"
    d:DataContext="{d:DesignInstance local:DesignerProductsMode,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="500"
    d:DesignWidth="1200"
    FontFamily="/ShipWorks.UI;component/Styles/BlueSteel/#Roboto"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ShipWorks.UI;component/Styles/GlobalStyle.xaml" />
                <ResourceDictionary Source="/ShipWorks.UI;component/Styles/BlueSteel/BlueSteelStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style
                x:Key="PrimaryButton"
                BasedOn="{StaticResource SmallPrimaryButton}"
                TargetType="Button">
                <Setter Property="Margin" Value="0,0,10,0" />
            </Style>
            <Style
                x:Key="SecondaryButton"
                BasedOn="{StaticResource SmallSecondaryButton}"
                TargetType="Button">
                <Setter Property="Margin" Value="0,0,10,0" />
            </Style>
            <Style
                x:Key="Link.Selected"
                BasedOn="{StaticResource Link}"
                TargetType="Button">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <TextBlock TextDecorations="Underline">
                                <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ui:BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <ui:BooleanToVisibilityConverter x:Key="BooleanToVisibilityInverted" Invert="True" />
            <ui:NumberToWeightStringConverter x:Key="NumberToWeightString" />
            <ui:VisibilityMultiConverter x:Key="VisibilityMulti" />
            <sys:Double x:Key="BaseFontSize">14</sys:Double>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="5,10,5,5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button
                Grid.Column="0"
                Command="{Binding AddProduct}"
                Content="Add"
                Style="{StaticResource PrimaryButton}" />
            <Button
                Grid.Column="1"
                Content="Edit"
                Command="{Binding EditProductVariantButton}"
                Style="{StaticResource PrimaryButton}" />
            <Button
                Grid.Column="2"
                Command="{Binding RefreshProducts}"
                Content="Refresh"
                Style="{StaticResource PrimaryButton}" />
            <Button
                Grid.Column="3"
                Command="{Binding ImportProducts}"
                Content="Import"
                Style="{StaticResource PrimaryButton}" />
            <Button
                Grid.Column="4"
                Command="{Binding ActivateProductCommand}"
                Content="Mark Active"
                Style="{StaticResource SecondaryButton}" />
            <Button
                Grid.Column="5"
                Command="{Binding DeactivateProductCommand}"
                Content="Mark Inactive"
                Style="{StaticResource SecondaryButton}" />

            <CheckBox
                Grid.Column="6"
                Margin="0,0,10,0"
                IsChecked="{Binding ShowInactiveProducts}"
                Style="{StaticResource FormCheckBox}">
                Show inactive products
            </CheckBox>

            <syncfusion:SfTextBoxExt
                Grid.Column="8"
                MinWidth="300"
                HorizontalAlignment="Right"
                VerticalContentAlignment="Center"
                FontSize="20"
                Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Delay=250}">
                <syncfusion:SfTextBoxExt.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="2" />
                    </Style>
                </syncfusion:SfTextBoxExt.Resources>
                <syncfusion:SfTextBoxExt.Watermark>
                    <TextBlock
                        Margin="2"
                        VerticalAlignment="Center"
                        Background="{StaticResource InputControlBackgroundGradient}"
                        FontSize="20"
                        Opacity=".5"
                        Text="Search Products" />
                </syncfusion:SfTextBoxExt.Watermark>
            </syncfusion:SfTextBoxExt>
        </Grid>

        <DataGrid
            x:Name="ProductsGrid"
            Grid.Row="1"
            Margin="0,10,0,0"
            ui:DataGridSort.CurrentSort="{Binding CurrentSort, Mode=TwoWay}"
            AutoGenerateColumns="False"
            CanUserResizeColumns="True"
            CanUserSortColumns="True"
            Grid.IsSharedSizeScope="True"
            VerticalScrollBarVisibility="Visible"
            HeadersVisibility="All"
            ItemsSource="{Binding Products.Data}"
            ScrollViewer.IsDeferredScrollingEnabled="True"
            SelectionMode="Extended"
            Style="{StaticResource DataGrid}"
            VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Recycling"
            ui:DoubleClick.Command="{Binding EditProductVariantButton}">
            <DataGrid.Resources>
                <ui:BindingProxy x:Key="proxy" Data="{Binding}" />
            </DataGrid.Resources>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <cmd:EventToCommand Command="{Binding SelectedProductsChanged}" CommandParameter="{Binding SelectedItems, ElementName=ProductsGrid}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.ColumnHeaderStyle>
                <Style BasedOn="{StaticResource DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="FontSize" Value="16" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsLoading, Mode=OneWay}" Value="True">
                            <Setter Property="Foreground" Value="LightGray" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Data.IsActive, Mode=OneWay}" Value="False">
                            <Setter Property="FontStyle" Value="Italic" />
                            <Setter Property="Opacity" Value="0.5" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.RowHeaderStyle>
                <Style BasedOn="{StaticResource {x:Type DataGridRowHeader}}" TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource BorderColor}"
                                    BorderThickness="0,0,1,1">
                                    <CheckBox
                                        Margin="3,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding Path=IsSelected, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.RowHeaderStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn
                    Width="Auto"
                    CanUserSort="False"
                    Header="Image">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image
                                Width="64"
                                Height="64"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Source="{Binding Data.ImageUrl, IsAsync=True}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="3*"
                    CanUserSort="True"
                    Header="SKU"
                    SortMemberPath="SKU">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                x:Name="SKUButton"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Command="{Binding DataContext.EditProductVariantLink, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                CommandParameter="{Binding Data.ProductVariantID}"
                                Style="{StaticResource Link}">
                                <TextBlock FontSize="{StaticResource BaseFontSize}" Text="{Binding Data.SKU}" />
                            </Button>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                                    <Setter TargetName="SKUButton" Property="Style" Value="{StaticResource Link.Selected}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="8*"
                    CanUserSort="True"
                    Header="Name"
                    SortMemberPath="Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Button
                                    x:Name="NameButton"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Command="{Binding DataContext.EditProductVariantLink, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                    CommandParameter="{Binding Data.ProductVariantID}"
                                    Style="{StaticResource Link}"
                                    Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityInverted}}">
                                    <TextBlock FontSize="{StaticResource BaseFontSize}" Text="{Binding Data.Name}" />
                                </Button>
                                <TextBlock
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibility}}">
                                    Loading...
                                </TextBlock>
                            </Grid>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                                    <Setter TargetName="NameButton" Property="Style" Value="{StaticResource Link.Selected}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="Auto"
                    CanUserSort="False"
                    Header="Dimensions (L x W x H)">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="8,0" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityInverted}}">
                                <Grid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}" />
                                        <Setter Property="Margin" Value="2,0" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Length" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Width" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Height" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Data.Length, StringFormat={}{0:#0.##}}" />
                                <TextBlock Grid.Column="1" Foreground="DarkGray">
                                    x
                                </TextBlock>
                                <TextBlock Grid.Column="2" Text="{Binding Data.Width, StringFormat={}{0:#0.##}}" />
                                <TextBlock Grid.Column="3" Foreground="DarkGray">
                                    x
                                </TextBlock>
                                <TextBlock Grid.Column="4" Text="{Binding Data.Height, StringFormat={}{0:#0.##}}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="1.5*"
                    CanUserSort="True"
                    Header="Weight"
                    SortMemberPath="Weight">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="4,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="{StaticResource BaseFontSize}"
                                Text="{Binding Data.Weight, Converter={StaticResource NumberToWeightString}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="3*"
                    CanUserSort="True"
                    Header="Location"
                    SortMemberPath="BinLocation">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="{StaticResource BaseFontSize}"
                                Text="{Binding Data.BinLocation}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="Auto"
                    CanUserSort="True"
                    Header="Active"
                    SortMemberPath="IsActive"
                    Visibility="{Binding Data.ShowInactiveProducts, Source={StaticResource proxy}, Converter={StaticResource BooleanToVisibility}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stroke="Gray"
                                Style="{StaticResource Path.Checkmark}">
                                <Path.Visibility>
                                    <MultiBinding Converter="{StaticResource VisibilityMulti}">
                                        <Binding Converter="{StaticResource BooleanToVisibilityInverted}" Path="IsLoading" />
                                        <Binding Converter="{StaticResource BooleanToVisibility}" Path="Data.IsActive" />
                                    </MultiBinding>
                                </Path.Visibility>
                            </Path>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <ui:WaitSpinner Grid.Row="1" Visibility="{Binding Products.IsLoading, Converter={StaticResource BooleanToVisibility}}">
            <TextBlock FontSize="{StaticResource BaseFontSize}">Loading products...</TextBlock>
        </ui:WaitSpinner>
        <Grid
            Grid.Row="2"
            Margin="0,4,0,0"
            TextBlock.FontSize="{StaticResource BaseFontSize}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0,0,16,0">
                Products: <Run Text="{Binding Products.Data.Count, Mode=OneWay, StringFormat='{}{0:#,##0}'}" />
            </TextBlock>
            <TextBlock Grid.Column="1">
                Selected: <Run Text="{Binding SelectedProductIDs.Count, Mode=OneWay, StringFormat='{}{0:#,##0}'}" />
            </TextBlock>
        </Grid>
    </Grid>
</UserControl>
