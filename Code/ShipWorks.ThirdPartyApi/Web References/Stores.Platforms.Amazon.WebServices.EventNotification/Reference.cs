//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// WseWsdl3
// 
namespace ShipWorks.Stores.Platforms.Amazon.WebServices.EventNotification {
    using System.Xml.Serialization;
    using System;
    using System.Web.Services;
    using Microsoft.Web.Services3;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using Microsoft.Web.Services3.Messaging;
    
    
    [Microsoft.Web.Services3.Messaging.SoapService("http://notifications.amazon.com/doc/2007-01-16/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EventNotification[]))]
    public partial class EventNotificationServiceWSE : Microsoft.Web.Services3.Messaging.SoapClient {
        
        private System.AsyncCallback IsEventTypeSupportedAsyncCallback;
        
        private System.AsyncCallback GetSupportedEventTypesAsyncCallback;
        
        private System.AsyncCallback GetEventsAsyncCallback;
        
        private System.AsyncCallback GetMoreAsyncCallback;
        
        public EventNotificationServiceWSE() : 
                base(new System.Uri("https://notifications.amazon.com")) {
        }
        
        public event IsEventTypeSupportedCompletedEventHandler IsEventTypeSupportedCompleted;
        
        public event GetSupportedEventTypesCompletedEventHandler GetSupportedEventTypesCompleted;
        
        public event GetEventsCompletedEventHandler GetEventsCompleted;
        
        public event GetMoreCompletedEventHandler GetMoreCompleted;
        
        [Microsoft.Web.Services3.Messaging.SoapMethodAttribute("urn:IsEventTypeSupported")]
        [return: System.Xml.Serialization.XmlElementAttribute("IsEventTypeSupportedResponse", Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
        public IsEventTypeSupportedResponse IsEventTypeSupported(IsEventTypeSupported IsEventTypeSupported1) {
            Microsoft.Web.Services3.SoapEnvelope results = base.SendRequestResponse("IsEventTypeSupported", IsEventTypeSupported1);
            return ((IsEventTypeSupportedResponse)(results.GetBodyObject(typeof(IsEventTypeSupportedResponse), this.SoapServiceAttribute.TargetNamespace)));
        }
        
        public System.IAsyncResult BeginIsEventTypeSupported(IsEventTypeSupported IsEventTypeSupported1, System.AsyncCallback callback, object asyncState) {
            return this.BeginSendRequestResponse("IsEventTypeSupported", IsEventTypeSupported1, callback, asyncState);
        }
        
        public IsEventTypeSupportedResponse EndIsEventTypeSupported(System.IAsyncResult asyncResult) {
            Microsoft.Web.Services3.SoapEnvelope results = this.EndSendRequestResponse(asyncResult);
            return ((IsEventTypeSupportedResponse)(results.GetBodyObject(typeof(IsEventTypeSupportedResponse), this.SoapServiceAttribute.TargetNamespace)));
        }
        
        public void IsEventTypeSupportedAsync(IsEventTypeSupported IsEventTypeSupported1) {
            this.IsEventTypeSupportedAsync(IsEventTypeSupported1, null);
        }
        
        public void IsEventTypeSupportedAsync(IsEventTypeSupported IsEventTypeSupported1, object userState) {
            if ((this.IsEventTypeSupportedAsyncCallback == null)) {
                this.IsEventTypeSupportedAsyncCallback = new System.AsyncCallback(this.OnIsEventTypeSupportedOperationCompleted);
            }
            this.BeginSendRequestResponse("IsEventTypeSupported", IsEventTypeSupported1, this.IsEventTypeSupportedAsyncCallback, userState);
        }
        
        private void OnIsEventTypeSupportedOperationCompleted(System.IAsyncResult asyncResult) {
            if (((this.IsEventTypeSupportedCompleted != null) 
                        && asyncResult.IsCompleted)) {
                object[] results = new object[] {
                        null};
                System.Exception error = null;
                try {
                    Microsoft.Web.Services3.SoapEnvelope envelope = this.EndSendRequestResponse(asyncResult);
                    results[0] = ((IsEventTypeSupportedResponse)(envelope.GetBodyObject(typeof(IsEventTypeSupportedResponse), this.SoapServiceAttribute.TargetNamespace)));
                }
                catch (System.Exception ex) {
                    error = ex;
                }
                this.IsEventTypeSupportedCompleted(this, new IsEventTypeSupportedCompletedEventArgs(results, error, false, asyncResult.AsyncState));
            }
        }
        
        [Microsoft.Web.Services3.Messaging.SoapMethodAttribute("urn:GetSupportedEventTypes")]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetSupportedEventTypesResponse", Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("SupportedEventTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public EventTypeDetails[] GetSupportedEventTypes(GetSupportedEventTypes GetSupportedEventTypes1) {
            Microsoft.Web.Services3.SoapEnvelope results = base.SendRequestResponse("GetSupportedEventTypes", GetSupportedEventTypes1);
            return ((EventTypeDetails[])(results.GetBodyObject(typeof(EventTypeDetails[]), this.SoapServiceAttribute.TargetNamespace)));
        }
        
        public System.IAsyncResult BeginGetSupportedEventTypes(GetSupportedEventTypes GetSupportedEventTypes1, System.AsyncCallback callback, object asyncState) {
            return this.BeginSendRequestResponse("GetSupportedEventTypes", GetSupportedEventTypes1, callback, asyncState);
        }
        
        public EventTypeDetails[] EndGetSupportedEventTypes(System.IAsyncResult asyncResult) {
            Microsoft.Web.Services3.SoapEnvelope results = this.EndSendRequestResponse(asyncResult);
            return ((EventTypeDetails[])(results.GetBodyObject(typeof(EventTypeDetails[]), this.SoapServiceAttribute.TargetNamespace)));
        }
        
        public void GetSupportedEventTypesAsync(GetSupportedEventTypes GetSupportedEventTypes1) {
            this.GetSupportedEventTypesAsync(GetSupportedEventTypes1, null);
        }
        
        public void GetSupportedEventTypesAsync(GetSupportedEventTypes GetSupportedEventTypes1, object userState) {
            if ((this.GetSupportedEventTypesAsyncCallback == null)) {
                this.GetSupportedEventTypesAsyncCallback = new System.AsyncCallback(this.OnGetSupportedEventTypesOperationCompleted);
            }
            this.BeginSendRequestResponse("GetSupportedEventTypes", GetSupportedEventTypes1, this.GetSupportedEventTypesAsyncCallback, userState);
        }
        
        private void OnGetSupportedEventTypesOperationCompleted(System.IAsyncResult asyncResult) {
            if (((this.GetSupportedEventTypesCompleted != null) 
                        && asyncResult.IsCompleted)) {
                object[] results = new object[] {
                        null};
                System.Exception error = null;
                try {
                    Microsoft.Web.Services3.SoapEnvelope envelope = this.EndSendRequestResponse(asyncResult);
                    results[0] = ((EventTypeDetails[])(envelope.GetBodyObject(typeof(EventTypeDetails[]), this.SoapServiceAttribute.TargetNamespace)));
                }
                catch (System.Exception ex) {
                    error = ex;
                }
                this.GetSupportedEventTypesCompleted(this, new GetSupportedEventTypesCompletedEventArgs(results, error, false, asyncResult.AsyncState));
            }
        }
        
        [Microsoft.Web.Services3.Messaging.SoapMethodAttribute("urn:GetEvents")]
        [return: System.Xml.Serialization.XmlElementAttribute("GetEventsResponse", Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
        public GetEventsResponse GetEvents(GetEvents GetEvents1) {
            Microsoft.Web.Services3.SoapEnvelope results = base.SendRequestResponse("GetEvents", GetEvents1);
            return ((GetEventsResponse)(results.GetBodyObject(typeof(GetEventsResponse), this.SoapServiceAttribute.TargetNamespace)));
        }
        
        public System.IAsyncResult BeginGetEvents(GetEvents GetEvents1, System.AsyncCallback callback, object asyncState) {
            return this.BeginSendRequestResponse("GetEvents", GetEvents1, callback, asyncState);
        }
        
        public GetEventsResponse EndGetEvents(System.IAsyncResult asyncResult) {
            Microsoft.Web.Services3.SoapEnvelope results = this.EndSendRequestResponse(asyncResult);
            return ((GetEventsResponse)(results.GetBodyObject(typeof(GetEventsResponse), this.SoapServiceAttribute.TargetNamespace)));
        }
        
        public void GetEventsAsync(GetEvents GetEvents1) {
            this.GetEventsAsync(GetEvents1, null);
        }
        
        public void GetEventsAsync(GetEvents GetEvents1, object userState) {
            if ((this.GetEventsAsyncCallback == null)) {
                this.GetEventsAsyncCallback = new System.AsyncCallback(this.OnGetEventsOperationCompleted);
            }
            this.BeginSendRequestResponse("GetEvents", GetEvents1, this.GetEventsAsyncCallback, userState);
        }
        
        private void OnGetEventsOperationCompleted(System.IAsyncResult asyncResult) {
            if (((this.GetEventsCompleted != null) 
                        && asyncResult.IsCompleted)) {
                object[] results = new object[] {
                        null};
                System.Exception error = null;
                try {
                    Microsoft.Web.Services3.SoapEnvelope envelope = this.EndSendRequestResponse(asyncResult);
                    results[0] = ((GetEventsResponse)(envelope.GetBodyObject(typeof(GetEventsResponse), this.SoapServiceAttribute.TargetNamespace)));
                }
                catch (System.Exception ex) {
                    error = ex;
                }
                this.GetEventsCompleted(this, new GetEventsCompletedEventArgs(results, error, false, asyncResult.AsyncState));
            }
        }
        
        [Microsoft.Web.Services3.Messaging.SoapMethodAttribute("urn:GetMore")]
        [return: System.Xml.Serialization.XmlElementAttribute("GetMoreResponse", Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
        public GetMoreResponse GetMore(GetMore GetMore1) {
            Microsoft.Web.Services3.SoapEnvelope results = base.SendRequestResponse("GetMore", GetMore1);
            return ((GetMoreResponse)(results.GetBodyObject(typeof(GetMoreResponse), this.SoapServiceAttribute.TargetNamespace)));
        }
        
        public System.IAsyncResult BeginGetMore(GetMore GetMore1, System.AsyncCallback callback, object asyncState) {
            return this.BeginSendRequestResponse("GetMore", GetMore1, callback, asyncState);
        }
        
        public GetMoreResponse EndGetMore(System.IAsyncResult asyncResult) {
            Microsoft.Web.Services3.SoapEnvelope results = this.EndSendRequestResponse(asyncResult);
            return ((GetMoreResponse)(results.GetBodyObject(typeof(GetMoreResponse), this.SoapServiceAttribute.TargetNamespace)));
        }
        
        public void GetMoreAsync(GetMore GetMore1) {
            this.GetMoreAsync(GetMore1, null);
        }
        
        public void GetMoreAsync(GetMore GetMore1, object userState) {
            if ((this.GetMoreAsyncCallback == null)) {
                this.GetMoreAsyncCallback = new System.AsyncCallback(this.OnGetMoreOperationCompleted);
            }
            this.BeginSendRequestResponse("GetMore", GetMore1, this.GetMoreAsyncCallback, userState);
        }
        
        private void OnGetMoreOperationCompleted(System.IAsyncResult asyncResult) {
            if (((this.GetMoreCompleted != null) 
                        && asyncResult.IsCompleted)) {
                object[] results = new object[] {
                        null};
                System.Exception error = null;
                try {
                    Microsoft.Web.Services3.SoapEnvelope envelope = this.EndSendRequestResponse(asyncResult);
                    results[0] = ((GetMoreResponse)(envelope.GetBodyObject(typeof(GetMoreResponse), this.SoapServiceAttribute.TargetNamespace)));
                }
                catch (System.Exception ex) {
                    error = ex;
                }
                this.GetMoreCompleted(this, new GetMoreCompletedEventArgs(results, error, false, asyncResult.AsyncState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class IsEventTypeSupported {
        
        private string eventTypeField;
        
        private string clientAppIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ClientAppID {
            get {
                return this.clientAppIDField;
            }
            set {
                this.clientAppIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class PagingCookie {
        
        private string cookieField;
        
        private string timeToLiveField;
        
        private string backOffTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Cookie {
            get {
                return this.cookieField;
            }
            set {
                this.cookieField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="duration")]
        public string TimeToLive {
            get {
                return this.timeToLiveField;
            }
            set {
                this.timeToLiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="duration")]
        public string BackOffTime {
            get {
                return this.backOffTimeField;
            }
            set {
                this.backOffTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class EventNotification {
        
        private string eventTypeField;
        
        private System.DateTime timeStampField;
        
        private string eventBodyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EventBody {
            get {
                return this.eventBodyField;
            }
            set {
                this.eventBodyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class EventNotificationPage {
        
        private EventNotification[] eventNotificationsField;
        
        private bool morePagesExistField;
        
        private bool morePagesExistFieldSpecified;
        
        private PagingCookie pagingCookieField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public EventNotification[] EventNotifications {
            get {
                return this.eventNotificationsField;
            }
            set {
                this.eventNotificationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool MorePagesExist {
            get {
                return this.morePagesExistField;
            }
            set {
                this.morePagesExistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MorePagesExistSpecified {
            get {
                return this.morePagesExistFieldSpecified;
            }
            set {
                this.morePagesExistFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PagingCookie PagingCookie {
            get {
                return this.pagingCookieField;
            }
            set {
                this.pagingCookieField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class EventTypeDetails {
        
        private string eventTypeField;
        
        private string eventTypeNameField;
        
        private string eventTypeDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EventTypeName {
            get {
                return this.eventTypeNameField;
            }
            set {
                this.eventTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EventTypeDescription {
            get {
                return this.eventTypeDescriptionField;
            }
            set {
                this.eventTypeDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class IsEventTypeSupportedResponse {
        
        private bool isSupportedField;
        
        private string clientAppIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsSupported {
            get {
                return this.isSupportedField;
            }
            set {
                this.isSupportedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ClientAppID {
            get {
                return this.clientAppIDField;
            }
            set {
                this.clientAppIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class GetSupportedEventTypes {
        
        private string matchStringField;
        
        private string clientAppIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MatchString {
            get {
                return this.matchStringField;
            }
            set {
                this.matchStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ClientAppID {
            get {
                return this.clientAppIDField;
            }
            set {
                this.clientAppIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class GetEvents {
        
        private string eventTypeField;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private uint limitField;
        
        private bool limitFieldSpecified;
        
        private uint eventsPerPageField;
        
        private bool eventsPerPageFieldSpecified;
        
        private string clientAppIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified), CLSCompliant(false)]
        public uint Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimitSpecified {
            get {
                return this.limitFieldSpecified;
            }
            set {
                this.limitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified), CLSCompliant(false)]
        public uint EventsPerPage {
            get {
                return this.eventsPerPageField;
            }
            set {
                this.eventsPerPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventsPerPageSpecified {
            get {
                return this.eventsPerPageFieldSpecified;
            }
            set {
                this.eventsPerPageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ClientAppID {
            get {
                return this.clientAppIDField;
            }
            set {
                this.clientAppIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class GetEventsResponse {
        
        private EventNotificationPage resultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EventNotificationPage Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class GetMore {
        
        private PagingCookie pagingCookieField;
        
        private uint eventsPerPageField;
        
        private bool eventsPerPageFieldSpecified;
        
        private string clientAppIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PagingCookie PagingCookie {
            get {
                return this.pagingCookieField;
            }
            set {
                this.pagingCookieField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified), CLSCompliant(false)]
        public uint EventsPerPage {
            get {
                return this.eventsPerPageField;
            }
            set {
                this.eventsPerPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EventsPerPageSpecified {
            get {
                return this.eventsPerPageFieldSpecified;
            }
            set {
                this.eventsPerPageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ClientAppID {
            get {
                return this.clientAppIDField;
            }
            set {
                this.clientAppIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WseWsdl3", "3.0.5305.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://notifications.amazon.com/doc/2007-01-16/")]
    public partial class GetMoreResponse {
        
        private EventNotificationPage resultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EventNotificationPage Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    public delegate void IsEventTypeSupportedCompletedEventHandler(object sender, IsEventTypeSupportedCompletedEventArgs e);
    
    public partial class IsEventTypeSupportedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEventTypeSupportedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IsEventTypeSupportedResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IsEventTypeSupportedResponse)(this.results[0]));
            }
        }
    }
    
    public delegate void GetSupportedEventTypesCompletedEventHandler(object sender, GetSupportedEventTypesCompletedEventArgs e);
    
    public partial class GetSupportedEventTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportedEventTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EventTypeDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventTypeDetails[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetEventsCompletedEventHandler(object sender, GetEventsCompletedEventArgs e);
    
    public partial class GetEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GetEventsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetEventsResponse)(this.results[0]));
            }
        }
    }
    
    public delegate void GetMoreCompletedEventHandler(object sender, GetMoreCompletedEventArgs e);
    
    public partial class GetMoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GetMoreResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetMoreResponse)(this.results[0]));
            }
        }
    }
}
